Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/15_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/15_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 129, 130, 131, 132, 136, 137, 139, 140, 141, 151, 152, 153, 273, 324, 327, 366, 368, 683, 690, 729, 735, 771, 773, 775, 777, 810, 982, 984, 994, 1018, 1021, 1099, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 170, 175, 180, 185, 190, 195, 200, 201, 202, 203, 204, 207, 211, 212, 217, 220, 225, 226, 231, 234, 237, 242, 247, 250, 255, 260, 265, 268, 273, 278, 279, 280, 285, 290, 295, 300, 301, 302, 305, 306, 307, 312, 313, 318, 321, 324, 329, 330, 335, 340, 345, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 399, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 606, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 678, 683, 684, 689, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 764, 765, 766, 767, 768, 769, 770, 771, 773, 778, 782, 785, 789, 794, 798, 802, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 824, 825, 826, 827, 828, 829, 830, 835, 838, 841, 844, 847, 850, 853, 857, 860, 861, 864, 867, 870, 873, 876, 877, 880, 883, 886, 889, 892, 895, 898, 901, 902, 907, 912, 917, 918, 923, 927, 931, 935, 939, 943, 948, 952, 957, 958, 962, 966, 970, 974, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1006, 1007, 1008, 1011, 1012, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029, 1034, 1039, 1044, 1045, 1050, 1055, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1089, 1094, 1099, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1099], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 71, 72, 73, 76, 77, 78, 79, 116, 117, 124, 125, 126, 127, 129, 133, 134, 136, 137, 139, 141, 152, 153, 683, 736, 1006, 1007, 1011, 1099, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 129, 130, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147], "base": [0, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 128, 130, 136, 152, 203, 234, 235, 236, 273, 366, 368, 399, 505, 508, 560, 563, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 578, 579, 627, 628, 630, 683, 719, 744, 753, 771, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1056, 1059, 1107, 1108, 1109, 1112, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "object": [0, 73, 76, 77, 78, 79, 124, 138, 141, 203, 220, 223, 273, 313, 316, 366, 390, 394, 771, 982, 985, 987, 989, 990, 991, 996, 997, 998, 999, 1006, 1017, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1134], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 73, 76, 77, 78, 79, 119, 127, 131, 136, 138, 139, 140, 141, 273, 274, 275, 276, 277, 366, 367, 368, 771, 772, 1006, 1007, 1011, 1099, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "choose_random_backend": 0, "exclud": [0, 2, 122, 136, 203, 204, 205, 1006, 1012, 1014], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 315, 316, 317, 318, 320, 321, 323, 324, 326, 327, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 365, 366, 371, 372, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 723, 725, 726, 730, 736, 738, 741, 742, 743, 744, 745, 746, 748, 752, 753, 759, 760, 762, 765, 766, 767, 768, 771, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 876, 877, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 988, 993, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 73, 78, 79, 119, 126], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 32, 76, 77, 136, 138, 140, 366, 389, 683, 742, 1110, 1111, 1133, 1134], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 136, 138, 140, 683, 735, 1110, 1111, 1133, 1134], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 992, 993, 994, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1104, 1110, 1111, 1121, 1130, 1131, 1137, 1141], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 73, 76, 77, 78, 79, 126, 130, 132, 136, 141, 152, 153, 273, 306, 318, 319, 321, 322, 329, 364, 365, 366, 378, 379, 383, 385, 683, 717, 718, 721, 726, 730, 737, 739, 751, 771, 811, 982, 983, 992, 993, 1099], "prioriti": [0, 4, 19, 76, 77, 133], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 134, 136, 138, 139, 200, 201, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 351, 354, 399, 400, 403, 415, 418, 420, 423, 425, 428, 475, 478, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 689, 690, 694, 704, 711, 735, 742, 812, 815, 819, 822, 828, 829, 830, 833, 841, 843, 917, 952, 955, 982, 988, 1000, 1001, 1004, 1023, 1029, 1033, 1055, 1060, 1063, 1080, 1083, 1088, 1089, 1092, 1102, 1104, 1110, 1111, 1133, 1134], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 33, 34, 35, 36, 76, 77, 118, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 202, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 318, 319, 321, 322, 366, 372, 388, 399, 632, 635, 683, 692, 771, 778, 780, 785, 787, 794, 796, 802, 804, 829, 880, 882, 883, 885, 982, 988, 994, 1055, 1076, 1079, 1084, 1087, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "paramet": [0, 4, 5, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 121, 124, 138, 139, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 278, 279, 280, 283, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 356, 357, 358, 359, 360, 365, 366, 369, 370, 371, 372, 373, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 742, 744, 745, 747, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1102, 1104, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 94, 95, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 208, 212, 213, 215, 220, 223, 225, 226, 227, 228, 229, 230, 237, 240, 242, 243, 245, 250, 251, 253, 268, 270, 272, 273, 295, 296, 297, 298, 299, 351, 354, 366, 372, 379, 383, 388, 389, 399, 525, 528, 657, 660, 683, 704, 711, 712, 713, 714, 715, 716, 757, 771, 778, 780, 794, 796, 812, 819, 820, 821, 822, 823, 824, 827, 829, 841, 843, 880, 882, 892, 894, 917, 935, 938, 948, 951, 958, 961, 978, 979, 980, 981, 982, 984, 994, 995, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1018, 1022, 1023, 1024, 1028, 1034, 1038, 1055, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1110, 1111, 1121, 1129, 1132, 1137, 1138, 1139, 1140, 1141, 1142], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 37, 38, 43, 44, 53, 54, 55, 56, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 295, 296, 297, 298, 299, 300, 307, 310, 313, 316, 324, 327, 329, 365, 366, 373, 376, 379, 383, 385, 387, 388, 389, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 635, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 701, 702, 704, 711, 712, 713, 714, 715, 716, 717, 725, 729, 737, 738, 739, 741, 742, 759, 760, 762, 769, 771, 778, 780, 782, 783, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 807, 809, 810, 812, 827, 829, 830, 832, 834, 835, 837, 841, 843, 857, 859, 877, 879, 880, 882, 892, 894, 895, 897, 901, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 922, 923, 926, 935, 938, 943, 946, 952, 953, 954, 955, 956, 957, 962, 965, 982, 987, 988, 989, 990, 995, 996, 997, 998, 999, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1104, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 76, 77, 129, 130, 134, 138, 153, 683, 765, 1099], "infer": [0, 4, 35, 36, 80, 81, 118, 127, 131, 132, 136, 141, 200, 201, 203, 204, 205, 207, 208, 212, 213, 215, 225, 226, 227, 228, 229, 230, 242, 243, 245, 250, 251, 253, 268, 270, 272, 273, 306, 399, 525, 528, 683, 722, 750, 917, 948, 951], "when": [0, 4, 14, 15, 18, 19, 20, 53, 54, 73, 76, 77, 78, 79, 98, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 273, 280, 283, 399, 415, 418, 510, 513, 627, 630, 683, 694, 729, 753, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 982, 993, 1018, 1019, 1020, 1022, 1055, 1060, 1063, 1068, 1071, 1076, 1079, 1084, 1087, 1099, 1133, 1134], "global": [0, 4, 5, 6, 12, 57, 58, 73, 76, 77, 78, 79, 102, 103, 126, 127, 131, 132, 136, 273, 301, 302, 303, 305, 306, 366, 387, 388, 389, 683, 719, 720, 740, 744, 745, 747, 752, 753, 771, 811, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 33, 34, 43, 44, 45, 46, 64, 76, 77, 88, 89, 90, 91, 109, 118, 119, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 273, 306, 356, 359, 366, 372, 386, 387, 388, 389, 399, 435, 438, 683, 684, 685, 686, 687, 688, 743, 744, 745, 746, 747, 748, 749, 771, 778, 780, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 829, 835, 837, 857, 859, 861, 863, 870, 872, 877, 879, 982, 983, 992, 993, 994, 998, 999, 1006, 1016, 1018, 1019, 1024, 1028, 1029, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1076, 1079, 1084, 1087, 1121, 1130, 1137, 1138, 1139, 1140, 1141, 1142], "ret": [0, 4, 5, 12, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 121, 125, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 278, 279, 280, 283, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 307, 310, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 365, 366, 369, 370, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 742, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 992, 993, 994, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1102, 1104, 1110, 1111, 1137, 1141], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 280, 283, 295, 296, 297, 298, 299, 306, 307, 310, 313, 316, 318, 319, 321, 322, 324, 327, 340, 343, 345, 348, 356, 359, 364, 365, 366, 372, 373, 376, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 428, 429, 435, 436, 437, 438, 439, 440, 443, 445, 448, 450, 453, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 505, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 530, 533, 540, 543, 550, 553, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 700, 701, 708, 711, 712, 713, 714, 715, 716, 718, 720, 721, 732, 734, 743, 746, 748, 750, 751, 757, 759, 760, 761, 762, 763, 764, 766, 767, 768, 771, 773, 774, 775, 776, 777, 789, 790, 791, 792, 793, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 850, 852, 861, 863, 867, 869, 880, 882, 886, 888, 889, 891, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 969, 982, 985, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1076, 1079, 1080, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 33, 34, 35, 36, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 295, 297, 299, 306, 351, 354, 366, 372, 388, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 604, 607, 609, 610, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 688, 712, 714, 716, 729, 759, 760, 762, 771, 778, 780, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 811, 829, 830, 831, 832, 833, 834, 835, 837, 857, 859, 861, 863, 870, 872, 873, 875, 877, 879, 880, 882, 892, 894, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 922, 931, 934, 935, 938, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 978, 979, 980, 982, 994, 995, 1001, 1003, 1005, 1006, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "import": [0, 4, 15, 19, 20, 71, 72, 116, 117, 119, 121, 122, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 366, 386, 387, 1099, 1105], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 43, 44, 76, 77, 88, 89, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 683, 759, 760, 761, 762, 763, 1055, 1056, 1059, 1099], "np": [0, 4, 120, 124, 129, 131, 132, 133, 138, 139, 141, 399, 540, 543, 1099], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 130, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 209, 210, 212, 215, 216, 220, 223, 224, 226, 227, 228, 229, 230, 237, 240, 242, 245, 246, 250, 253, 254, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 272, 273, 280, 283, 284, 290, 293, 294, 295, 296, 297, 298, 299, 306, 307, 310, 311, 313, 316, 324, 327, 340, 343, 366, 372, 373, 376, 377, 379, 383, 388, 390, 391, 394, 395, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 448, 450, 453, 454, 460, 461, 462, 463, 464, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 500, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525, 528, 530, 533, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 555, 558, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 590, 593, 594, 605, 606, 612, 615, 616, 622, 625, 626, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 665, 666, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 691, 692, 693, 695, 696, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 722, 724, 725, 727, 728, 729, 731, 732, 733, 734, 738, 750, 754, 757, 759, 760, 761, 762, 763, 764, 769, 770, 771, 782, 783, 789, 790, 791, 792, 793, 807, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 857, 859, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 880, 882, 883, 885, 886, 888, 889, 891, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 973, 974, 977, 982, 983, 985, 988, 992, 993, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1043, 1044, 1045, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1132], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 241, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 280, 283, 285, 287, 288, 289, 290, 293, 295, 297, 298, 299, 306, 307, 310, 313, 316, 324, 327, 330, 333, 335, 338, 340, 343, 345, 348, 351, 354, 360, 366, 372, 373, 376, 379, 383, 385, 389, 390, 394, 399, 400, 402, 403, 404, 405, 408, 409, 410, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 679, 682, 683, 684, 686, 687, 688, 691, 692, 693, 695, 696, 698, 700, 701, 702, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 722, 724, 725, 726, 727, 728, 729, 731, 732, 734, 737, 738, 739, 741, 742, 743, 748, 750, 754, 757, 759, 760, 762, 763, 764, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 780, 785, 787, 789, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 918, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 945, 946, 947, 948, 951, 952, 954, 955, 956, 957, 958, 960, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 984, 985, 994, 995, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1102, 1104, 1121, 1129, 1132], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 122, 124, 127, 130, 135, 136, 138, 139, 140, 141, 153, 164, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 188, 195, 196, 197, 198, 199, 202, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 268, 272, 273, 280, 283, 295, 296, 297, 298, 299, 307, 310, 313, 316, 340, 343, 366, 372, 373, 376, 378, 379, 381, 383, 387, 390, 394, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 430, 433, 435, 436, 437, 438, 439, 445, 448, 450, 453, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 530, 533, 540, 543, 550, 553, 555, 558, 575, 576, 577, 578, 579, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 691, 692, 695, 696, 698, 701, 708, 711, 712, 713, 714, 715, 716, 732, 734, 750, 757, 771, 773, 774, 775, 776, 777, 789, 790, 791, 792, 793, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 842, 843, 850, 852, 853, 856, 857, 859, 861, 863, 867, 869, 870, 872, 873, 875, 880, 882, 886, 887, 888, 889, 891, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1072, 1075, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099], "0": [0, 4, 19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 125, 136, 138, 139, 140, 141, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 217, 218, 219, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 272, 273, 280, 283, 295, 297, 298, 299, 307, 310, 313, 316, 324, 327, 340, 343, 366, 369, 372, 373, 376, 378, 379, 383, 386, 387, 388, 389, 395, 397, 399, 400, 401, 403, 404, 405, 408, 410, 413, 415, 418, 419, 420, 423, 425, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 439, 440, 443, 445, 448, 455, 458, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 522, 523, 524, 530, 533, 540, 543, 555, 558, 560, 563, 565, 568, 575, 578, 605, 606, 607, 610, 612, 615, 617, 620, 627, 630, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 691, 692, 695, 696, 698, 700, 701, 702, 708, 711, 712, 713, 714, 715, 716, 723, 732, 734, 738, 741, 742, 750, 757, 759, 760, 761, 762, 763, 764, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 842, 843, 850, 852, 880, 882, 886, 888, 889, 890, 891, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 944, 945, 946, 947, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 974, 976, 982, 985, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "print": [0, 4, 5, 6, 12, 18, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 122, 124, 130, 136, 138, 139, 140, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 280, 283, 295, 296, 297, 298, 299, 307, 310, 318, 319, 321, 322, 340, 343, 365, 366, 373, 376, 379, 380, 381, 382, 383, 385, 388, 395, 396, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 428, 429, 435, 436, 437, 438, 439, 440, 443, 445, 448, 450, 453, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 530, 533, 540, 543, 550, 553, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 700, 701, 708, 711, 712, 713, 714, 715, 716, 720, 739, 750, 757, 759, 760, 761, 762, 763, 764, 771, 773, 774, 776, 777, 789, 790, 791, 792, 793, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 850, 852, 867, 869, 880, 882, 886, 888, 889, 891, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 931, 934, 935, 938, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1072, 1075, 1076, 1079, 1080, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 278, 279, 280, 283, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1104, 1107, 1108, 1109, 1137, 1140, 1142], "py": [0, 4, 5, 19, 119, 120, 121, 124, 125, 126, 127, 131, 132, 134, 136, 138, 140, 141, 1006, 1007, 1011, 1137, 1138, 1139, 1140, 1142], "noqa": [0, 4, 5, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 415, 418, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 540, 543, 555, 558, 605, 606, 617, 620, 637, 640, 642, 645, 657, 660, 662, 665, 672, 676, 677, 829, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1055, 1060, 1063], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 220, 223, 226, 228, 230, 234, 235, 255, 257, 259, 260, 262, 264, 273, 278, 279, 280, 283, 295, 297, 299, 300, 312, 318, 319, 321, 322, 329, 335, 338, 345, 348, 350, 359, 360, 365, 366, 369, 370, 371, 372, 378, 379, 383, 384, 385, 386, 387, 388, 389, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 691, 694, 695, 703, 704, 710, 712, 713, 714, 715, 716, 727, 728, 729, 731, 732, 733, 734, 736, 741, 742, 744, 745, 747, 752, 753, 756, 758, 759, 760, 762, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 954, 956, 957, 970, 973, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141], "set_backend": [0, 4, 5, 12, 126, 127, 128, 131, 273, 318, 319, 321, 322, 366, 386, 387, 1099], "ha": [0, 4, 5, 14, 15, 16, 19, 63, 64, 76, 77, 108, 109, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 136, 138, 140, 141, 152, 153, 203, 237, 240, 366, 372, 399, 400, 403, 607, 610, 627, 630, 771, 811, 829, 853, 856, 876, 877, 879, 880, 882, 889, 891, 917, 931, 934, 958, 961, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1055, 1064, 1067, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "over": [0, 4, 14, 16, 18, 69, 70, 71, 72, 76, 77, 114, 115, 116, 117, 121, 122, 124, 127, 133, 138, 153, 829, 857, 859, 886, 888, 892, 894, 895, 897, 1000, 1001, 1004, 1006, 1012, 1014, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1135, 1136], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 69, 70, 71, 72, 76, 77, 86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 366, 390, 394, 399, 400, 403, 415, 418, 420, 423, 425, 428, 475, 478, 495, 496, 497, 498, 499, 510, 513, 515, 518, 530, 533, 540, 543, 555, 558, 605, 606, 617, 618, 619, 620, 621, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 684, 685, 686, 687, 688, 704, 705, 706, 707, 708, 711, 724, 731, 732, 733, 752, 753, 771, 782, 783, 812, 815, 819, 822, 826, 828, 829, 830, 833, 841, 843, 917, 952, 955, 978, 979, 980, 981, 982, 985, 988, 992, 998, 999, 1000, 1001, 1004, 1006, 1012, 1014, 1023, 1029, 1033, 1055, 1060, 1063, 1088, 1089, 1092, 1098, 1099], "pass": [0, 4, 20, 71, 72, 73, 76, 77, 78, 79, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 138, 153, 273, 300, 366, 389, 399, 435, 438, 683, 694, 729, 771, 810, 978, 979, 980, 1110, 1111, 1133, 1134, 1137, 1141, 1143, 1144], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 45, 46, 90, 91, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 153, 771, 789, 790, 791, 792, 793, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099], "get_backend": [0, 126, 127], "specifi": [0, 5, 35, 36, 53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 98, 99, 100, 101, 114, 115, 118, 120, 124, 125, 126, 131, 132, 133, 136, 139, 140, 141, 170, 172, 174, 203, 204, 205, 211, 225, 231, 232, 234, 235, 247, 248, 255, 257, 259, 260, 262, 264, 265, 267, 273, 280, 283, 290, 293, 366, 379, 383, 385, 388, 389, 390, 394, 399, 632, 635, 683, 689, 701, 711, 712, 715, 724, 769, 829, 841, 843, 857, 859, 886, 888, 889, 891, 892, 894, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 921, 923, 926, 927, 930, 935, 938, 952, 953, 954, 955, 956, 958, 961, 962, 965, 974, 977, 982, 987, 989, 990, 996, 997, 998, 999, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1055, 1056, 1059, 1072, 1075, 1080, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "isn": [0, 5, 19, 139, 153], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 71, 72, 116, 117, 122, 124, 131, 136, 138, 139, 140, 141, 153, 683, 692, 812, 825, 826], "associ": [0, 5, 19, 124, 126, 128, 153, 399, 415, 418, 607, 610, 829, 861, 863, 870, 872, 898, 900], "option": [0, 5, 18, 19, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 295, 297, 299, 300, 301, 302, 303, 305, 306, 329, 365, 366, 372, 387, 388, 389, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 695, 696, 698, 701, 702, 703, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 725, 736, 738, 741, 742, 752, 753, 759, 760, 762, 771, 789, 791, 793, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 988, 993, 994, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1022, 1023, 1029, 1030, 1032, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1137, 1138, 1139, 1141], "str": [0, 5, 29, 31, 32, 49, 50, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 131, 132, 134, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 226, 228, 230, 237, 240, 273, 278, 295, 297, 299, 300, 301, 302, 303, 312, 313, 316, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 356, 357, 358, 359, 365, 366, 369, 389, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 703, 705, 706, 707, 712, 714, 716, 736, 741, 742, 759, 760, 762, 789, 791, 793, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 830, 832, 834, 873, 875, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 978, 979, 980, 981, 982, 988, 998, 1001, 1003, 1008, 1010, 1029, 1030, 1032, 1055, 1056, 1059, 1089, 1091, 1093, 1094, 1096, 1098], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 152, 153, 771, 782, 783, 1099, 1105], "want": [0, 5, 15, 17, 18, 19, 71, 72, 116, 117, 124, 139, 140, 141, 153], "retriev": [0, 5, 19, 683, 689], "i": [0, 5, 19, 21, 118, 124, 136, 139, 141, 203, 204, 205, 237, 240, 399, 400, 403, 435, 438, 455, 458, 465, 468, 475, 478, 515, 518, 520, 523, 535, 538, 605, 606, 612, 615, 627, 630, 632, 635, 683, 691, 692, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 819, 822, 829, 835, 837, 853, 856, 861, 863, 870, 872, 877, 879, 880, 882, 889, 891, 895, 897, 917, 962, 965, 982, 985, 998, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087], "e": [0, 5, 15, 16, 17, 19, 21, 118, 124, 130, 139, 153, 202, 203, 237, 240, 273, 279, 351, 354, 366, 369, 399, 400, 403, 435, 438, 455, 458, 465, 468, 475, 478, 505, 508, 515, 518, 520, 523, 535, 538, 560, 563, 570, 573, 605, 606, 612, 615, 627, 630, 632, 635, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 829, 835, 837, 853, 856, 861, 863, 870, 872, 877, 879, 880, 882, 895, 897, 917, 962, 965, 982, 985, 998, 999, 1006, 1011, 1012, 1014, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 63, 64, 76, 77, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 138, 139, 141, 153, 203, 204, 205, 237, 240, 273, 285, 288, 295, 298, 366, 389, 399, 415, 419, 460, 464, 605, 606, 683, 684, 686, 687, 688, 712, 716, 735, 738, 741, 742, 759, 760, 762, 829, 830, 834, 853, 856, 857, 859, 867, 869, 873, 875, 892, 894, 895, 897, 917, 918, 922, 931, 934, 935, 938, 952, 955, 956, 958, 961, 1000, 1001, 1003, 1004, 1005, 1008, 1010, 1018, 1019, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1055, 1056, 1059, 1099], "default": [0, 5, 19, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 295, 297, 299, 301, 302, 303, 305, 306, 307, 310, 356, 359, 364, 366, 372, 373, 376, 381, 384, 385, 386, 387, 388, 389, 390, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 695, 696, 698, 701, 702, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 734, 735, 736, 738, 740, 741, 742, 747, 750, 752, 753, 759, 760, 762, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 988, 992, 993, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "torch": [0, 5, 12, 19, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 200, 201, 273, 318, 319, 321, 322, 340, 343, 366, 386, 387, 917, 931, 934, 958, 961, 1099], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 120, 124, 125, 131, 132, 133, 136, 141, 153, 1099], "mxnet": [0, 5, 15, 20, 131, 132, 133, 136, 141, 1099], "either": [0, 5, 12, 18, 19, 21, 41, 42, 76, 77, 86, 87, 121, 122, 124, 126, 127, 130, 131, 132, 136, 138, 139, 153, 203, 220, 223, 399, 415, 418, 435, 438, 540, 541, 542, 543, 544, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 632, 635, 642, 645, 647, 650, 672, 676, 683, 704, 731, 735, 736, 829, 853, 856, 978, 979, 980, 981, 1055, 1072, 1075, 1080, 1083, 1121, 1132, 1133, 1134], "doesn": [0, 5, 18, 21, 122, 124, 131, 136, 153], "matter": [0, 5, 14, 122], "been": [0, 5, 19, 120, 121, 124, 126, 127, 130, 131, 132, 134, 136, 152, 153, 366, 372, 683, 705, 706, 707, 1006, 1007], "ivy_np": [0, 5, 124], "us": [0, 5, 12, 15, 16, 17, 19, 20, 55, 56, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 164, 165, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 202, 273, 312, 313, 316, 324, 327, 366, 380, 384, 387, 388, 389, 390, 394, 396, 398, 399, 420, 423, 445, 448, 460, 462, 470, 473, 485, 488, 530, 533, 555, 558, 612, 615, 617, 620, 657, 660, 683, 711, 719, 720, 735, 741, 742, 744, 745, 752, 753, 771, 773, 776, 778, 780, 794, 796, 798, 800, 812, 818, 824, 825, 827, 828, 829, 838, 840, 841, 843, 857, 859, 901, 902, 905, 917, 931, 934, 935, 938, 943, 946, 952, 953, 954, 955, 956, 966, 969, 978, 979, 980, 981, 982, 983, 985, 991, 992, 993, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1055, 1056, 1059, 1088, 1089, 1092, 1099, 1121, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 120, 122, 124, 126, 129, 133, 140], "call": [0, 6, 12, 15, 21, 73, 78, 79, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 366, 389, 683, 740, 747, 765, 771, 782, 783, 982, 983, 988, 992, 993, 1121, 1132, 1133, 1134, 1137, 1141], "nativ": [0, 6, 29, 32, 33, 34, 35, 36, 76, 77, 124, 125, 131, 133, 138, 139, 203, 242, 243, 245, 273, 278, 279, 300, 306, 366, 369, 370, 371, 372, 373, 376, 384, 395, 398, 683, 729, 731, 734, 758, 1110, 1111], "native_arrai": [0, 6, 12, 35, 36, 41, 42, 43, 44, 80, 81, 86, 87, 88, 89, 124, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 226, 229, 237, 240, 268, 272, 273, 295, 298, 307, 310, 313, 316, 324, 327, 340, 343, 366, 383, 399, 400, 403, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 490, 491, 493, 495, 496, 498, 510, 513, 515, 518, 520, 521, 523, 530, 533, 540, 543, 555, 558, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 677, 683, 684, 685, 686, 687, 688, 692, 700, 701, 708, 711, 712, 715, 734, 757, 759, 760, 762, 763, 764, 771, 773, 776, 789, 792, 812, 815, 818, 819, 822, 828, 829, 835, 837, 838, 840, 841, 843, 886, 888, 901, 902, 905, 912, 915, 917, 918, 921, 931, 934, 935, 938, 943, 946, 952, 955, 957, 958, 961, 966, 969, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1033, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1092], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 122, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 140, 141, 153, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 203, 204, 205, 206, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 268, 272, 273, 280, 283, 295, 296, 297, 298, 299, 307, 310, 313, 316, 340, 343, 366, 372, 373, 376, 379, 382, 383, 390, 394, 399, 400, 401, 402, 403, 405, 408, 410, 413, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 428, 429, 435, 436, 437, 438, 439, 445, 448, 450, 453, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 530, 533, 540, 543, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 605, 606, 612, 615, 617, 620, 627, 630, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 700, 701, 708, 711, 712, 713, 714, 715, 716, 732, 734, 738, 741, 742, 750, 753, 757, 759, 760, 761, 762, 763, 764, 769, 771, 773, 774, 775, 776, 777, 789, 791, 792, 793, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 850, 852, 861, 863, 867, 869, 877, 879, 880, 882, 886, 888, 889, 891, 892, 893, 894, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 939, 942, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 965, 966, 969, 982, 985, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1063, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 727, 728, 729, 731, 732, 733, 734, 738, 741, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 781, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 992, 993, 994, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132], "ndarrai": [0, 6, 35, 36, 120, 129, 131, 132, 133, 138, 203, 207, 208, 209, 242, 245, 683, 759, 763], "Or": [0, 6, 139], "jaxlib": [0, 6, 18, 120, 131, 132, 138], "xla_extens": [0, 6, 120, 131, 132, 138], "devicearrai": [0, 6, 138], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 130, 133, 134, 139, 140, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 280, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 302, 304, 307, 308, 309, 310, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 333, 334, 335, 337, 339, 340, 342, 343, 344, 345, 347, 348, 349, 351, 353, 355, 365, 366, 372, 373, 374, 375, 376, 377, 380, 381, 384, 389, 396, 398, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 448, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 696, 697, 701, 704, 708, 710, 712, 714, 716, 718, 721, 722, 729, 731, 732, 734, 735, 743, 746, 748, 750, 751, 759, 760, 762, 766, 767, 768, 769, 771, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 811, 829, 830, 831, 832, 833, 834, 853, 855, 857, 858, 859, 880, 882, 895, 896, 897, 902, 904, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 957, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 978, 979, 980, 981, 982, 983, 984, 988, 992, 993, 994, 995, 1001, 1003, 1005, 1006, 1007, 1012, 1013, 1015, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1111, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 127], "unset": [0, 12, 127, 136, 138], "adjust": [0, 12, 1055, 1076, 1079, 1084, 1087], "dict": [0, 12, 29, 31, 32, 33, 34, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 130, 134, 139, 140, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 366, 372, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 705, 706, 707, 712, 714, 716, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 982, 984, 985, 988, 991, 994, 995, 998, 999, 1001, 1003, 1008, 1010, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098], "previous": [0, 12, 18, 21, 124, 126, 136, 683, 694], "otherwis": [0, 12, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 45, 46, 51, 52, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 129, 130, 131, 132, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 226, 228, 230, 273, 280, 283, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 330, 333, 340, 343, 366, 372, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 693, 712, 714, 716, 759, 760, 762, 765, 771, 789, 790, 791, 792, 793, 807, 829, 830, 831, 832, 833, 834, 838, 840, 892, 894, 895, 897, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 978, 979, 980, 982, 995, 1001, 1003, 1005, 1018, 1019, 1020, 1022, 1029, 1030, 1032, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "implement": [0, 12, 20, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 273, 280, 283, 351, 354, 366, 390, 394, 399, 400, 403, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 505, 508, 510, 513, 560, 563, 565, 568, 570, 573, 575, 578, 607, 610, 627, 630, 632, 635, 647, 650, 652, 655, 672, 676, 677, 829, 844, 846, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1099], "wa": [0, 12, 15, 19, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 122, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 712, 714, 716, 759, 760, 762, 765, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 982, 995, 1001, 1003, 1005, 1029, 1030, 1032, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "last": [0, 12, 16, 19, 53, 54, 69, 70, 76, 77, 98, 99, 114, 115, 122, 124, 127, 134, 153, 164, 185, 188, 366, 372, 771, 811, 812, 826, 829, 835, 837, 841, 843, 857, 859, 889, 891, 892, 894, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 935, 938, 952, 955, 957, 962, 965, 1044, 1045, 1048, 1050, 1053, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1131], "henc": [0, 12, 124, 130, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "here": [0, 12, 18, 19, 20, 119, 120, 122, 124, 125, 130, 136, 137, 138, 139, 140, 141, 152, 153], "tensor": [0, 12, 14, 76, 77, 119, 120, 125, 126, 127, 129, 131, 132, 133, 136, 138, 139, 140, 141, 153, 203, 231, 232, 234, 235, 273, 307, 310, 399, 445, 448, 605, 606, 683, 738, 741, 742, 812, 824, 826, 829, 886, 888, 917, 931, 934, 948, 951, 957, 1006, 1007, 1018, 1021, 1099, 1121, 1129, 1131], "howev": [0, 12, 15, 18, 20, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 138, 139, 140, 141, 153], "befor": [0, 12, 18, 19, 20, 76, 77, 121, 124, 129, 131, 132, 133, 136, 139, 153, 366, 389, 399, 678, 682, 812, 827, 828, 978, 979, 980, 982, 994, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1072, 1075, 1080, 1083], "becom": [0, 12, 14, 16, 19, 122, 130, 136, 141, 153, 917, 918, 921], "swap": [0, 12, 917, 966, 969], "python": [0, 12, 13, 14, 15, 18, 19, 21, 124, 134, 136, 138, 139, 153, 203, 204, 205, 366, 384, 398, 399, 632, 635, 1099, 1105], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 132, 135, 138, 141, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1147], "op": [0, 12, 119, 136, 153], "eagertensor": [0, 12], "def": [1, 20, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 274, 275, 276, 277, 367, 772, 1099, 1113, 1116, 1119], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1147], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 32, 34, 76, 77, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 141, 273, 318, 319, 321, 322, 329, 365, 366, 380, 382, 396, 683, 726, 729, 730, 736, 758, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 810, 1099, 1105, 1110, 1111, 1137, 1138, 1139, 1140, 1141, 1142], "ml": [13, 15, 16, 17, 135, 136, 137, 139, 140, 141, 152, 1099, 1105], "explos": [13, 15, 1099], "A": [13, 14, 15, 16, 21, 35, 36, 69, 70, 73, 76, 77, 78, 79, 100, 101, 114, 115, 118, 124, 126, 130, 131, 132, 136, 139, 153, 203, 217, 218, 242, 243, 245, 366, 389, 399, 622, 625, 683, 720, 757, 829, 867, 869, 876, 877, 879, 880, 882, 917, 918, 920, 922, 957, 962, 965, 982, 983, 985, 987, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1055, 1056, 1059, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1143, 1144], "huge": [13, 15, 139, 1099], "number": [13, 14, 18, 23, 26, 27, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 100, 101, 108, 109, 114, 115, 122, 124, 130, 132, 133, 136, 139, 141, 200, 201, 202, 203, 204, 205, 207, 209, 217, 218, 231, 232, 234, 235, 237, 240, 242, 245, 273, 285, 288, 306, 312, 313, 316, 324, 327, 330, 333, 335, 338, 340, 343, 345, 348, 351, 354, 366, 381, 382, 383, 399, 415, 418, 435, 438, 475, 478, 515, 518, 520, 523, 605, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 678, 682, 683, 684, 687, 710, 720, 722, 737, 764, 770, 812, 827, 829, 841, 843, 844, 846, 861, 863, 876, 880, 882, 892, 894, 917, 918, 919, 920, 921, 922, 927, 930, 939, 942, 943, 946, 952, 953, 954, 955, 956, 957, 962, 965, 970, 973, 974, 977, 978, 979, 980, 981, 1006, 1007, 1016, 1018, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132], "tool": [13, 16, 19, 137, 141, 152, 153, 1099], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 313, 316, 366, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 705, 706, 707, 709, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 789, 790, 791, 792, 793, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "explod": [13, 14, 1099], "onto": [13, 14, 982, 988, 994, 1099], "scene": [13, 14, 118, 135, 137, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1099], "b": [13, 16, 17, 23, 26, 27, 41, 42, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 122, 126, 127, 130, 135, 136, 137, 139, 140, 141, 151, 195, 196, 198, 203, 226, 228, 229, 230, 268, 272, 273, 295, 297, 298, 299, 307, 310, 340, 343, 399, 400, 402, 403, 404, 415, 417, 418, 419, 420, 423, 425, 427, 428, 429, 435, 437, 438, 439, 445, 448, 460, 462, 463, 464, 470, 473, 475, 477, 478, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 510, 512, 513, 515, 517, 518, 520, 522, 523, 524, 530, 533, 540, 543, 555, 558, 605, 606, 612, 615, 617, 620, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 686, 687, 688, 691, 692, 700, 701, 708, 711, 712, 714, 715, 716, 759, 760, 762, 763, 764, 771, 773, 775, 776, 777, 789, 791, 792, 793, 812, 815, 818, 819, 821, 822, 823, 828, 829, 830, 832, 833, 834, 835, 837, 838, 840, 841, 843, 867, 869, 877, 879, 886, 888, 898, 900, 901, 902, 904, 905, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 921, 922, 931, 934, 935, 938, 943, 945, 946, 947, 952, 954, 955, 956, 958, 960, 961, 962, 965, 966, 969, 982, 985, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1014, 1018, 1020, 1021, 1022, 1023, 1029, 1030, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1098, 1099, 1105], "why": [13, 15, 19, 120, 130, 133, 138, 1099], "unifi": [13, 15, 76, 77, 129, 136, 153, 366, 389, 1099], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 35, 36, 41, 42, 51, 52, 73, 74, 75, 76, 77, 78, 79, 86, 87, 96, 97, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 185, 187, 189, 195, 196, 197, 198, 200, 201, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 290, 293, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 694, 729, 738, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 850, 852, 853, 856, 861, 863, 867, 869, 870, 872, 873, 875, 877, 879, 880, 882, 886, 888, 889, 891, 892, 894, 895, 897, 917, 948, 951, 1006, 1017, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1099], "them": [13, 14, 15, 16, 124, 127, 129, 130, 136, 138, 139, 140, 153, 1099], "c": [13, 15, 16, 17, 45, 46, 86, 87, 90, 91, 104, 105, 118, 122, 126, 130, 135, 136, 137, 139, 153, 273, 313, 316, 324, 327, 399, 617, 620, 642, 644, 645, 683, 691, 692, 700, 764, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 818, 917, 962, 965, 982, 985, 998, 999, 1008, 1010, 1018, 1021, 1055, 1056, 1059, 1076, 1079, 1084, 1087, 1099, 1105], "standard": [13, 57, 58, 102, 103, 118, 119, 120, 121, 123, 124, 129, 133, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 555, 558, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 829, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1076, 1079, 1084, 1087, 1088, 1089, 1092, 1099, 1105, 1135, 1136], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 153, 366, 389, 683, 705, 829, 886, 888, 917, 952, 955, 1018, 1022, 1099], "collabor": [13, 14, 15, 1099], "consortium": [13, 15, 1099, 1105], "data": [13, 15, 23, 26, 27, 28, 35, 36, 38, 41, 42, 45, 46, 51, 52, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 80, 81, 83, 86, 87, 90, 91, 96, 97, 100, 101, 108, 109, 114, 115, 118, 119, 120, 121, 126, 128, 130, 132, 133, 138, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 278, 279, 280, 283, 290, 293, 295, 296, 297, 298, 299, 300, 307, 310, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 356, 360, 365, 366, 369, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 692, 731, 732, 734, 754, 771, 789, 790, 791, 792, 793, 810, 812, 825, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 877, 879, 880, 882, 886, 888, 889, 891, 892, 894, 895, 897, 917, 931, 934, 935, 938, 939, 942, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 1006, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1044, 1045, 1048, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132], "api": [13, 14, 18, 19, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 139, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 555, 558, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 829, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092, 1099, 1105], "open": [14, 15, 16, 17, 18, 21, 104, 105, 121, 152, 203, 204, 205, 1006, 1008, 1009, 1010, 1012, 1014, 1099], "project": [14, 15, 16, 18, 19, 21, 119, 124, 127, 138, 140, 152, 153, 1006, 1007, 1011, 1137, 1138, 1139, 1140, 1142], "grown": 14, "consider": [14, 120, 122], "recent": [14, 15, 18, 19, 124], "year": [14, 16, 153, 1099], "especi": [14, 18], "deep": [14, 17, 19, 20, 76, 77, 130, 135, 139, 1099], "learn": [14, 15, 18, 20, 118, 126, 135, 141, 152, 399, 525, 528, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 978, 979, 980, 981, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "can": [14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 82, 83, 104, 105, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 203, 207, 208, 209, 242, 245, 273, 295, 296, 297, 298, 299, 366, 387, 388, 389, 829, 850, 852, 917, 948, 951, 1006, 1008, 1009, 1010, 1099, 1105], "seen": [14, 15, 122, 124, 138, 139], "rapidli": 14, "increas": [14, 917, 927, 930, 974, 977, 982, 994], "github": [14, 19, 20, 121, 124], "repo": [14, 15, 16, 18, 19, 123, 136, 138, 139, 140, 141, 152, 1099, 1105], "contain": [14, 18, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 41, 42, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 131, 133, 135, 136, 137, 140, 141, 153, 164, 165, 170, 175, 178, 180, 183, 185, 190, 193, 195, 197, 203, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 280, 285, 290, 295, 298, 302, 307, 310, 313, 316, 318, 321, 324, 327, 330, 333, 335, 340, 343, 345, 351, 366, 373, 379, 383, 390, 399, 400, 401, 403, 405, 406, 408, 410, 411, 413, 415, 416, 418, 420, 421, 423, 425, 426, 428, 430, 431, 433, 435, 436, 438, 440, 441, 443, 445, 446, 448, 450, 451, 453, 455, 456, 458, 460, 461, 463, 465, 466, 468, 470, 471, 473, 475, 476, 478, 480, 481, 483, 485, 486, 488, 490, 491, 493, 495, 496, 498, 500, 501, 505, 506, 508, 510, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 538, 540, 541, 543, 545, 546, 548, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 669, 671, 672, 674, 676, 677, 678, 680, 682, 683, 684, 687, 689, 692, 695, 696, 698, 700, 701, 708, 711, 712, 715, 721, 724, 733, 746, 757, 759, 763, 764, 767, 771, 773, 776, 778, 782, 785, 789, 792, 794, 798, 802, 812, 815, 818, 819, 822, 828, 829, 830, 831, 833, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 901, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 927, 931, 934, 935, 938, 939, 942, 943, 946, 948, 952, 955, 957, 958, 961, 962, 966, 969, 970, 974, 978, 979, 980, 981, 982, 995, 998, 1000, 1001, 1004, 1006, 1007, 1008, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1031, 1033, 1034, 1039, 1043, 1044, 1045, 1048, 1050, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1094, 1095, 1097, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "term": [14, 19, 130, 812, 826, 1121, 1131], "time": [14, 15, 16, 18, 19, 20, 63, 64, 108, 109, 120, 124, 126, 130, 131, 136, 139, 141, 153, 771, 778, 780, 794, 796, 812, 826, 917, 970, 973, 978, 979, 980, 981, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1121, 1132, 1133, 1134], "These": [14, 15, 16, 19, 120, 121, 122, 124, 125, 126, 130, 131, 133, 136, 137, 139, 140, 141, 153, 829, 844, 846, 1099, 1105], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 55, 56, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 154, 162, 203, 204, 205, 226, 228, 230, 366, 379, 383, 385, 389, 399, 480, 481, 482, 483, 484, 590, 593, 595, 598, 637, 640, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676, 683, 684, 685, 686, 687, 688, 691, 692, 693, 717, 721, 725, 726, 730, 737, 739, 746, 754, 767, 771, 811, 812, 825, 829, 835, 837, 853, 856, 857, 859, 861, 863, 870, 872, 880, 882, 883, 885, 892, 894, 917, 918, 919, 920, 921, 922, 935, 938, 952, 953, 954, 955, 956, 982, 984, 988, 994, 1006, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1099, 1143, 1144], "written": [14, 18, 119, 120, 121, 124, 125, 129, 133, 136, 138, 141, 153], "mani": [14, 15, 16, 18, 19, 20, 76, 77, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 153, 917, 957], "differ": [14, 15, 16, 18, 19, 41, 42, 73, 76, 77, 78, 79, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 153, 273, 313, 316, 399, 415, 418, 607, 610, 667, 669, 671, 812, 825, 917, 962, 965, 1055, 1072, 1075, 1080, 1083, 1099], "while": [14, 15, 18, 19, 73, 76, 77, 78, 79, 122, 124, 127, 133, 134, 140, 141, 153, 399, 590, 593, 595, 598, 1023, 1024, 1028, 1055, 1064, 1067], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 295, 296, 297, 298, 299, 313, 316, 324, 327, 330, 333, 340, 343, 366, 373, 374, 375, 377, 384, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 710, 711, 712, 713, 714, 716, 729, 740, 747, 759, 760, 761, 762, 771, 773, 774, 775, 777, 778, 780, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 810, 811, 812, 815, 819, 820, 821, 822, 823, 825, 828, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 857, 859, 876, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 931, 934, 935, 938, 943, 944, 945, 947, 948, 951, 952, 953, 954, 955, 956, 958, 959, 960, 962, 965, 982, 988, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1018, 1019, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1055, 1060, 1063, 1064, 1067, 1076, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1105, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "wonder": [14, 16, 138], "thing": [14, 15, 16, 18, 19, 20, 124, 127, 138, 139], "research": [14, 152], "develop": [14, 15, 16, 17, 18, 19, 20, 152, 153, 1099], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 295, 296, 297, 298, 299, 330, 333, 340, 343, 373, 374, 375, 377, 390, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 711, 712, 713, 714, 716, 729, 759, 760, 761, 762, 771, 773, 774, 775, 777, 778, 780, 789, 790, 791, 793, 812, 815, 819, 820, 821, 822, 823, 825, 828, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 931, 934, 935, 938, 943, 944, 945, 947, 952, 953, 954, 955, 956, 958, 959, 960, 978, 979, 980, 981, 982, 983, 984, 992, 993, 994, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1121, 1131], "consid": [14, 15, 76, 77, 119, 126, 137, 138, 139, 399, 590, 593, 595, 598, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "speed": [14, 124], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 41, 42, 73, 76, 77, 78, 79, 90, 91, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 153, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 366, 390, 394, 399, 470, 473, 632, 633, 662, 665, 771, 773, 775, 776, 777, 811, 812, 818, 819, 822, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1099, 1105], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 125, 136, 141, 151, 153, 366, 390, 394, 399, 510, 513, 590, 593, 595, 598, 829, 844, 846, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1099], "outdat": 14, "month": 14, "rigor": [14, 124], "maintain": [14, 19, 1044, 1045, 1048, 1050, 1053], "against": [14, 76, 77, 124, 153, 273, 285, 288, 829, 853, 856, 857, 859, 861, 863, 870, 872, 1018, 1019], "newest": 14, "version": [14, 15, 16, 18, 19, 121, 125, 131, 136, 138, 829, 844, 846, 1099], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 45, 46, 90, 91, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 237, 240, 399, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 771, 789, 790, 791, 792, 793, 810, 829, 880, 882, 889, 891, 917, 918, 921, 962, 965, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1068, 1071, 1080, 1083, 1110, 1111], "softwar": [14, 15, 18, 19], "pipelin": [14, 129, 141], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 35, 36, 55, 56, 69, 70, 73, 76, 77, 78, 79, 100, 101, 114, 115, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 153, 203, 225, 226, 227, 229, 237, 240, 399, 435, 438, 505, 508, 570, 573, 607, 610, 627, 630, 683, 725, 729, 738, 771, 811, 829, 844, 846, 861, 863, 870, 872, 873, 875, 880, 882, 883, 885, 889, 891, 892, 894, 917, 918, 919, 920, 921, 922, 927, 930, 931, 934, 939, 942, 962, 965, 974, 977, 982, 983, 993, 1006, 1007, 1018, 1021, 1055, 1076, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 141], "signific": [14, 15, 153], "bottleneck": 14, "As": [14, 19, 71, 72, 116, 117, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 139, 140, 153, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 43, 44, 57, 58, 76, 77, 82, 83, 88, 89, 102, 103, 118, 119, 121, 122, 124, 128, 130, 131, 133, 135, 138, 141, 152, 203, 211, 220, 223, 225, 226, 229, 247, 248, 250, 253, 265, 267, 268, 272, 273, 360, 399, 440, 443, 570, 573, 622, 625, 683, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 741, 742, 744, 745, 752, 753, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 917, 931, 934, 948, 951, 962, 965, 982, 987, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1110, 1111, 1121, 1131, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "futur": [14, 16, 18, 19, 138, 153, 829, 844, 846], "avail": [14, 18, 19, 76, 77, 121, 125, 132, 153, 366, 372, 380, 381, 382, 396, 683, 706], "specif": [14, 20, 76, 77, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 152, 153, 273, 351, 354, 366, 387, 390, 394, 399, 590, 593, 595, 598, 683, 705, 706, 707, 736, 829, 844, 846, 886, 888, 917, 962, 965, 978, 979, 980, 981, 1006, 1007, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1099, 1102, 1104, 1105, 1133, 1134], "quickli": [14, 16, 18, 19, 139, 140], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 124, 125, 127, 130, 133, 135, 153, 1121, 1132, 1133, 1134], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 71, 72, 116, 117, 122, 124, 125, 130, 134, 135, 138, 139, 140, 141, 153, 1099], "desir": [14, 37, 38, 76, 77, 82, 83, 125, 273, 280, 283, 295, 296, 297, 298, 299, 366, 390, 394, 683, 725, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132], "provid": [14, 18, 19, 69, 70, 76, 77, 114, 115, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 140, 152, 153, 200, 201, 203, 237, 240, 273, 301, 302, 303, 305, 306, 329, 351, 354, 365, 366, 372, 683, 704, 738, 742, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 829, 892, 894, 917, 935, 938, 962, 965, 1018, 1019, 1055, 1076, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1137, 1138, 1139, 1140, 1141, 1142], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 43, 44, 55, 56, 69, 70, 71, 72, 76, 77, 88, 89, 100, 101, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 154, 162, 200, 201, 203, 204, 205, 255, 257, 259, 260, 262, 264, 366, 379, 385, 683, 684, 687, 691, 692, 717, 739, 759, 760, 761, 762, 763, 812, 826, 829, 877, 879, 886, 888, 895, 897, 917, 935, 938, 952, 953, 954, 955, 956, 978, 979, 980, 981, 982, 983, 984, 993, 994, 995, 1006, 1007, 1012, 1014, 1088, 1093, 1099, 1102, 1104], "modern": [14, 15], "simpl": [14, 18, 19, 119, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 153, 683, 708], "scalabl": [14, 136], "manner": [14, 29, 33, 34, 76, 77, 119, 121, 124, 132, 139, 152, 153, 982, 994], "must": [14, 16, 18, 19, 20, 23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 126, 129, 130, 131, 132, 136, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 366, 389, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 705, 706, 707, 709, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1137, 1141], "determin": [14, 23, 26, 27, 41, 42, 51, 52, 69, 70, 73, 76, 77, 78, 79, 86, 87, 96, 97, 114, 115, 121, 126, 130, 131, 132, 195, 196, 197, 198, 273, 295, 298, 300, 312, 329, 330, 333, 335, 338, 340, 343, 345, 348, 365, 366, 380, 381, 382, 396, 399, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 505, 506, 507, 508, 509, 510, 512, 513, 514, 520, 521, 522, 524, 535, 538, 540, 543, 545, 548, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 600, 603, 607, 608, 609, 610, 611, 627, 628, 629, 630, 631, 632, 633, 635, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 683, 684, 687, 691, 692, 724, 726, 730, 731, 732, 733, 734, 754, 770, 771, 789, 792, 812, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 850, 852, 853, 856, 861, 863, 867, 869, 870, 872, 876, 877, 879, 889, 891, 892, 894, 895, 897, 978, 979, 980, 981, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "exactli": [14, 16, 122, 130, 132, 1099, 1105], "common": [14, 20, 76, 77, 122, 126, 128, 130, 132, 134, 153], "ground": [14, 124], "li": 14, "between": [14, 53, 54, 73, 76, 77, 78, 79, 98, 99, 120, 122, 124, 126, 129, 130, 135, 137, 138, 139, 141, 152, 203, 204, 205, 273, 313, 316, 399, 435, 438, 627, 630, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 931, 934, 962, 965, 982, 988, 1006, 1008, 1009, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099, 1137, 1139], "find": [14, 18, 19, 76, 77, 124, 136, 139, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 73, 76, 77, 78, 79, 121, 122, 123, 124, 126, 127, 128, 133, 136, 153, 683, 704, 1137, 1141], "essenti": [14, 15, 20, 122, 126, 132], "order": [14, 18, 19, 21, 73, 76, 77, 78, 79, 120, 121, 122, 125, 127, 129, 130, 131, 132, 138, 139, 141, 153, 399, 435, 438, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 829, 844, 846, 857, 859, 880, 882, 883, 885, 895, 897, 917, 935, 938, 978, 979, 980, 1018, 1021, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1143, 1144], "design": [14, 15, 118, 133, 136, 138, 153], "univers": 14, "abstract": [14, 130, 140, 153, 366, 368, 1137, 1141], "In": [14, 16, 18, 19, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 366, 384, 390, 394, 395, 398, 399, 415, 418, 607, 610, 632, 635, 683, 689, 729, 917, 948, 951, 1006, 1012, 1014, 1099], "search": [14, 18, 29, 33, 34, 62, 76, 77, 107, 119, 122, 124, 1019, 1020, 1021, 1022], "languag": [14, 16, 136], "first": [14, 15, 18, 19, 21, 23, 26, 27, 41, 42, 63, 64, 73, 78, 79, 86, 87, 108, 109, 120, 122, 124, 126, 129, 130, 136, 138, 139, 141, 200, 201, 203, 231, 232, 234, 235, 273, 350, 360, 366, 372, 399, 415, 416, 417, 418, 419, 435, 436, 437, 439, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 495, 496, 498, 520, 523, 525, 526, 530, 531, 533, 550, 551, 553, 555, 556, 558, 580, 581, 583, 585, 586, 588, 595, 596, 598, 600, 601, 603, 607, 608, 610, 617, 618, 620, 627, 628, 630, 667, 668, 669, 670, 671, 683, 691, 771, 782, 783, 829, 835, 837, 841, 843, 844, 846, 853, 856, 867, 869, 873, 875, 880, 882, 886, 888, 892, 894, 917, 923, 926, 952, 955, 962, 965, 966, 969, 978, 979, 980, 981, 982, 983, 992, 993, 1006, 1017, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1121, 1132, 1133, 1134, 1137, 1141], "see": [14, 17, 18, 19, 20, 23, 26, 27, 41, 42, 69, 70, 73, 78, 79, 86, 87, 114, 115, 120, 123, 126, 130, 132, 138, 139, 152, 153, 203, 204, 205, 220, 223, 231, 232, 234, 235, 273, 290, 293, 351, 354, 399, 415, 416, 417, 418, 419, 435, 436, 437, 439, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 490, 491, 492, 493, 494, 495, 496, 497, 499, 510, 513, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 550, 551, 552, 553, 554, 555, 556, 557, 559, 580, 581, 582, 583, 584, 585, 586, 587, 589, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 829, 861, 863, 870, 872, 877, 879, 892, 894, 895, 897, 1018, 1020, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "clear": [14, 15, 16, 19, 20, 122, 131, 132, 136, 138, 366, 371], "front": [14, 135, 136, 139, 1099, 1105], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 136, 138, 140, 141, 1099], "littl": [14, 138], "deeper": [14, 19, 118, 135, 982, 993, 994], "follow": [14, 15, 18, 19, 20, 21, 76, 77, 119, 121, 122, 124, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 153, 273, 324, 327, 366, 389, 399, 632, 635, 683, 727, 728, 729, 752, 753, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 827, 828, 829, 873, 875, 895, 897, 982, 988, 994, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099, 1121, 1131, 1137, 1141], "same": [14, 16, 18, 19, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 63, 64, 76, 77, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 108, 109, 119, 120, 122, 124, 125, 126, 129, 130, 132, 133, 134, 136, 138, 140, 141, 203, 204, 205, 212, 213, 215, 226, 227, 228, 229, 230, 237, 240, 250, 251, 253, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 366, 389, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 415, 418, 420, 421, 430, 431, 450, 451, 452, 453, 454, 460, 461, 462, 464, 475, 476, 477, 478, 479, 515, 516, 517, 518, 519, 607, 610, 612, 613, 614, 616, 622, 623, 624, 626, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 678, 679, 680, 681, 682, 683, 709, 711, 712, 713, 714, 715, 716, 738, 741, 742, 771, 789, 790, 791, 792, 793, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 889, 891, 892, 894, 917, 923, 926, 935, 938, 939, 942, 952, 953, 954, 955, 956, 958, 961, 962, 965, 978, 979, 980, 982, 995, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1080, 1083, 1084, 1087, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "core": [14, 18, 20, 132, 136, 141, 366, 381, 1099], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 49, 50, 73, 76, 77, 78, 79, 94, 95, 121, 122, 124, 125, 126, 129, 130, 132, 133, 139, 140, 203, 231, 232, 234, 235, 273, 351, 354, 399, 415, 418, 465, 468, 470, 473, 530, 533, 612, 615, 617, 620, 632, 635, 662, 665, 683, 693, 705, 706, 707, 754, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825], "expos": [14, 136, 140, 683, 699], "almost": [14, 19, 130, 137, 139], "ident": [14, 16, 76, 77, 125, 126, 128, 130, 138, 139, 153, 366, 379, 982, 995, 1099], "uniqu": [14, 63, 64, 108, 109, 124, 126, 130, 153, 978, 979, 980, 981, 982, 988, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043], "syntax": [14, 15, 134], "There": [14, 18, 19, 122, 125, 126, 129, 130, 131, 134, 136, 139, 153], "onli": [14, 17, 18, 19, 23, 26, 27, 76, 77, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 366, 385, 399, 590, 593, 595, 598, 829, 853, 856, 873, 875, 917, 935, 938, 982, 983, 984, 992, 993, 1018, 1019, 1020, 1055, 1064, 1067, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 830, 831, 832, 834, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 982, 983, 993, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099], "wai": [14, 15, 18, 124, 127, 133, 138, 139, 140, 141, 153], "manipul": [14, 56, 101, 119, 141, 152, 918, 921, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 955, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977], "unsurprisingli": [14, 122], "fundament": [14, 130, 136], "consist": [14, 76, 77, 129, 131, 133, 829, 844, 846, 1055, 1056, 1059, 1133, 1134], "each": [14, 15, 16, 19, 20, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 63, 64, 73, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 203, 237, 240, 273, 285, 288, 366, 389, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443, 444, 445, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 498, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585, 588, 590, 592, 593, 594, 595, 598, 600, 603, 607, 610, 612, 613, 614, 615, 616, 617, 620, 622, 623, 624, 625, 626, 627, 630, 632, 633, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 844, 846, 853, 856, 861, 863, 864, 866, 870, 872, 877, 879, 880, 882, 917, 927, 930, 943, 946, 952, 953, 954, 955, 956, 957, 962, 965, 970, 973, 974, 977, 982, 988, 995, 1006, 1007, 1018, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1055, 1056, 1059, 1099, 1105, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "veri": [14, 15, 18, 19, 119, 120, 122, 124, 126, 130, 132, 133, 137, 139, 140, 141, 153, 1099], "similar": [14, 119, 124, 130, 131, 132, 139, 153, 399, 632, 635, 812, 827, 1121, 1132], "convent": [14, 152, 829, 853, 856, 1055, 1056, 1059], "those": [14, 18, 19, 20, 55, 56, 76, 77, 100, 101, 124, 130, 136, 141, 203, 204, 205, 771, 810, 829, 873, 875, 880, 882, 917, 918, 919, 920, 921, 922], "introduc": [14, 130, 139, 917, 952, 955, 1023, 1024, 1028], "2006": 14, "layer": [14, 50, 57, 58, 95, 102, 103, 119, 121, 136, 137, 140, 813, 814, 815, 816, 817, 818, 819, 822, 824, 825, 826, 827, 828, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1112, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 475, 478, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 841, 843, 917, 952, 955, 1000, 1001, 1004, 1023, 1029, 1033, 1055, 1060, 1063, 1088, 1089, 1092], "present": [14, 19, 76, 77, 120, 123, 130, 131, 132, 133, 136], "itself": [14, 18, 19, 120, 125, 130, 133, 140, 152, 153, 683, 689, 982, 994], "cut": 14, "cloth": 14, "adher": [14, 15, 121, 123, 136, 141], "semant": [14, 136, 141, 399, 632, 635], "round": [14, 15, 16, 18, 19, 20, 21, 41, 42, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 399, 415, 418, 475, 476, 477, 478, 479, 515, 516, 517, 518, 519, 520, 523, 607, 610, 641, 657, 660, 678, 679, 680, 681, 682, 1099], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152], "paint": [14, 136], "pictur": [14, 136], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 152, 153, 1099, 1105, 1121, 1132, 1133, 1134], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1099], "check": [14, 15, 16, 18, 19, 29, 31, 32, 33, 34, 45, 46, 76, 77, 90, 91, 124, 130, 135, 136, 138, 139, 140, 141, 152, 273, 300, 318, 319, 321, 322, 329, 335, 338, 345, 348, 365, 366, 384, 398, 683, 693, 708, 721, 724, 731, 732, 733, 734, 746, 754, 767, 770, 771, 789, 790, 791, 792, 793, 829, 844, 846, 982, 983, 992, 993, 994, 1099], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 283, 284, 290, 291, 292, 293, 294, 307, 309, 311, 366, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 697, 698, 700, 701, 702, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1129], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 1099], "faq": [14, 15, 16, 136, 138, 139, 140, 141, 152], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 982, 994], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1099], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 1099, 1105], "question": [14, 15, 16, 18, 19, 122, 124, 136, 138, 139, 140, 141, 152, 153, 1099], "With": [15, 16, 18, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 125, 136, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 226, 227, 228, 229, 230, 237, 240, 268, 272, 273, 295, 298, 307, 310, 313, 316, 324, 327, 340, 343, 356, 366, 383, 399, 400, 403, 415, 418, 419, 420, 423, 425, 428, 435, 438, 445, 448, 460, 463, 464, 470, 473, 475, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 510, 513, 515, 518, 520, 521, 522, 523, 524, 530, 533, 540, 543, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 676, 677, 683, 684, 685, 686, 687, 688, 692, 700, 701, 708, 711, 712, 715, 716, 757, 759, 760, 761, 762, 763, 764, 771, 773, 774, 776, 789, 790, 791, 792, 793, 812, 815, 818, 819, 822, 828, 829, 830, 833, 834, 835, 837, 838, 840, 841, 843, 857, 859, 886, 888, 901, 902, 905, 906, 907, 911, 912, 915, 916, 917, 918, 921, 922, 931, 934, 935, 938, 943, 946, 952, 955, 956, 957, 958, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1092], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 76, 77, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 136, 139, 152, 153, 203, 204, 205, 683, 740, 747, 1023, 1034, 1038, 1099], "would": [15, 18, 19, 21, 118, 120, 121, 122, 124, 127, 128, 129, 130, 133, 135, 136, 138, 140, 141, 153, 164, 185, 188, 366, 390, 394, 1099], "entir": [15, 16, 19, 69, 70, 76, 77, 114, 115, 122, 123, 124, 129, 130, 133, 138, 139, 140, 141, 153, 366, 389, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1130], "forgiven": 15, "rais": [15, 19, 69, 70, 76, 77, 114, 115, 133, 134, 136, 138, 273, 290, 293, 399, 505, 508, 627, 630, 683, 693, 719, 729, 744, 753, 765, 771, 811, 829, 853, 856, 860, 892, 894, 917, 958, 961, 962, 965, 1018, 1021, 1055, 1060, 1063, 1068, 1071, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1133, 1134, 1137, 1141], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 41, 42, 45, 46, 51, 52, 55, 56, 63, 64, 69, 70, 71, 72, 76, 77, 80, 81, 86, 87, 90, 91, 100, 101, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 295, 298, 313, 316, 324, 327, 330, 333, 340, 343, 351, 354, 366, 390, 394, 399, 400, 401, 403, 405, 406, 408, 410, 411, 413, 415, 416, 418, 420, 421, 423, 425, 426, 428, 430, 431, 433, 435, 436, 438, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 498, 500, 501, 505, 506, 508, 510, 513, 515, 516, 518, 520, 521, 523, 525, 526, 528, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 558, 560, 561, 563, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 581, 583, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 605, 606, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 665, 667, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 694, 695, 696, 698, 700, 709, 710, 711, 725, 729, 731, 732, 733, 734, 759, 763, 764, 765, 771, 789, 790, 791, 792, 793, 807, 809, 810, 811, 812, 815, 819, 822, 828, 829, 830, 831, 833, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 860, 861, 863, 864, 866, 870, 872, 873, 875, 876, 877, 879, 880, 882, 889, 891, 892, 894, 895, 897, 917, 918, 919, 921, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 982, 988, 1000, 1001, 1004, 1006, 1008, 1009, 1010, 1017, 1018, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1110, 1111, 1133, 1134, 1137, 1138, 1139, 1141], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 125, 126, 131, 132, 133, 136, 138, 141, 153, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "other": [15, 18, 19, 23, 26, 27, 43, 44, 73, 76, 77, 78, 79, 88, 89, 119, 121, 122, 124, 125, 126, 129, 130, 133, 134, 136, 138, 140, 141, 151, 152, 153, 200, 201, 203, 204, 205, 399, 510, 513, 683, 684, 685, 686, 687, 688, 689, 771, 782, 783, 1006, 1012, 1014, 1023, 1034, 1038, 1055, 1076, 1079, 1084, 1087, 1099], "strong": [15, 153], "industri": 15, "back": [15, 129, 135, 136, 138, 153, 683, 743, 766, 1099, 1105, 1133, 1134, 1137, 1141], "momentum": 15, "won": [15, 16, 19, 141], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 136, 140, 153, 683, 752, 753, 829, 844, 846, 917, 931, 934, 1143, 1144], "just": [15, 16, 18, 19, 121, 122, 124, 125, 126, 133, 136, 138, 139, 153, 1055, 1056, 1059, 1121, 1130], "make": [15, 16, 18, 19, 20, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141], "problem": [15, 19, 129, 138], "even": [15, 16, 18, 19, 120, 121, 126, 131, 132, 138, 139, 140, 141, 153, 399, 627, 630, 637, 640], "wors": 15, "rather": [15, 19, 45, 46, 76, 77, 90, 91, 119, 121, 124, 130, 141, 153, 203, 204, 205, 366, 389, 683, 731, 732, 734, 771, 789, 790, 791, 792, 793], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 126, 130], "feasibl": 15, "space": [15, 203, 204, 205, 231, 232, 234, 235, 683, 710, 771, 811], "case": [15, 18, 19, 20, 29, 33, 34, 73, 76, 77, 78, 79, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 153, 203, 237, 240, 366, 384, 395, 398, 399, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 470, 473, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 683, 729, 741, 742, 829, 857, 859, 917, 948, 951, 982, 985, 991, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087, 1121, 1132, 1133, 1134, 1137, 1141], "unlik": [15, 122, 130], "charger": 15, "charact": [15, 134], "encod": [15, 139, 683, 710], "instant": [15, 1099], "messag": [15, 19, 134, 136, 138, 1146, 1147], "much": [15, 19, 119, 129, 130, 133, 136, 138, 139], "doe": [15, 19, 21, 76, 77, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 136, 138, 139, 153, 399, 470, 473, 683, 729, 917, 957], "mandat": [15, 124, 133], "adopt": [15, 19, 129], "continu": [15, 16, 123, 124, 134, 153], "own": [15, 16, 18, 121, 124, 134, 136, 153], "signatur": [15, 119, 120, 121, 122, 124, 130, 131, 132, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "replac": [15, 19, 21, 55, 56, 76, 77, 100, 101, 122, 124, 128, 130, 131, 132, 136, 138, 141, 153, 683, 741, 742, 917, 918, 919, 920, 921, 922, 1006, 1007], "your": [15, 16, 17, 18, 20, 21, 119, 121, 139, 140, 153, 1099], "10": [15, 18, 21, 41, 42, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 130, 136, 138, 139, 203, 225, 226, 228, 229, 230, 234, 235, 236, 399, 445, 448, 450, 453, 485, 486, 487, 488, 489, 510, 513, 530, 533, 555, 558, 565, 566, 567, 568, 569, 652, 653, 654, 655, 656, 657, 660, 683, 701, 711, 740, 747, 771, 794, 795, 796, 797, 812, 818, 829, 838, 840, 841, 843, 867, 869, 886, 888, 917, 935, 938, 957, 958, 960, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1018, 1021, 1023, 1024, 1028, 1055, 1056, 1059, 1060, 1063, 1137, 1139], "100": [15, 16, 104, 105, 124, 139, 140, 141, 153, 399, 657, 660, 1008, 1010, 1099], "despit": [15, 130, 132], "distinct": [15, 121, 130, 133, 135, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099], "still": [15, 19, 76, 77, 121, 124, 131, 138, 140, 153, 1099], "believ": [15, 19], "share": [15, 76, 77, 122, 124, 126, 127, 130, 136, 273, 360], "bring": [15, 124, 136, 137], "benefit": [15, 16, 18, 19, 129, 130, 133, 138, 139, 153], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 121, 122, 124, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 1099], "again": [15, 16, 19, 119, 122, 124, 130, 133, 139, 141, 153], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 139], "most": [15, 18, 19, 76, 77, 119, 120, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 153, 829, 844, 846], "technolog": 15, "sector": [15, 41, 42, 86, 87, 399, 410, 411, 412, 413, 414, 425, 426, 427, 428, 429, 440, 441, 442, 443, 444], "full": [15, 16, 19, 23, 26, 27, 73, 78, 79, 120, 121, 124, 131, 136, 153, 203, 273, 313, 316, 399, 530, 533, 555, 558, 812, 818, 829, 873, 875, 877, 879, 880, 882], "success": 15, "reason": [15, 19, 119, 122, 126, 129, 130, 131, 133, 136, 138, 399, 632, 635], "build": [15, 17, 18, 126, 135, 137, 140, 141, 153, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1099, 1121, 1132, 1133, 1134], "custom": [15, 124, 140], "comput": [15, 16, 18, 23, 26, 27, 41, 42, 53, 54, 74, 75, 76, 77, 86, 87, 98, 99, 124, 125, 126, 130, 136, 139, 153, 185, 187, 189, 366, 389, 399, 415, 418, 445, 448, 460, 463, 470, 473, 495, 498, 500, 501, 502, 503, 504, 525, 528, 530, 533, 550, 553, 555, 558, 585, 588, 590, 593, 595, 598, 600, 603, 607, 610, 612, 615, 617, 620, 683, 695, 696, 698, 701, 702, 771, 773, 776, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 822, 825, 827, 829, 830, 833, 835, 837, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 873, 875, 876, 877, 879, 880, 882, 892, 894, 895, 897, 901, 902, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 982, 988, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "thank": [15, 139], "interoper": 15, "compon": [15, 136, 771, 811], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 73, 76, 77, 78, 79, 124, 127, 131, 132, 812, 826, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1137, 1141], "pcie": 15, "interfac": [15, 141, 153], "motherboard": 15, "raid": 15, "storag": [15, 139], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 31, 32, 33, 34, 35, 36, 51, 52, 76, 77, 96, 97, 124, 126, 140, 141, 203, 207, 208, 209, 242, 245, 255, 257, 259, 260, 262, 264, 683, 689, 756, 758, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 861, 863, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 982, 984, 994], "factor": [15, 45, 46, 49, 50, 51, 52, 90, 91, 94, 95, 96, 97, 366, 387, 388, 389, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 798, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1137, 1138, 1139, 1140], "sata": 15, "connect": [15, 18, 140, 141, 1121, 1131, 1132], "host": [15, 153], "bu": 15, "adapt": [15, 771, 798, 800, 1137, 1140], "devic": [15, 19, 23, 26, 27, 35, 36, 40, 43, 44, 76, 77, 80, 81, 85, 88, 89, 104, 105, 118, 119, 126, 128, 131, 138, 139, 153, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 683, 711, 712, 713, 714, 715, 716, 738, 741, 742, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "html": [15, 21, 121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "enabl": [15, 18, 19, 73, 76, 77, 78, 79, 124, 126, 129, 130, 133, 135, 136, 137, 139, 141, 153, 771, 811], "anyon": [15, 17, 153], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 76, 77, 130, 982, 983, 992, 993], "commun": [15, 17, 19, 20, 153, 1099, 1105], "network": [15, 126, 130, 136, 140, 152, 812, 825, 1099, 1107, 1121, 1133, 1134], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 121, 122, 124, 130, 131, 133, 136, 139, 152, 153, 683, 735, 757, 1055, 1060, 1063, 1068, 1071], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 202, 273, 313, 316, 399, 415, 418, 510, 513, 607, 610, 632, 635, 657, 660], "754": [15, 202, 273, 313, 316, 399, 415, 418, 510, 513, 607, 610, 632, 635, 657, 660], "allow": [15, 19, 124, 125, 136, 153, 203, 231, 232, 234, 235, 683, 735, 1133, 1134], "calcul": [15, 53, 54, 73, 76, 77, 78, 79, 98, 99, 121, 399, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 490, 493, 505, 508, 510, 513, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 607, 610, 627, 630, 647, 650, 652, 655, 657, 660, 667, 671, 672, 676, 677, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 121, 124, 125, 128, 130, 131, 136, 153, 273, 280, 283, 399, 400, 403, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 505, 508, 510, 513, 560, 563, 565, 568, 570, 573, 575, 578, 627, 630, 647, 650, 652, 655, 672, 676, 677, 829, 844, 846, 873, 875, 877, 879, 880, 882, 1018, 1022, 1044, 1045, 1048, 1050, 1053], "did": [15, 20, 141], "aris": [15, 153], "until": [15, 19, 134, 153, 1099], "substanti": [15, 19, 124, 129], "innov": 15, "growth": 15, "usag": [15, 136, 366, 389], "relev": [15, 18, 20, 122, 130, 131, 139, 1137, 1138, 1139, 1140, 1141, 1142], "area": [15, 41, 42, 86, 87, 133, 151, 399, 410, 411, 412, 413, 414, 425, 426, 427, 428, 429, 440, 441, 442, 443, 444, 1099], "necess": 15, "parti": [15, 153], "could": [15, 16, 18, 19, 122, 124, 130, 131, 133, 136, 138, 139, 140, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "easili": [15, 19, 139, 140, 141, 153, 1099], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "regard": [15, 130], "effect": [15, 120, 121, 129, 130, 153, 203, 237, 240, 771, 802, 804, 1055, 1076, 1079, 1084, 1087], "2015": 15, "sinc": [15, 18, 19, 124, 153], "alongsid": 15, "machin": [15, 18, 126, 152, 273, 313, 316, 324, 327, 399, 525, 528, 829, 861, 863, 870, 872], "given": [15, 16, 18, 19, 20, 21, 43, 44, 53, 54, 55, 56, 76, 77, 88, 89, 98, 99, 100, 101, 104, 105, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 203, 204, 205, 211, 231, 232, 234, 235, 273, 306, 366, 378, 384, 386, 387, 388, 389, 395, 398, 683, 701, 702, 712, 713, 714, 715, 716, 741, 742, 748, 769, 771, 773, 776, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 813, 814, 815, 816, 817, 818, 819, 822, 829, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 921, 931, 934, 935, 938, 943, 946, 952, 953, 954, 955, 956, 957, 970, 973, 982, 989, 990, 1006, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1044, 1050, 1053, 1110, 1111], "frame": [15, 152], "less": [15, 19, 23, 26, 27, 41, 42, 76, 77, 86, 87, 120, 122, 130, 135, 136, 399, 405, 408, 410, 413, 420, 423, 435, 438, 475, 478, 554, 560, 563, 565, 568, 575, 578, 627, 630, 632, 635, 642, 645, 657, 660, 829, 861, 863, 870, 872, 895, 897, 1006, 1012, 1014, 1055, 1084, 1087], "matur": [15, 153], "state": [15, 120, 121, 124, 135, 136, 137, 139, 152, 273, 364, 399, 607, 610, 683, 718, 751, 766, 767, 768, 812, 826, 1099, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "than": [15, 19, 23, 26, 27, 45, 46, 63, 64, 76, 77, 90, 91, 108, 109, 119, 122, 124, 130, 133, 136, 139, 140, 141, 153, 203, 204, 205, 273, 313, 316, 366, 389, 399, 405, 408, 410, 413, 420, 423, 435, 438, 455, 458, 465, 468, 475, 478, 515, 518, 520, 523, 560, 563, 565, 568, 575, 578, 605, 627, 630, 632, 635, 642, 645, 657, 660, 678, 682, 683, 731, 732, 734, 771, 789, 790, 791, 792, 793, 829, 835, 837, 853, 856, 861, 863, 870, 872, 895, 897, 917, 918, 921, 935, 938, 958, 961, 1006, 1012, 1014, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1055, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "preced": [15, 140], "mention": [15, 18, 19, 120, 122, 126, 133], "aros": 15, "70": [15, 829, 867, 869, 1055, 1056, 1059], "80": [15, 829, 867, 869, 1055, 1056, 1059], "90": [15, 86, 87, 104, 105, 399, 470, 473, 637, 639, 640, 641, 829, 867, 869, 1008, 1010, 1055, 1056, 1059], "effort": [15, 17, 124, 153], "stage": [15, 17, 19, 21, 118, 134, 1099], "complet": [15, 19, 20, 76, 77, 129, 130, 138, 139, 829, 873, 875], "natur": [15, 122, 129, 130, 152, 399, 505, 508, 560, 563, 570, 573, 829, 876], "like": [15, 18, 19, 21, 45, 46, 90, 91, 118, 119, 120, 121, 122, 124, 125, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 771, 789, 790, 791, 792, 793, 1006, 1012, 1014, 1099], "certainli": 15, "mission": [15, 1099], "creat": [15, 17, 18, 19, 21, 35, 36, 43, 44, 76, 77, 80, 81, 88, 89, 104, 105, 124, 125, 131, 132, 133, 136, 137, 140, 151, 152, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 683, 711, 712, 713, 714, 715, 716, 738, 741, 742, 757, 771, 809, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1099, 1105, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 124, 126, 130, 136, 141, 366, 384, 398], "ourselv": 15, "lead": [15, 16, 73, 76, 77, 78, 79, 153, 829, 873, 875, 880, 882], "quansight": 15, "compani": 15, "made": [15, 19, 20, 130, 133, 136, 138], "organ": [15, 119, 126, 129, 130], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 136, 141], "sympi": 15, "rai": [15, 399, 435, 438], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 35, 36, 69, 70, 76, 77, 114, 115, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 152, 153, 203, 204, 205, 207, 208, 209, 242, 245, 683, 724, 770, 829, 895, 897, 982, 983, 1006, 1012, 1014, 1018, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1102, 1104, 1121, 1131, 1132, 1135, 1136], "member": [15, 19], "googl": [15, 1099], "octoml": 15, "einop": [15, 76, 77, 683, 705, 706, 707], "further": [15, 16, 19, 21, 122, 125, 129, 135, 139, 140, 1099], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 49, 50, 94, 95, 104, 105, 118, 130, 139, 683, 692, 700, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 841, 843, 867, 869, 982, 985, 998, 999, 1008, 1010, 1099, 1105], "shaw": 15, "co": [15, 41, 42, 86, 87, 136, 152, 399, 484, 683, 710, 1099], "intel": 15, "togeth": [15, 76, 77, 129, 130, 134, 140, 141, 153, 1143, 1144], "major": [15, 124, 125, 131, 132, 153, 1018, 1021], "involv": [15, 17, 21, 118, 131, 141, 273, 351, 354, 399, 415, 418, 607, 610, 1099, 1105], "anoth": [15, 18, 19, 76, 77, 124, 125, 126, 130, 131, 138, 141, 203, 220, 223, 273, 285, 288, 295, 298], "promis": 15, "sign": [15, 18, 41, 42, 86, 87, 137, 141, 203, 204, 205, 399, 400, 403, 415, 418, 435, 438, 465, 468, 607, 610, 632, 633, 634, 635, 636, 646, 829, 876, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1072, 1075, 1080, 1083], "pursuit": 15, "unif": [15, 17, 138, 1099, 1105], "clearli": [15, 19, 20, 122, 124], "lot": [15, 16, 128, 138, 153], "thought": [15, 18, 19, 120], "care": [15, 19, 141], "attent": [15, 19, 129, 130, 812, 827, 828, 1121, 1132], "gone": [15, 135], "simplifi": [15, 136, 137, 138, 140], "compat": [15, 23, 26, 27, 41, 42, 69, 70, 73, 78, 79, 86, 87, 114, 115, 120, 153, 273, 290, 293, 399, 415, 416, 417, 418, 419, 435, 436, 437, 438, 439, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 829, 861, 863, 870, 872, 877, 879, 886, 888, 892, 894, 895, 897, 917, 948, 951, 1018, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "excit": [15, 17, 118, 1099], "complianc": 15, "hope": [15, 153], "due": [15, 18, 23, 26, 27, 125, 130, 133, 399, 607, 610], "suit": [15, 18, 118, 123, 124, 139, 152], "some": [15, 16, 18, 19, 20, 76, 77, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 152, 153, 399, 510, 513, 771, 773, 776, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 810, 812, 824, 1099, 1121, 1129], "motiv": [15, 138], "great": [15, 16, 124, 136, 138], "convinc": 15, "celebr": 15, "encourag": [15, 152, 153, 1099, 1105], "foundat": 15, "point": [16, 19, 41, 42, 51, 52, 86, 87, 96, 97, 120, 121, 122, 124, 129, 133, 136, 138, 139, 152, 195, 196, 197, 198, 202, 203, 204, 205, 207, 209, 211, 217, 218, 225, 247, 248, 265, 267, 273, 280, 283, 313, 316, 335, 338, 351, 354, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 470, 473, 475, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 518, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 607, 610, 627, 630, 632, 635, 637, 640, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 672, 673, 674, 675, 676, 677, 678, 682, 829, 830, 831, 832, 833, 834, 838, 840, 844, 846, 847, 849, 850, 852, 861, 863, 870, 872, 873, 875, 877, 879, 880, 882, 895, 897, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "mai": [16, 18, 19, 23, 26, 27, 41, 42, 86, 87, 124, 125, 130, 138, 140, 203, 204, 205, 220, 223, 366, 390, 394, 399, 495, 496, 497, 498, 499, 530, 533, 555, 558, 590, 593, 595, 598, 617, 618, 619, 621, 683, 704, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071], "ask": [16, 136, 138, 153, 1099], "perfectli": 16, "happi": [16, 18, 153], "abund": 16, "better": [16, 118, 125, 134, 135, 138, 139, 140], "ll": [16, 17, 19, 122, 130, 133, 139], "give": [16, 18, 19, 118, 120, 121, 122, 127, 138, 917, 948, 951], "two": [16, 35, 36, 51, 52, 73, 78, 79, 96, 97, 121, 122, 124, 125, 129, 130, 135, 139, 141, 203, 204, 205, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 273, 350, 360, 399, 465, 468, 637, 640, 683, 691, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 889, 891, 892, 894, 917, 966, 969, 1023, 1024, 1028, 1029, 1033, 1034, 1038, 1039, 1043, 1099], "streamlin": 16, "workflow": [16, 19, 139, 151, 1099], "save": [16, 76, 77, 124, 134, 153, 683, 749, 1133, 1134], "week": [16, 19, 20, 1099], "let": [16, 121, 122, 124, 125, 130, 131, 132, 136, 138, 139, 140, 141, 1055, 1064, 1067, 1076, 1079, 1080, 1083, 1084, 1087, 1099], "sai": [16, 18, 128, 138], "deepmind": 16, "releas": [16, 18, 20, 1099], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 133, 139, 1055, 1076, 1079, 1084, 1087], "perceiverio": 16, "happen": [16, 18, 19, 124, 139], "slew": 16, "rush": 16, "f": [16, 21, 118, 124, 130, 134, 136, 139, 141, 399, 525, 528, 683, 726, 730, 982, 985, 998, 999], "g": [16, 118, 130, 153, 273, 279, 351, 354, 366, 369, 982, 985, 998, 1006, 1011, 1012, 1014, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1068, 1071, 1072, 1075, 1080, 1083], "inevit": 16, "deviat": [16, 57, 58, 102, 103, 124, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1055, 1076, 1079, 1135, 1136], "origin": [16, 19, 55, 56, 73, 76, 77, 78, 79, 100, 101, 125, 127, 128, 131, 136, 138, 399, 435, 438, 829, 857, 859, 917, 948, 951, 952, 953, 954, 955, 956], "often": [16, 124, 126, 134, 153], "erron": 16, "train": [16, 45, 46, 90, 91, 126, 130, 132, 139, 140, 141, 151, 152, 153, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1099], "poor": 16, "converg": 16, "perform": [16, 69, 70, 76, 77, 114, 115, 119, 120, 122, 124, 126, 127, 129, 130, 132, 133, 136, 139, 153, 164, 185, 188, 203, 231, 232, 234, 235, 683, 701, 705, 706, 707, 727, 728, 729, 743, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 824, 826, 829, 880, 882, 978, 979, 980, 981, 982, 989, 990, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "issu": [16, 17, 20, 124, 136, 138, 140, 153], "etc": [16, 18, 19, 20, 43, 44, 71, 72, 76, 77, 88, 89, 104, 105, 116, 117, 119, 120, 122, 124, 129, 130, 131, 136, 138, 139, 153, 203, 231, 232, 234, 235, 683, 711, 712, 713, 714, 715, 716, 738, 741, 742, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "publish": [16, 153], "manag": [16, 17, 133, 153], "get": [16, 17, 18, 20, 76, 77, 118, 124, 126, 131, 132, 133, 136, 137, 138, 139, 140, 273, 307, 310, 312, 313, 316, 324, 327, 366, 372, 373, 376, 378, 379, 384, 388, 395, 398, 683, 690, 717, 718, 719, 720, 721, 740, 751, 1099, 1105, 1121, 1130], "work": [16, 18, 19, 20, 118, 124, 125, 130, 131, 132, 135, 136, 137, 138, 140, 141, 1099, 1105], "repositori": [16, 18, 19, 21, 123, 134], "pull": [16, 17, 18, 21, 119, 153], "request": [16, 17, 119, 366, 381], "confus": [16, 133], "do": [16, 18, 19, 20, 45, 46, 76, 77, 90, 91, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 399, 632, 635, 683, 729, 771, 789, 790, 791, 792, 793, 810, 982, 983, 992, 993, 994], "don": [16, 18, 19, 20, 71, 72, 116, 117, 124, 131, 140, 153], "expect": [16, 19, 124, 153, 683, 690, 1099], "codebas": [16, 17, 118, 119, 133, 135, 366, 387, 388, 1099], "total": [16, 17, 19, 73, 76, 77, 78, 79, 122, 124, 132, 139, 140, 153, 366, 395, 1018, 1021, 1055, 1076, 1079, 1084, 1087], "hour": 16, "spent": 16, "spin": 16, "off": [16, 135, 829, 841, 843, 889, 891], "test": [16, 18, 20, 41, 42, 69, 70, 86, 87, 114, 115, 118, 122, 134, 153, 273, 330, 333, 340, 343, 399, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "error": [16, 18, 41, 42, 76, 77, 86, 87, 120, 122, 124, 129, 132, 134, 138, 153, 164, 165, 168, 399, 500, 501, 502, 503, 504, 1055, 1060, 1063, 1068, 1071, 1133, 1134, 1137, 1141], "iter": [16, 29, 31, 32, 33, 34, 43, 44, 71, 72, 73, 76, 77, 78, 79, 88, 89, 116, 117, 130, 136, 139, 200, 201, 366, 389, 683, 684, 685, 686, 687, 688, 917, 927, 930, 943, 946, 957, 970, 973, 974, 977, 982, 983, 984, 985, 988, 992, 993, 994, 999], "address": [16, 19, 20, 129, 136], "sake": 16, "singl": [16, 19, 76, 77, 119, 120, 122, 124, 126, 128, 130, 133, 136, 139, 140, 141, 153, 683, 764, 770, 1006, 1011, 1012, 1014, 1023, 1024, 1028], "multipl": [16, 19, 57, 58, 69, 70, 76, 77, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 114, 115, 122, 126, 130, 153, 399, 415, 419, 460, 464, 605, 606, 607, 610, 683, 684, 686, 687, 688, 712, 716, 735, 771, 789, 791, 792, 793, 829, 830, 833, 834, 850, 852, 917, 918, 921, 922, 952, 955, 956, 957, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1018, 1019, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1131], "line": [16, 18, 122, 124, 129, 134, 137, 138, 139, 140, 151, 1099, 1105], "convert": [16, 29, 31, 32, 33, 34, 35, 36, 76, 77, 124, 129, 136, 153, 154, 162, 203, 207, 208, 209, 242, 245, 273, 278, 279, 366, 369, 370, 371, 372, 384, 395, 398, 683, 743, 756, 758, 759, 763, 764, 766, 829, 898, 900, 982, 984, 994, 995, 1111], "directli": [16, 19, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 153, 982, 994], "graph": [16, 23, 26, 27, 126, 130, 137, 153, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1133, 1134], "guarante": [16, 129, 153, 1023, 1024, 1028], "turn": [16, 122, 124, 130], "4": [16, 21, 23, 26, 27, 35, 36, 41, 42, 45, 46, 51, 52, 55, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 268, 272, 273, 295, 297, 298, 299, 307, 310, 313, 316, 340, 343, 366, 378, 383, 387, 399, 400, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 435, 437, 438, 439, 445, 448, 460, 461, 462, 463, 464, 470, 473, 475, 477, 478, 480, 483, 485, 488, 490, 491, 492, 493, 494, 495, 497, 498, 510, 512, 513, 515, 517, 518, 520, 521, 522, 523, 524, 530, 533, 540, 543, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 649, 650, 651, 652, 655, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 692, 701, 710, 711, 712, 714, 715, 716, 734, 757, 771, 773, 775, 776, 777, 789, 790, 791, 792, 793, 812, 815, 816, 817, 819, 822, 826, 828, 829, 830, 831, 833, 835, 837, 838, 840, 841, 843, 850, 852, 861, 863, 867, 869, 886, 888, 889, 891, 901, 912, 915, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 945, 946, 947, 948, 951, 952, 954, 955, 956, 957, 958, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1092, 1099, 1137, 1138, 1139, 1140, 1142], "step": [16, 18, 19, 21, 45, 46, 76, 77, 80, 81, 90, 91, 122, 127, 129, 130, 131, 132, 136, 139, 140, 141, 152, 203, 204, 205, 206, 231, 232, 234, 235, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 787, 794, 795, 796, 797, 798, 800, 802, 804, 978, 979, 980, 981, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "take": [16, 17, 18, 19, 121, 122, 124, 130, 131, 132, 136, 138, 140, 141, 153, 399, 470, 473, 1099, 1105], "few": [16, 19, 20, 124, 126, 130, 131, 132, 133, 134, 137, 138, 139, 140, 151, 1099, 1105], "second": [16, 18, 23, 26, 27, 41, 42, 45, 46, 63, 64, 73, 78, 79, 86, 87, 90, 91, 108, 109, 122, 124, 125, 133, 138, 273, 350, 360, 399, 415, 416, 417, 418, 419, 435, 436, 437, 439, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 495, 496, 498, 520, 523, 525, 526, 530, 531, 533, 550, 551, 553, 555, 556, 558, 580, 581, 583, 585, 586, 588, 595, 596, 598, 600, 601, 603, 607, 608, 610, 617, 618, 620, 627, 628, 630, 667, 668, 669, 670, 671, 683, 691, 740, 747, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 829, 835, 837, 841, 843, 844, 846, 853, 856, 867, 869, 873, 875, 880, 882, 886, 888, 892, 894, 917, 962, 965, 966, 969, 978, 980, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1137, 1138, 1139], "automat": [16, 18, 19, 118, 120, 126, 130, 135, 136, 137, 140, 141, 1099], "convers": [16, 30, 31, 32, 33, 34, 76, 77, 135, 137, 141, 152, 153, 683, 743, 1099, 1105], "everyon": [16, 17, 19, 153], "regardless": [16, 17, 76, 77, 138, 141, 200, 201], "wouldn": 16, "nice": [16, 124], "write": [16, 19, 20, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 126, 127, 133, 136, 138, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 366, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 702, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1022, 1023, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "onc": [16, 18, 19, 124, 130, 131, 132, 136, 139, 153, 366, 389, 829, 850, 852, 880, 882, 1006, 1007], "know": [16, 19, 124, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "among": [16, 76, 77, 124], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 126, 136], "understand": [16, 18, 19, 20, 21, 118, 120, 121, 122, 123, 125, 134, 135], "pattern": [16, 76, 77, 121, 131, 683, 705, 706, 707], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 123, 124, 125, 130, 136, 140, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 829, 830, 831, 832, 834, 835, 837, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 943, 944, 945, 947, 948, 951, 952, 953, 954, 956, 958, 959, 960, 982, 984, 994, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1105], "now": [16, 18, 21, 76, 77, 119, 120, 124, 128, 130, 131, 134, 138, 139, 141, 152, 153, 203, 268, 272, 1121, 1132, 1133, 1134], "spend": 16, "torchvis": 16, "probabl": [16, 124, 812, 824, 1006, 1007, 1121, 1129], "sonnet": 16, "about": [16, 18, 19, 123, 124, 135, 136, 140, 141, 153, 273, 313, 316, 324, 327], "next": [16, 18, 19, 20, 21, 121, 122, 127, 128, 134, 138, 139, 273, 313, 316, 1099, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "everyth": [16, 19, 20, 124, 137, 153], "zero": [16, 23, 26, 27, 35, 36, 41, 42, 45, 46, 69, 70, 73, 76, 77, 78, 79, 86, 87, 90, 91, 114, 115, 120, 122, 124, 129, 130, 131, 132, 136, 139, 140, 164, 170, 173, 175, 178, 203, 211, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 280, 283, 399, 415, 418, 420, 423, 425, 428, 435, 438, 455, 458, 480, 481, 483, 485, 486, 487, 488, 489, 510, 513, 515, 518, 540, 543, 590, 593, 595, 598, 605, 606, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 637, 640, 647, 650, 652, 653, 654, 656, 657, 660, 662, 665, 672, 676, 677, 683, 701, 738, 741, 742, 771, 773, 774, 775, 776, 777, 778, 780, 789, 792, 794, 796, 798, 800, 812, 824, 829, 830, 833, 838, 840, 853, 856, 861, 863, 870, 872, 892, 894, 895, 897, 917, 931, 934, 935, 938, 952, 955, 974, 977, 1000, 1001, 1004, 1006, 1008, 1009, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1137, 1138, 1139, 1140], "need": [16, 18, 19, 20, 21, 119, 121, 122, 123, 125, 126, 129, 130, 133, 136, 138, 139, 152, 153, 683, 695, 696, 698, 917, 918, 921, 931, 934], "said": 16, "high": [16, 20, 76, 77, 104, 105, 139, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015], "level": [16, 17, 20, 126, 135, 136, 139, 140, 141, 153], "optim": [16, 133, 137, 139, 141, 152, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 978, 979, 980, 981, 1099, 1138, 1139, 1140, 1142], "trainer": [16, 151, 153, 1099], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 141], "flax": [16, 141, 153], "trax": [16, 141], "objax": [16, 141], "idea": [16, 125, 134, 152], "fulli": [16, 120, 129, 130, 136, 137, 138, 139, 140, 141, 153, 1121, 1131, 1132], "offer": [16, 140], "strongli": [17, 18, 1099, 1105], "welcom": [17, 18, 19, 1099, 1105], "absolut": [17, 41, 42, 76, 77, 86, 87, 399, 400, 401, 402, 403, 404, 829, 876], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 31, 32, 33, 34, 43, 44, 45, 46, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 130, 131, 133, 164, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 207, 209, 226, 228, 230, 273, 280, 283, 295, 297, 299, 306, 307, 310, 329, 330, 333, 335, 338, 340, 343, 345, 348, 365, 366, 372, 373, 376, 380, 381, 384, 385, 389, 396, 398, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 548, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 701, 704, 708, 710, 712, 714, 716, 721, 722, 724, 726, 729, 730, 731, 732, 733, 734, 735, 743, 746, 748, 750, 754, 759, 760, 762, 767, 769, 770, 771, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 811, 812, 824, 829, 830, 832, 834, 844, 846, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 978, 979, 980, 981, 982, 983, 984, 988, 992, 993, 994, 995, 1001, 1003, 1005, 1006, 1007, 1029, 1030, 1032, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1110, 1111, 1121, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 76, 77, 80, 81, 118, 121, 122, 125, 131, 135, 136, 138, 139, 140, 152, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 366, 368], "aspect": [17, 139, 1099], "guid": [17, 18, 19, 134, 1099], "through": [17, 19, 20, 118, 122, 124, 125, 126, 127, 130, 134, 135, 136, 138, 139, 140, 141, 152, 399, 435, 438, 982, 985], "journei": [17, 1099, 1105], "inclusvi": 17, "big": [17, 153], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 135, 1099], "split": [17, 19, 23, 26, 27, 76, 77, 135, 136, 153, 366, 387, 388, 389, 683, 735, 917, 1099], "section": [17, 19, 20, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "below": [17, 18, 20, 21, 35, 36, 118, 119, 122, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 152, 203, 255, 257, 259, 260, 262, 264, 399, 435, 438, 445, 448, 470, 473, 485, 488, 637, 640, 677, 829, 838, 840, 841, 843, 889, 891, 917, 931, 934, 935, 938, 1023, 1024, 1028, 1044, 1045, 1048, 1099], "best": [17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 683, 735], "go": [17, 18, 19, 20, 118, 119, 122, 125, 130, 135, 139, 153, 982, 993], "finish": [17, 18, 118, 1099], "dive": [17, 19, 20, 130, 135, 138, 139, 153, 1099], "right": [17, 18, 19, 76, 77, 118, 122, 139, 399, 455, 458, 465, 468, 829, 880, 882], "environ": [17, 19, 21, 152], "basic": [17, 20, 21], "fork": [17, 18, 683, 736], "doc": [17, 20, 120, 121, 136, 139, 140, 1099], "document": [17, 19, 124, 125, 137, 139, 141], "local": [17, 18, 21, 126], "task": [17, 19, 152, 978, 979, 980, 981, 1099], "help": [17, 18, 122, 124, 125, 127, 129, 130, 138, 139, 140, 151, 683, 689, 1055, 1080, 1083, 1099], "video": [17, 19, 119, 120, 121, 122, 124, 125, 126, 127], "realli": [18, 130, 153], "contribut": [18, 19, 20, 136, 1105], "toward": [18, 55, 56, 100, 101, 136, 917, 952, 953, 954, 955, 956, 1099, 1105], "page": [18, 19, 137, 141, 151, 1099, 1105], "explain": [18, 19, 20, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 1099, 1105], "main": [18, 21, 35, 36, 128, 130, 203, 217, 218, 255, 257, 259, 260, 262, 264, 829, 841, 843, 889, 891], "prefer": [18, 125, 130], "mode": [18, 19, 51, 52, 76, 77, 122, 130, 153, 200, 201, 366, 389, 399, 415, 418, 607, 610, 683, 721, 743, 746, 748, 766, 767, 768, 829, 873, 874, 875], "git": [18, 19, 124], "recurs": [18, 21, 29, 31, 32, 33, 34, 76, 77, 126, 130, 140, 153, 982, 983, 984, 992, 993, 994], "submodul": [18, 19, 20, 21, 123, 124, 126, 132, 135, 136, 140, 1099, 1135, 1136, 1143, 1144], "com": 18, "unifyai": [18, 19, 21], "http": [18, 121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 771, 773, 776, 778, 780, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "gh": 18, "your_fold": 18, "id": [18, 129, 130, 134, 366, 372, 1133, 1134], "cours": [18, 19, 122, 139, 153], "whatev": [18, 153], "integr": [18, 273, 280, 283], "familiar": [18, 20], "decid": [18, 76, 77, 125, 982, 993], "sure": [18, 20, 123, 124], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 152, 1099], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 140, 153], "miss": [18, 122, 124, 129, 130, 134, 1137, 1141], "add": [18, 19, 20, 23, 26, 27, 41, 42, 57, 58, 71, 72, 73, 76, 77, 78, 79, 86, 87, 88, 89, 102, 103, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 136, 138, 153, 399, 400, 403, 419, 605, 606, 684, 688, 771, 811, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1105, 1135, 1136], "explicit": [18, 21, 130, 131, 133, 136, 153], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 683, 710, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131], "pace": 18, "updat": [18, 19, 20, 21, 45, 46, 76, 77, 90, 91, 118, 120, 122, 123, 128, 129, 130, 131, 136, 138, 139, 141, 153, 683, 729, 741, 742, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 826, 978, 979, 980, 982, 989, 990, 998, 999, 1110, 1111, 1137, 1138, 1139, 1140, 1141, 1142], "suggest": [18, 19, 119, 124], "latest": [18, 19, 20, 21, 121, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1121, 1130], "packag": [18, 21, 125, 134, 153], "ensur": [18, 19, 120, 124, 125, 129, 131, 134, 683, 729], "align": [18, 76, 77, 136, 138, 1099, 1105], "accord": [18, 21, 37, 38, 76, 77, 82, 83, 125, 126, 131, 273, 295, 296, 297, 298, 299, 306, 313, 316, 399, 415, 418, 465, 468, 607, 610, 683, 711, 741, 742, 829, 892, 894, 917, 927, 930, 974, 977, 1055, 1076, 1079, 1084, 1087], "stabl": [18, 65, 66, 110, 111, 136, 153, 683, 719, 720, 744, 745, 752, 753, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "pypi": [18, 20, 153], "mayb": [18, 29, 33, 34, 136, 138], "person": [18, 19], "experi": [18, 137, 139, 153], "avoid": [18, 19, 124, 127, 128, 130, 134, 138, 399, 510, 513], "pip": [18, 152, 1099], "instal": [18, 19, 21, 134, 152, 1099], "abil": [18, 137, 153], "certain": [18, 76, 77, 124, 125, 131, 153, 203, 204, 205, 231, 232, 234, 235], "perhap": [18, 138, 139, 140, 153], "keep": [18, 19, 76, 77, 123, 124, 130, 137, 139, 141, 683, 769], "track": [18, 19, 982, 994, 1133, 1134], "termin": [18, 19, 21, 73, 76, 77, 78, 79, 130, 136, 139], "run": [18, 21, 45, 46, 90, 91, 120, 122, 123, 124, 127, 134, 136, 137, 138, 139, 140, 141, 152, 153, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 978, 979, 980, 981, 1121, 1132, 1133, 1134], "command": [18, 21, 1099], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 63, 64, 108, 109, 121, 124, 125, 131, 134, 136, 138, 139, 141, 200, 201, 683, 689, 829, 844, 846, 873, 875, 880, 882, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033], "3": [18, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 165, 166, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 195, 196, 198, 202, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 265, 267, 268, 272, 273, 295, 296, 297, 298, 299, 307, 310, 313, 316, 340, 343, 366, 372, 383, 387, 390, 394, 399, 400, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 428, 429, 435, 436, 437, 438, 439, 445, 448, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 477, 478, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 530, 533, 540, 543, 550, 553, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 685, 686, 691, 692, 701, 708, 711, 712, 713, 714, 715, 716, 734, 750, 757, 764, 771, 773, 774, 775, 776, 777, 789, 792, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 850, 852, 861, 863, 867, 869, 880, 882, 886, 888, 889, 891, 898, 900, 901, 902, 904, 905, 906, 907, 909, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 945, 946, 947, 948, 951, 952, 954, 955, 956, 957, 958, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1072, 1075, 1080, 1083, 1088, 1089, 1092, 1099], "8": [18, 21, 23, 26, 27, 41, 42, 53, 54, 55, 56, 73, 78, 79, 86, 87, 90, 91, 98, 99, 104, 105, 122, 124, 130, 135, 139, 164, 180, 183, 203, 226, 229, 268, 272, 273, 306, 313, 316, 366, 378, 395, 399, 415, 418, 419, 425, 428, 429, 445, 448, 475, 478, 485, 488, 520, 521, 522, 523, 524, 530, 533, 555, 558, 605, 606, 632, 633, 637, 639, 640, 641, 642, 643, 644, 645, 646, 657, 660, 662, 665, 677, 683, 692, 711, 734, 771, 773, 776, 789, 791, 792, 793, 812, 819, 822, 829, 835, 837, 838, 840, 841, 843, 867, 869, 886, 888, 901, 902, 903, 904, 905, 906, 907, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 935, 938, 957, 1006, 1007, 1008, 1009, 1010, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059, 1099, 1121, 1132], "activ": [18, 19, 21, 25, 71, 72, 75, 116, 117, 119, 140, 165, 168, 170, 173, 175, 177, 178, 179, 180, 183, 185, 188, 190, 193, 195, 199, 1099, 1108, 1109], "setup": [18, 19], "click": [18, 19, 121, 1099], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 141, 366, 390, 394, 399, 590, 593, 595, 598, 1018, 1022, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071], "left": [18, 19, 76, 77, 122, 131, 399, 455, 458, 829, 844, 846, 857, 859, 880, 882, 1018, 1019, 1099], "panel": 18, "select": [18, 19, 124, 136, 138, 141, 153], "drop": [18, 153], "down": [18, 124, 138], "path": [18, 21], "manual": [18, 19, 124, 140, 982, 983, 992, 993], "builtin": [18, 21, 138, 140], "requir": [18, 21, 119, 120, 121, 122, 124, 128, 129, 131, 132, 138, 153, 200, 201, 399, 657, 660, 829, 844, 846, 917, 962, 965, 1110, 1111], "cmd": [18, 21], "directori": [18, 19, 21, 124, 125, 683, 749], "folder": [18, 19, 21, 119, 123, 124, 126], "file": [18, 19, 21, 76, 77, 119, 121, 124, 126, 127, 129, 130, 134, 136, 139, 683, 749, 1133, 1134], "abov": [18, 19, 21, 35, 36, 104, 105, 120, 121, 122, 124, 125, 126, 127, 129, 130, 133, 134, 138, 139, 140, 141, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 607, 610, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 844, 846, 889, 891, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1006, 1008, 1009, 1010, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1072, 1075, 1076, 1079, 1080, 1083, 1088, 1089, 1092], "m": [18, 19, 21, 35, 36, 51, 52, 96, 97, 118, 136, 203, 237, 240, 255, 257, 259, 260, 262, 264, 683, 692, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 1006, 1011, 1012, 1014], "python3": [18, 19, 21], "script": [18, 19, 21, 122, 136, 153], "bat": [18, 19, 21], "OR": [18, 19, 21, 69, 70, 114, 115, 399, 460, 463, 595, 598, 1088, 1094, 1095, 1096, 1097, 1098], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 73, 76, 77, 78, 79, 121, 129, 130, 134, 366, 379], "os": 18, "note": [18, 19, 119, 121, 122, 124, 130, 131, 399, 632, 635, 829, 844, 846, 880, 882, 917, 962, 965, 1023, 1029, 1033, 1055, 1064, 1067], "tick": [18, 19], "abl": [18, 19, 76, 77, 126, 131, 133, 134, 138, 141], "To": [18, 122, 124, 126, 130, 134, 139, 140, 141, 1099], "ivy_test": [18, 19], "test_array_api": [18, 19, 123, 124], "cd": [18, 19, 21], "r": [18, 76, 77, 683, 692, 769, 829, 873, 875, 898, 900], "txt": 18, "visual": [18, 134, 153], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 135, 399, 510, 513], "conflict": [18, 19, 139], "addit": [18, 19, 57, 58, 76, 77, 102, 103, 119, 121, 124, 125, 130, 131, 138, 139, 141, 366, 390, 394, 399, 415, 418, 683, 705, 706, 707, 1000, 1001, 1002, 1003, 1004, 1005, 1121, 1131], "yet": [18, 20, 130], "particular": [18, 19, 119, 122, 124, 131, 133, 399, 400, 403], "system": [18, 19, 153, 829, 877, 879], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 125], "imag": [18, 21, 48, 49, 50, 93, 94, 95, 119, 136, 137, 139, 141, 152, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 1099], "profession": 18, "execut": [18, 19, 21, 130, 133, 136, 138, 141, 153, 683, 765], "deploy": 18, "top": [18, 19, 124, 125, 139, 140, 1099], "press": [18, 139, 1099], "ok": 18, "correctli": [18, 76, 77, 120, 124, 130, 131, 134, 140, 153, 829, 857, 859, 1018, 1019], "caus": [18, 19, 122, 124, 130, 133, 134, 153], "earlier": [18, 19], "might": [18, 19, 119, 124, 128, 131, 136, 138, 139, 683, 704], "necessari": [18, 122, 127, 130, 133], "virtualis": 18, "detail": [18, 19, 20, 119, 120, 123, 124, 126, 127, 128, 130, 139, 140, 203, 220, 223, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 76, 77, 88, 89, 203, 237, 240, 683, 695, 696, 697, 698, 812, 824, 829, 857, 859, 895, 897, 1121, 1129], "keyr": 18, "fssl": 18, "download": [18, 124], "gpg": 18, "dearmor": 18, "o": [18, 118, 136, 683, 692], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 141, 153], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 57, 58, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 124, 125, 130, 131, 132, 134, 136, 139, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 207, 208, 209, 226, 228, 230, 237, 238, 240, 242, 245, 273, 285, 286, 288, 295, 297, 299, 366, 372, 389, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 692, 712, 714, 716, 757, 759, 760, 762, 769, 771, 773, 775, 777, 789, 791, 793, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 830, 832, 834, 886, 888, 902, 904, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 923, 926, 935, 938, 952, 954, 956, 957, 962, 965, 982, 983, 984, 985, 988, 993, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1018, 1021, 1023, 1029, 1030, 1032, 1033, 1089, 1091, 1093, 1094, 1096, 1098, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "dev": [18, 39, 40, 76, 77, 84, 85, 126, 132, 136, 138, 140, 366, 377, 379], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 124, 130, 153], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 124, 134, 152, 366], "post": [18, 57, 58, 102, 103, 141, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1105], "It": [18, 19, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 74, 75, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 133, 136, 138, 139, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 366, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 705, 706, 707, 709, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1022, 1023, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 121, 122, 124, 126, 130, 133, 136, 138, 139, 153], "featur": [18, 119, 120, 139, 1099], "vm": 18, "azur": 18, "cloud": [18, 152], "mean": [18, 19, 67, 68, 76, 77, 112, 113, 116, 117, 118, 122, 124, 126, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 366, 389, 683, 706, 978, 979, 980, 981, 982, 988, 1006, 1011, 1023, 1024, 1028, 1055, 1099, 1112], "configur": [18, 19, 21, 76, 77, 131, 366, 388, 982, 995], "defin": [18, 20, 104, 105, 119, 120, 121, 124, 131, 138, 140, 153, 399, 607, 610, 632, 635, 683, 738, 829, 835, 837, 844, 846, 877, 879, 1006, 1008, 1009, 1010, 1055, 1060, 1063, 1064, 1067, 1068, 1071], "dockerfil": [18, 21], "longer": [18, 124, 131, 133], "worri": 18, "platform": 18, "agnost": [18, 120, 129, 136, 138, 141, 153, 1099], "usual": [18, 124, 125], "studio": 18, "favourit": 18, "extens": [18, 19, 121, 124, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 555, 558, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 829, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092], "theme": 18, "too": [18, 19, 134, 153, 399, 415, 418, 607, 610], "done": [18, 19, 122, 124, 134, 139], "unsupport": [18, 125, 134, 273, 321, 322], "old": [18, 76, 77, 133], "slow": 18, "ipad": 18, "long": [18, 19, 122, 812, 826], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 130, 812, 827, 1099, 1121, 1132], "pane": [18, 19], "readi": [18, 20], "begin": [18, 982, 983, 993], "outlin": [18, 19, 20, 118, 121, 124, 126, 130, 133, 138], "green": [18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1146, 1147], "dropdown": 18, "tab": [18, 139, 1099], "master": [18, 19, 130], "vs": [18, 124], "view": [18, 19, 203, 220, 223, 812, 815, 819, 822], "log": [18, 19, 41, 42, 86, 87, 126, 130, 133, 136, 139, 203, 234, 235, 399, 564, 570, 573, 580, 583, 829, 876, 1099], "built": [18, 19, 124, 137, 203, 204, 205, 1121, 1132, 1133, 1134], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 41, 42, 80, 81, 104, 105, 122, 124, 203, 226, 228, 229, 230, 273, 313, 316, 399, 445, 448, 490, 493, 632, 633, 635, 637, 640, 642, 643, 812, 815, 829, 841, 843, 867, 869, 886, 888, 917, 952, 955, 1006, 1008, 1009, 1010, 1018, 1021, 1023, 1024, 1028, 1055, 1056, 1059], "minut": 18, "launch": 18, "12": [18, 41, 42, 86, 87, 100, 101, 102, 103, 104, 105, 122, 124, 130, 399, 445, 448, 470, 473, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 637, 640, 652, 654, 656, 683, 701, 720, 771, 773, 776, 829, 841, 843, 867, 869, 886, 888, 917, 935, 938, 952, 955, 958, 960, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059], "output": [18, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 129, 130, 132, 133, 136, 138, 140, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 366, 389, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 694, 695, 696, 698, 701, 702, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 725, 738, 741, 742, 743, 766, 771, 782, 783, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 982, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1022, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132], "That": [18, 19, 124, 138, 139, 140, 399, 632, 635], "alreadi": [18, 19, 76, 77, 120, 127, 130, 131, 138, 153, 399, 475, 478, 515, 518, 607, 610, 637, 640, 678, 682, 829, 867, 869, 1099], "refer": [18, 19, 69, 70, 114, 115, 120, 124, 125, 126, 131, 153, 203, 217, 218, 399, 510, 513, 570, 573, 771, 773, 776, 778, 780, 829, 892, 894, 898, 900, 1055, 1076, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1131], "approach": [18, 19, 124, 126, 130, 138, 139, 153], "colour": 18, "applic": [18, 131, 132, 140, 812, 827, 828, 982, 988, 994], "good": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140], "chanc": 18, "vscode": 18, "show": [18, 19, 76, 77, 122, 124, 133, 152, 153, 1099], "explor": [18, 19, 137, 141, 152], "troubleshoot": 18, "sometim": [18, 19, 124], "ever": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "64": [18, 49, 50, 94, 95, 124, 139, 140, 399, 657, 660, 662, 665, 812, 818, 819, 820, 821, 822, 823, 829, 867, 869, 1055, 1056, 1059, 1099, 1121, 1132], "bit": [18, 122, 124, 126, 130, 138, 273, 312, 313, 316, 324, 327, 399, 450, 453, 455, 458, 465, 468, 1055, 1072, 1075, 1080, 1083], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 63, 64, 108, 109, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 203, 204, 205, 273, 285, 288, 399, 510, 513, 829, 853, 856, 917, 935, 938, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1099], "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 121, 122, 124, 126, 129, 130, 132, 133, 138, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 590, 593, 595, 598, 605, 606, 617, 620, 632, 635, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1064, 1067, 1088, 1089, 1092, 1099], "fix": [18, 19], "fail": [18, 20, 123, 124, 134, 136, 138], "attempt": [18, 134, 153], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 126, 128, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 273, 295, 296, 297, 299, 351, 354, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 688, 705, 706, 707, 712, 713, 714, 716, 759, 760, 761, 762, 771, 773, 774, 775, 777, 789, 790, 791, 793, 794, 796, 798, 800, 812, 819, 820, 821, 823, 825, 827, 828, 829, 830, 831, 832, 834, 861, 863, 870, 872, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 962, 965, 978, 979, 980, 982, 988, 991, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1107, 1108, 1109, 1135, 1136], "proce": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "modifi": [18, 19, 121, 126, 131, 132, 134, 136], "properli": [18, 118], "enter": [18, 19, 120, 129, 131, 132, 366, 771, 811], "unsur": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "feel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 1099], "server": [19, 1099], "appropri": [19, 71, 72, 116, 117, 124, 128, 399, 415, 418, 607, 610, 1018, 1019], "context": [19, 122, 124, 130, 131, 132, 366, 683, 736, 812, 827, 1121, 1132], "suitabl": [19, 119, 130], "quick": [19, 118, 140], "alwai": [19, 20, 45, 46, 76, 77, 90, 91, 119, 120, 121, 124, 126, 127, 129, 130, 133, 134, 136, 138, 153, 273, 280, 283, 399, 415, 418, 607, 610, 683, 729, 771, 789, 790, 791, 792, 793, 807], "correct": [19, 20, 67, 68, 112, 113, 118, 120, 126, 130, 131, 132, 134, 273, 360, 917, 918, 921, 1055, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1099], "tendenc": 19, "gener": [19, 20, 21, 44, 45, 46, 71, 72, 76, 77, 89, 90, 91, 116, 117, 118, 119, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 200, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 632, 635, 647, 650, 657, 660, 662, 665, 684, 687, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 765, 766, 767, 768, 769, 770, 771, 789, 790, 791, 792, 793, 829, 841, 843, 917, 931, 934, 952, 955, 1006, 1007, 1008, 1009, 1012, 1014, 1016, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1099, 1137, 1141], "land": 19, "end": [19, 130, 133, 135, 152, 153, 203, 204, 205, 399, 435, 438, 1099, 1105], "world": 19, "come": [19, 20, 124, 140, 151, 1099, 1105], "fly": 19, "hard": [19, 138], "receiv": [19, 124, 131, 132, 683, 690, 735, 1121, 1131], "respons": [19, 21], "internship": 19, "comment": [19, 134], "trigger": 19, "unansw": 19, "label": [19, 53, 54, 98, 99, 136, 137, 141, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "respond": 19, "remov": [19, 20, 21, 76, 77, 121, 124, 126, 131, 133, 141, 829, 841, 843, 853, 856, 889, 891, 917, 958, 961, 978, 979, 980], "someon": [19, 153], "els": [19, 20, 119, 126, 127, 133, 136, 138, 140, 141, 153, 273, 306, 683, 693, 704, 708, 982, 992], "strive": [19, 124, 153], "repli": 19, "newli": [19, 124, 133, 200, 201, 273, 280, 283, 683, 694], "place": [19, 35, 36, 55, 56, 76, 77, 80, 81, 100, 101, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 134, 141, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 295, 298, 330, 333, 340, 343, 366, 390, 394, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 727, 728, 729, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 953, 954, 955, 956, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092, 1137, 1138, 1139, 1140, 1141, 1142], "bug": [19, 124], "serv": [19, 120, 124, 126, 129, 130, 135, 1099], "suspect": 19, "behaviour": [19, 120, 121, 124, 125, 129, 130, 133, 138], "observ": 19, "confid": 19, "noth": [19, 76, 77], "wrong": 19, "someth": [19, 119, 139, 140, 153], "bet": 19, "act": [19, 122, 125, 153], "placehold": [19, 120, 129, 134, 982, 994], "sub": [19, 20, 76, 77, 118, 124, 125, 130, 138, 139, 140, 829, 841, 843, 917, 957, 978, 979, 980, 981, 1099], "mark": [19, 124], "ii": [19, 1055, 1056, 1059], "iii": 19, "titl": [19, 1099], "issue_numb": 19, "delet": [19, 21], "No": [19, 136], "wait": [19, 73, 76, 77, 78, 79], "progress": [19, 130, 137, 141], "pr": 19, "soon": [19, 130, 151, 153, 1099, 1105], "partial": [19, 76, 77, 1133, 1134], "solut": [19, 124, 130, 829, 877, 879], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 35, 36, 43, 44, 88, 89, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 136, 138, 140, 203, 225, 226, 227, 229, 683, 684, 685, 686, 687, 688], "shape": [19, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 131, 132, 133, 136, 138, 139, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 247, 248, 249, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 291, 292, 293, 294, 366, 385, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 705, 706, 707, 709, 712, 713, 714, 715, 716, 722, 725, 738, 741, 742, 748, 756, 758, 768, 771, 773, 775, 777, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1030, 1031, 1032, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1135, 1136], "move": [19, 76, 77, 119, 366, 390, 394], "within": [19, 29, 33, 34, 124, 140, 153, 203, 204, 205, 1006, 1012, 1014], "7": [19, 21, 23, 26, 27, 41, 42, 45, 46, 53, 54, 55, 56, 73, 78, 79, 86, 87, 90, 91, 98, 99, 102, 103, 104, 105, 122, 124, 126, 130, 133, 164, 170, 173, 175, 178, 273, 313, 316, 324, 327, 366, 378, 399, 400, 403, 415, 416, 417, 418, 419, 425, 427, 445, 448, 450, 453, 460, 461, 462, 463, 464, 470, 473, 475, 478, 485, 487, 488, 489, 490, 491, 493, 495, 496, 498, 505, 508, 515, 518, 520, 521, 522, 523, 524, 530, 533, 555, 558, 605, 606, 632, 635, 637, 639, 640, 641, 642, 643, 644, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 683, 692, 701, 711, 734, 771, 773, 774, 775, 776, 777, 778, 780, 789, 790, 792, 794, 796, 812, 818, 819, 822, 828, 829, 835, 837, 838, 840, 841, 843, 867, 869, 886, 888, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 931, 934, 935, 938, 957, 966, 969, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059], "dai": 19, "close": [19, 121, 124, 399, 510, 513, 637, 640, 829, 880, 882], "likewis": [19, 120, 121, 126, 130, 131, 139], "freed": 19, "flag": [19, 45, 46, 76, 77, 90, 91, 131, 133, 138, 366, 372, 771, 789, 790, 791, 792, 793], "purpos": [19, 21, 120, 122, 124, 126, 128, 129, 130, 135, 138, 399, 510, 513, 1099], "remain": [19, 122, 153, 399, 415, 418, 607, 610, 632, 635, 917, 948, 951, 982, 988], "access": [19, 21, 76, 77, 125, 131], "short": [19, 140, 812, 826], "basi": [19, 123, 139], "situat": [19, 141], "alloc": [19, 35, 36, 153, 203, 255, 257, 259, 260, 262, 264, 273, 280, 283], "upon": [19, 122, 124, 133, 153], "period": 19, "prevent": [19, 45, 46, 90, 91, 133, 134, 138, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1055, 1080, 1083, 1137, 1138, 1139], "unabl": 19, "obvious": 19, "never": [19, 124, 130], "reflect": [19, 129], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 138, 141], "becaus": [19, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 136, 140, 141, 153], "inact": 19, "limit": [19, 73, 76, 77, 78, 79, 122, 124, 134, 136, 139, 141, 153, 273, 313, 316, 324, 327, 683, 695, 696, 698, 917, 918, 921], "me": 19, "unfairli": 19, "definit": [19, 51, 52, 96, 97, 126, 131, 138, 829, 830, 831, 832, 833, 834, 835, 837], "investig": 19, "Then": [19, 21, 125, 138, 153], "practic": 19, "separ": [19, 124, 129, 130, 134, 136, 138, 139], "branch": [19, 130, 153, 200, 201, 399, 435, 438], "simpli": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 125, 126, 129, 130, 132, 133, 136, 140, 141, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 830, 831, 832, 834, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098], "role": [19, 125, 137], "kept": [19, 73, 76, 77, 78, 79, 133, 978, 979, 980], "date": 19, "upstream": [19, 123], "complic": [19, 136], "root": [19, 21, 41, 42, 86, 87, 139, 399, 657, 658, 659, 660, 661, 1006, 1007, 1011, 1137, 1138, 1139, 1140, 1142], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1055, 1072, 1075, 1080, 1083], "clone": [19, 21, 76, 77], "push": [19, 123, 134], "both": [19, 120, 121, 122, 124, 125, 126, 130, 132, 133, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 350, 399, 400, 403, 415, 418, 420, 423, 425, 428, 475, 478, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 627, 630, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 711, 771, 773, 776, 812, 815, 819, 822, 828, 829, 830, 833, 835, 837, 841, 843, 853, 856, 892, 894, 917, 952, 955, 1000, 1001, 1004, 1023, 1029, 1033, 1055, 1060, 1063, 1088, 1089, 1092], "abort": 19, "tediou": 19, "resolut": [19, 273, 313, 316], "stash": 19, "reinstat": 19, "correspond": [19, 41, 42, 55, 56, 73, 76, 77, 78, 79, 86, 87, 100, 101, 120, 121, 122, 123, 124, 126, 129, 130, 131, 273, 285, 288, 399, 435, 436, 437, 438, 439, 627, 628, 630, 829, 835, 837, 844, 846, 877, 879, 917, 923, 926, 952, 953, 954, 955, 956, 1006, 1007, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 121, 125, 130, 138], "atlassian": 19, "tutori": [19, 125], "wrote": 19, "piec": [19, 126, 128, 129, 136], "inform": [19, 124, 130, 134, 273, 313, 316, 324, 327, 683, 689, 771, 807], "tag": 19, "describ": [19, 124, 137, 141, 1055, 1056, 1059, 1072, 1075, 1076, 1079, 1080, 1083], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1099], "eg": [19, 124], "16": [19, 51, 52, 86, 87, 104, 105, 122, 124, 139, 273, 324, 327, 399, 672, 673, 675, 676, 812, 818, 819, 822, 829, 830, 831, 833, 841, 843, 867, 869, 1008, 1010, 1018, 1022, 1055, 1056, 1059], "5": [19, 21, 23, 26, 27, 35, 36, 41, 42, 43, 44, 51, 52, 55, 56, 57, 58, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 120, 122, 124, 127, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 203, 226, 227, 228, 229, 230, 237, 240, 250, 253, 265, 267, 268, 272, 273, 295, 297, 298, 299, 307, 310, 313, 316, 340, 343, 366, 383, 387, 399, 400, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 435, 436, 437, 438, 439, 440, 443, 445, 448, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 510, 511, 512, 513, 515, 516, 517, 518, 520, 522, 523, 524, 530, 533, 540, 543, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 657, 660, 662, 665, 672, 673, 675, 676, 677, 683, 684, 685, 692, 701, 711, 712, 715, 716, 734, 757, 771, 773, 775, 776, 777, 789, 792, 812, 815, 817, 818, 819, 822, 828, 829, 830, 831, 833, 835, 837, 838, 840, 841, 843, 850, 852, 867, 869, 886, 888, 889, 891, 901, 912, 915, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 945, 946, 947, 948, 951, 952, 954, 955, 956, 957, 958, 961, 966, 969, 982, 985, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1092, 1121, 1132], "past": 19, "l": [19, 51, 52, 96, 97, 118, 829, 830, 831, 832, 833, 834, 844, 846, 853, 856, 889, 891], "filepath": [19, 76, 77], "grep": 19, "v": [19, 136, 139, 140, 141, 812, 828, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1143, 1144], "commit_id": 19, "handi": [19, 124], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 122], "previou": [19, 120, 124, 125, 141, 153, 273, 364, 683, 766, 767, 768, 771, 778, 780, 794, 796], "shown": [19, 71, 72, 76, 77, 116, 117, 120, 122, 124, 125, 134, 136, 138, 153, 399, 435, 438, 445, 448, 470, 473, 485, 488, 637, 640, 677, 829, 838, 840, 917, 931, 934, 935, 938, 1023, 1024, 1028, 1044, 1045, 1048], "whenev": [19, 124, 138, 139], "think": [19, 122], "gain": [19, 135, 140, 1112], "quit": [19, 20, 121, 124, 126, 128, 129], "repeat": [19, 55, 56, 76, 77, 100, 101, 121, 122, 124, 127, 129, 130, 131, 134, 683, 707, 917, 947, 970, 973], "yourself": [19, 20, 124, 152], "simpler": [19, 138], "cannot": [19, 125, 127, 131, 141], "least": [19, 122, 124, 126, 129, 829, 853, 856], "final": [19, 121, 122, 126, 129, 131, 133, 134, 136, 138, 139, 203, 231, 232, 234, 235, 683, 710, 1121, 1132], "tickbox": 19, "lower": [19, 35, 36, 51, 52, 76, 77, 96, 97, 122, 124, 136, 153, 203, 217, 218, 255, 257, 259, 399, 605, 829, 830, 831, 832, 833, 834, 1006, 1012, 1014], "corner": 19, "without": [19, 76, 77, 119, 120, 122, 125, 126, 129, 130, 132, 134, 136, 138, 139, 140, 152, 153, 683, 740, 747, 917, 948, 951, 982, 984, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "span": 19, "intent": [19, 133], "larg": [19, 139, 399, 415, 418, 607, 610], "discourag": 19, "philosophi": 19, "increment": [19, 683, 728], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1099], "wast": 19, "spot": [19, 126], "mistak": [19, 134], "propos": 19, "mountain": 19, "around": [19, 73, 76, 77, 78, 79, 120, 126, 129, 138, 153], "advoc": [19, 153], "individu": [19, 20, 126], "per": [19, 49, 50, 94, 95, 124, 139, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "style": [19, 1018, 1021], "ve": [19, 135, 138, 1006, 1007, 1099], "were": [19, 76, 77, 119, 124, 130, 134], "actual": [19, 118, 126, 133, 135, 138, 140, 153], "aim": [19, 135], "part": [19, 35, 36, 119, 123, 124, 126, 136, 137, 141, 152, 153, 203, 255, 257, 259, 260, 262, 264, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1133, 1134], "subsect": 19, "session": [19, 1099], "block": [19, 124, 126, 134, 135, 137, 141, 153, 366, 771, 811, 1099], "smaller": [19, 55, 56, 100, 101, 136, 141, 917, 918, 921, 952, 953, 954, 955, 956, 1055, 1072, 1075, 1080, 1083], "edit": 19, "exact": [19, 74, 75, 76, 77, 136, 165, 167, 169, 1023, 1024, 1028], "beauti": 19, "particularli": [19, 124, 139, 153], "concern": [19, 118, 122, 130, 133, 135], "effici": [19, 120, 124, 126, 130, 133, 134, 136, 139, 153], "difficult": [19, 124, 153, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "undo": 19, "stress": 19, "frequenc": [19, 683, 710], "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 73, 76, 77, 78, 79, 119, 126, 129, 130, 139, 140, 683, 699, 982, 995], "fact": [19, 124, 139], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 76, 77, 133, 136, 366, 389], "subfold": [19, 119, 124], "insid": [19, 21, 119, 124, 130, 131], "wide": [19, 124], "via": [19, 119, 130, 131, 132, 133, 136, 138, 139, 152, 982, 983, 992, 993], "dep": 19, "fresh": 19, "copi": [19, 21, 35, 36, 37, 38, 43, 44, 76, 77, 80, 81, 82, 83, 88, 89, 121, 127, 131, 136, 138, 139, 152, 153, 203, 207, 208, 209, 210, 220, 223, 273, 280, 281, 282, 283, 284, 366, 390, 394, 683, 700, 759, 760, 761, 762, 763, 764, 917, 948, 951, 982, 984, 1044, 1050, 1053], "arsen": 19, "pycharm": 19, "pytest": [19, 124], "button": 19, "declar": 19, "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 124], "test_funct": [19, 124], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 76, 77, 82, 83, 124, 273, 301, 302, 303, 305, 357, 358, 683, 699, 703, 723, 771, 806], "q": [19, 153, 812, 828, 829, 844, 846, 873, 875], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "variou": [19, 120, 121, 128, 152], "valu": [19, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 55, 56, 57, 58, 63, 64, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 108, 109, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 141, 153, 195, 196, 197, 198, 203, 204, 205, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 273, 280, 283, 301, 302, 303, 305, 366, 388, 389, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 418, 420, 421, 422, 423, 424, 430, 431, 432, 433, 434, 435, 436, 437, 439, 475, 478, 490, 491, 492, 494, 495, 498, 500, 503, 505, 507, 509, 510, 512, 514, 515, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 600, 601, 605, 606, 607, 608, 609, 610, 611, 617, 620, 622, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 640, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 699, 704, 710, 711, 712, 713, 714, 715, 716, 723, 726, 730, 740, 741, 742, 744, 745, 747, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 794, 796, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 861, 863, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 895, 897, 917, 918, 919, 920, 921, 922, 927, 928, 929, 930, 943, 946, 948, 951, 974, 976, 977, 978, 979, 980, 982, 986, 987, 988, 989, 990, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141], "cpu": [19, 43, 44, 76, 77, 88, 89, 104, 105, 132, 153, 203, 231, 232, 234, 235, 268, 272, 366, 372, 373, 376, 378, 381, 384, 386, 387, 390, 394, 395, 397, 398, 683, 711, 712, 713, 714, 715, 716, 738, 741, 742, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "gpu": [19, 104, 105, 132, 138, 153, 366, 372, 378, 380, 382, 386, 387, 388, 395, 397, 1008, 1010], "combin": [19, 73, 76, 77, 78, 79, 122, 124, 126, 129, 130, 141, 829, 835, 837], "wherebi": [20, 130, 982, 994], "broad": 20, "distribut": [20, 53, 54, 76, 77, 98, 99, 104, 105, 124, 132, 153, 812, 824, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1121, 1129, 1133, 1134], "across": [20, 76, 77, 120, 122, 124, 126, 130, 131, 366, 387, 388, 683, 691, 692, 982, 988, 1018, 1020], "todo": 20, "commit": [20, 124], "NOT": [20, 399, 590, 593], "static": [20, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 126, 153, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 200, 201, 226, 230, 295, 299, 373, 377, 399, 400, 404, 405, 409, 410, 414, 415, 419, 420, 424, 425, 429, 430, 434, 435, 439, 440, 444, 445, 449, 450, 454, 455, 459, 460, 464, 465, 469, 470, 474, 475, 479, 480, 484, 485, 489, 490, 494, 495, 499, 500, 504, 505, 509, 510, 513, 514, 515, 519, 520, 524, 525, 529, 530, 534, 535, 539, 540, 544, 545, 549, 550, 554, 555, 559, 560, 564, 565, 569, 570, 574, 575, 579, 580, 584, 585, 589, 590, 594, 595, 599, 600, 604, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 657, 661, 662, 666, 667, 668, 672, 673, 678, 679, 684, 688, 712, 716, 759, 760, 789, 793, 819, 823, 830, 834, 902, 906, 907, 911, 912, 916, 918, 922, 943, 947, 952, 956, 1001, 1005, 1008, 1010, 1029, 1030, 1089, 1093, 1094, 1098], "method": [20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 134, 136, 137, 140, 141, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 212, 213, 220, 221, 223, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 272, 273, 295, 296, 297, 299, 307, 310, 313, 316, 324, 327, 373, 374, 375, 377, 390, 391, 392, 393, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 699, 700, 711, 712, 713, 714, 716, 741, 742, 757, 759, 760, 761, 762, 763, 764, 771, 773, 774, 775, 777, 789, 790, 791, 793, 794, 796, 798, 800, 811, 812, 818, 819, 820, 821, 823, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 931, 934, 935, 938, 943, 944, 945, 947, 952, 953, 954, 955, 956, 957, 958, 959, 960, 966, 969, 982, 983, 993, 994, 995, 1001, 1002, 1003, 1005, 1006, 1008, 1010, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1121, 1132, 1133, 1134], "instanc": [20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 129, 131, 133, 139, 140, 141, 154, 162, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 295, 296, 297, 298, 307, 310, 313, 316, 324, 327, 330, 333, 340, 343, 366, 373, 374, 375, 386, 390, 391, 392, 393, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 435, 436, 437, 438, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 455, 456, 457, 460, 461, 462, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 495, 496, 497, 500, 501, 502, 505, 506, 507, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 530, 531, 532, 533, 535, 536, 537, 540, 541, 542, 543, 545, 546, 547, 550, 551, 552, 555, 556, 557, 558, 560, 561, 562, 565, 566, 567, 570, 571, 572, 575, 576, 577, 580, 581, 582, 585, 586, 587, 590, 591, 592, 595, 596, 597, 600, 601, 602, 605, 606, 607, 608, 609, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 667, 669, 670, 672, 674, 675, 676, 677, 678, 680, 681, 683, 684, 685, 686, 700, 711, 712, 713, 714, 729, 748, 757, 759, 761, 762, 763, 764, 773, 774, 775, 777, 789, 790, 791, 812, 815, 818, 819, 820, 821, 822, 828, 829, 830, 831, 832, 833, 835, 837, 838, 840, 841, 843, 901, 902, 903, 904, 905, 907, 908, 909, 912, 913, 914, 917, 918, 919, 920, 931, 934, 935, 938, 943, 944, 945, 952, 953, 954, 955, 957, 958, 959, 960, 966, 969, 1000, 1001, 1002, 1003, 1004, 1006, 1011, 1012, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1110, 1111], "revers": [20, 23, 26, 27, 73, 78, 79, 121, 122, 141, 153, 683, 704, 917, 935, 938], "resourc": 20, "content": [20, 21, 76, 77, 125, 133, 136, 139], "thei": [20, 76, 77, 118, 119, 122, 124, 126, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 153, 273, 350, 978, 979, 980, 1006, 1007, 1099, 1143, 1144], "hypothesi": 20, "cover": [20, 121, 122, 124, 126, 128, 135], "lambda": [20, 136, 139, 1137, 1140, 1142], "direct": [20, 125, 140, 141, 152, 1044, 1050, 1053], "bind": [20, 130], "special": [20, 23, 26, 27, 73, 78, 79, 119, 120, 121, 122, 129, 399, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 470, 473, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087], "aforement": 20, "categori": [20, 119, 125, 129, 130, 131, 135, 1099], "parent": [20, 138, 771, 811], "arraywithelementwis": [20, 23, 26, 27, 41, 129], "containerwithmanipul": [20, 73, 78, 79, 100], "hint": [20, 119, 120, 121, 126, 129, 133, 134, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092], "its": [20, 21, 55, 56, 100, 101, 121, 124, 125, 134, 141, 273, 285, 288, 366, 389, 683, 758, 829, 853, 856, 917, 931, 934, 948, 951, 952, 953, 954, 955, 956, 966, 969], "docstr": [20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 126, 130, 134, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 295, 296, 297, 298, 299, 313, 316, 324, 327, 373, 374, 375, 377, 390, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 829, 830, 831, 832, 834, 838, 840, 841, 843, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 931, 934, 935, 938, 943, 944, 945, 947, 952, 953, 954, 955, 956, 958, 959, 960, 1001, 1002, 1003, 1005, 1008, 1010, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098], "thorough": [20, 120, 121, 124], "transpil": [20, 125, 135, 137, 1099, 1105], "builder": [21, 151, 153, 1099], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 55, 56, 80, 81, 100, 101, 226, 228, 230, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 829, 841, 843, 861, 863, 870, 872, 889, 891, 917, 935, 938, 952, 953, 954, 955, 956, 1044, 1045, 1048, 1050, 1053, 1099], "synchron": 21, "rest": [21, 137, 141], "remove_doc": 21, "_": [21, 41, 42, 86, 87, 121, 124, 130, 133, 138, 139, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 511, 512, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 771, 773, 776, 778, 780, 829, 841, 843, 898, 900, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1044, 1045, 1048, 1055, 1060, 1063], "indic": [21, 43, 44, 49, 50, 55, 56, 57, 58, 76, 77, 88, 89, 94, 95, 100, 101, 102, 103, 125, 134, 137, 141, 164, 185, 188, 203, 207, 209, 399, 642, 645, 683, 711, 712, 713, 714, 715, 716, 725, 738, 741, 742, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 895, 897, 917, 952, 953, 954, 955, 956, 982, 983, 985, 987, 989, 990, 991, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1034, 1038, 1044, 1045, 1048, 1050, 1053, 1099, 1102, 1104, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1133, 1134], "privat": [21, 124, 1137, 1141], "fulfil": [21, 135, 1099], "autogenerated_sourc": 21, "format": [21, 76, 77, 118, 121, 131, 132, 136, 138, 139, 273, 307, 310, 366, 373, 376, 1055, 1056, 1059, 1099], "png": [21, 139], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 124, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 712, 714, 716, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 982, 995, 1001, 1003, 1005, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098], "read": [21, 76, 77, 1099], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 49, 50, 94, 95, 124, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "repres": [21, 41, 42, 86, 87, 124, 138, 195, 196, 197, 198, 203, 237, 240, 273, 312, 399, 410, 411, 412, 413, 414, 415, 418, 425, 426, 427, 428, 429, 440, 441, 442, 443, 444, 485, 486, 487, 488, 489, 607, 610, 652, 653, 654, 655, 656, 677, 771, 811, 812, 825, 829, 876, 877, 879], "overal": [21, 121, 130, 131, 132, 141], "markup": 21, "6": [21, 23, 26, 27, 35, 36, 41, 42, 45, 46, 55, 56, 73, 78, 79, 80, 81, 86, 87, 88, 89, 98, 99, 102, 103, 104, 105, 122, 124, 127, 130, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 203, 226, 227, 228, 229, 230, 268, 272, 273, 307, 310, 313, 316, 366, 383, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 428, 435, 437, 438, 439, 445, 448, 450, 453, 460, 461, 462, 463, 464, 470, 473, 475, 476, 477, 478, 480, 482, 483, 484, 485, 488, 490, 492, 493, 494, 495, 496, 497, 498, 510, 512, 515, 518, 520, 522, 523, 524, 530, 533, 540, 543, 555, 558, 605, 606, 612, 615, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 657, 660, 662, 665, 672, 676, 677, 683, 692, 701, 711, 712, 715, 716, 734, 757, 771, 773, 774, 776, 812, 815, 818, 819, 822, 828, 829, 835, 837, 838, 840, 841, 843, 867, 869, 880, 882, 886, 888, 901, 902, 904, 905, 906, 907, 909, 911, 912, 914, 915, 916, 917, 918, 919, 921, 923, 926, 931, 934, 935, 938, 943, 946, 948, 951, 952, 955, 957, 958, 961, 966, 969, 982, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1018, 1019, 1022, 1023, 1024, 1028, 1029, 1033, 1055, 1056, 1059, 1060, 1063, 1072, 1075], "extract": [21, 119], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 153], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 76, 77, 124, 136, 139, 399, 455, 458, 829, 841, 843, 853, 856], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 41, 42, 45, 46, 55, 56, 73, 78, 79, 86, 87, 90, 91, 104, 105, 122, 124, 139, 140, 273, 306, 313, 316, 324, 327, 399, 415, 416, 417, 418, 419, 425, 428, 445, 448, 450, 453, 490, 491, 492, 493, 494, 495, 496, 497, 498, 520, 522, 523, 524, 605, 606, 637, 639, 640, 641, 642, 645, 657, 660, 662, 665, 683, 711, 734, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 789, 792, 794, 795, 796, 797, 812, 815, 818, 819, 822, 829, 835, 837, 838, 840, 841, 843, 867, 869, 880, 882, 886, 888, 917, 918, 919, 921, 935, 938, 952, 955, 957, 1006, 1007, 1008, 1009, 1010, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059, 1137, 1138, 1139], "index": [21, 35, 36, 43, 44, 63, 64, 76, 77, 80, 81, 88, 89, 108, 109, 126, 130, 138, 202, 203, 217, 218, 237, 238, 239, 240, 241, 366, 386, 683, 689, 711, 712, 713, 714, 715, 716, 917, 962, 965, 982, 985, 986, 989, 990, 991, 996, 998, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1102, 1104], "create_index_rst": 21, "14": [21, 41, 42, 86, 87, 102, 103, 104, 105, 122, 124, 130, 273, 313, 316, 324, 327, 399, 425, 428, 435, 436, 437, 438, 439, 470, 473, 642, 646, 652, 654, 656, 771, 773, 776, 812, 828, 829, 841, 843, 867, 869, 1001, 1003, 1005, 1008, 1010, 1023, 1024, 1028, 1055, 1056, 1059], "\u03c0": [21, 399, 405, 408, 420, 423, 430, 433, 435, 438], "namespac": [21, 119, 131, 136, 141], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 35], "arraywithdatatyp": [23, 26, 27, 37], "arraywithdevic": [23, 26, 27, 39, 138], "arraywithgener": [23, 26, 27, 43, 138], "arraywithgradi": [23, 26, 27, 45, 138], "arraywithimag": [23, 26, 27, 47, 138], "arraywithlay": [23, 26, 27, 49], "arraywithlinearalgebra": [23, 26, 27, 51], "arraywithloss": [23, 26, 27, 53], "arraywithmanipul": [23, 26, 27, 55], "arraywithnorm": [23, 26, 27, 57], "arraywithrandom": [23, 26, 27, 59, 138], "arraywithsearch": [23, 26, 27, 61], "arraywithset": [23, 26, 27, 63], "arraywithsort": [23, 26, 27, 65], "arraywithstatist": [23, 26, 27, 67], "arraywithutil": [23, 26, 27, 69], "properti": [23, 26, 27, 76, 77, 122, 124, 126, 130, 138, 139, 140, 1133, 1134, 1137, 1138, 1139, 1140, 1142], "__add__": [23, 26, 27, 73, 78, 79, 120, 121, 122, 129, 130, 138], "variant": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 122, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 830, 831, 832, 834, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098], "wrap": [23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 117, 118, 120, 121, 124, 126, 127, 129, 130, 131, 132, 133, 136, 138, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 688, 694, 712, 713, 714, 716, 759, 760, 761, 762, 771, 773, 774, 775, 777, 789, 790, 791, 793, 810, 819, 820, 821, 823, 830, 831, 832, 834, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098], "minim": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 133, 136, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 228, 230, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 295, 296, 297, 299, 373, 374, 375, 377, 390, 391, 392, 393, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 684, 685, 686, 688, 712, 713, 714, 716, 759, 760, 761, 762, 773, 774, 775, 777, 789, 790, 791, 793, 819, 820, 821, 823, 830, 831, 832, 834, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 918, 919, 920, 922, 943, 944, 945, 947, 952, 953, 954, 956, 958, 959, 960, 1001, 1002, 1003, 1005, 1008, 1010, 1029, 1030, 1031, 1032, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098], "self": [23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 129, 130, 136, 138, 139, 140, 141, 165, 166, 167, 170, 171, 172, 175, 176, 177, 180, 181, 182, 185, 186, 187, 190, 191, 192, 195, 197, 198, 207, 208, 212, 213, 214, 220, 221, 222, 226, 227, 228, 230, 237, 238, 239, 242, 243, 244, 250, 251, 252, 255, 257, 258, 260, 262, 263, 268, 270, 271, 280, 281, 282, 285, 286, 287, 290, 291, 292, 295, 296, 297, 307, 308, 309, 313, 314, 315, 324, 325, 326, 330, 331, 332, 335, 336, 337, 340, 341, 342, 345, 346, 347, 351, 352, 353, 366, 373, 374, 375, 390, 392, 393, 400, 401, 402, 405, 406, 407, 410, 411, 412, 415, 416, 417, 420, 421, 422, 425, 426, 427, 430, 431, 432, 435, 436, 437, 440, 441, 442, 445, 446, 447, 450, 451, 452, 455, 456, 457, 460, 461, 462, 465, 466, 467, 470, 471, 472, 475, 476, 477, 480, 481, 482, 485, 486, 487, 490, 491, 492, 495, 496, 497, 500, 501, 502, 505, 506, 507, 510, 511, 512, 515, 516, 517, 520, 521, 522, 525, 526, 527, 530, 531, 532, 535, 536, 537, 540, 541, 542, 545, 546, 547, 550, 551, 552, 555, 556, 557, 560, 561, 562, 565, 566, 567, 570, 571, 572, 575, 576, 577, 580, 581, 582, 585, 586, 587, 590, 591, 592, 595, 596, 597, 600, 601, 602, 607, 608, 609, 612, 613, 614, 617, 618, 619, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 642, 643, 644, 647, 648, 649, 652, 653, 654, 657, 658, 659, 662, 663, 664, 667, 669, 670, 672, 674, 675, 678, 680, 681, 684, 685, 686, 696, 697, 712, 713, 714, 759, 760, 761, 762, 773, 774, 775, 778, 779, 785, 786, 789, 790, 791, 794, 795, 798, 799, 802, 803, 819, 820, 821, 830, 831, 832, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 855, 857, 858, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 918, 919, 920, 923, 924, 925, 927, 928, 929, 931, 932, 933, 935, 936, 937, 939, 940, 941, 943, 944, 945, 948, 949, 950, 952, 953, 954, 958, 959, 960, 962, 963, 964, 966, 967, 968, 970, 971, 972, 974, 975, 976, 1001, 1002, 1003, 1012, 1013, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1042, 1045, 1046, 1047, 1050, 1051, 1052, 1056, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1137, 1141], "input": [23, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 316, 324, 327, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 356, 360, 365, 366, 372, 373, 376, 383, 389, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 724, 725, 727, 728, 729, 731, 732, 733, 734, 738, 741, 742, 743, 746, 750, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 769, 770, 771, 773, 774, 775, 776, 777, 782, 783, 789, 790, 791, 792, 793, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 985, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136], "numer": [23, 26, 27, 41, 42, 73, 78, 79, 86, 87, 119, 140, 203, 237, 240, 273, 280, 283, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 475, 476, 477, 478, 479, 490, 493, 510, 513, 515, 516, 517, 518, 519, 520, 523, 535, 538, 540, 543, 545, 548, 550, 553, 590, 593, 595, 598, 607, 610, 612, 613, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 630, 632, 635, 637, 638, 639, 641, 642, 643, 644, 645, 646, 662, 665, 667, 668, 670, 671, 678, 682, 683, 719, 720, 744, 745, 752, 753, 829, 835, 837, 853, 856, 867, 869, 880, 882, 886, 888, 889, 891, 892, 894, 1006, 1017, 1018, 1019, 1020, 1055, 1060, 1063, 1072, 1075, 1080, 1083, 1112], "broadcast": [23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 130, 131, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 285, 288, 290, 293, 366, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 705, 706, 707, 709, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1022, 1023, 1039, 1043, 1044, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "element": [23, 26, 27, 35, 36, 41, 42, 43, 44, 55, 56, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 108, 109, 121, 124, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 225, 226, 227, 228, 229, 230, 255, 257, 259, 260, 262, 264, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 692, 695, 696, 698, 701, 702, 709, 725, 759, 760, 761, 762, 763, 764, 771, 811, 812, 824, 829, 835, 837, 844, 846, 853, 856, 873, 875, 880, 882, 917, 918, 919, 920, 921, 922, 935, 938, 943, 946, 952, 953, 954, 955, 956, 957, 958, 961, 982, 985, 1006, 1007, 1018, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1092, 1094, 1097, 1121, 1129], "wise": [23, 26, 27, 41, 42, 73, 74, 75, 76, 77, 78, 79, 86, 87, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 199, 399, 400, 403, 405, 408, 415, 416, 417, 418, 419, 420, 423, 430, 433, 435, 438, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 683, 709, 917, 918, 921, 1137, 1140], "sum": [23, 26, 27, 41, 42, 67, 68, 73, 76, 77, 78, 79, 86, 87, 112, 113, 126, 130, 131, 133, 136, 366, 389, 399, 415, 416, 417, 418, 419, 580, 583, 667, 668, 670, 683, 702, 706, 741, 742, 812, 828, 829, 880, 882, 889, 891, 895, 897, 1055, 1056, 1059, 1076, 1079], "promot": [23, 26, 27, 37, 38, 41, 42, 51, 52, 73, 78, 79, 82, 83, 86, 87, 96, 97, 121, 126, 131, 195, 196, 197, 198, 273, 280, 283, 295, 296, 297, 298, 299, 350, 351, 354, 360, 399, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 505, 506, 507, 508, 509, 510, 512, 513, 514, 520, 521, 522, 524, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 600, 603, 607, 608, 609, 610, 611, 627, 628, 629, 630, 631, 632, 633, 635, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 829, 830, 831, 832, 833, 834, 835, 837, 850, 852, 853, 856, 861, 863, 867, 869, 870, 872, 877, 879, 892, 894, 895, 897, 917, 962, 965, 1055, 1064, 1067], "y": [23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 73, 74, 75, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 114, 115, 119, 122, 125, 127, 130, 136, 138, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 227, 228, 229, 230, 237, 240, 247, 248, 250, 253, 268, 272, 273, 280, 283, 307, 310, 313, 316, 324, 327, 366, 373, 376, 379, 383, 388, 399, 400, 401, 402, 403, 404, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 428, 429, 435, 436, 437, 438, 439, 445, 448, 450, 453, 460, 461, 462, 463, 464, 465, 468, 470, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 530, 533, 555, 558, 605, 606, 612, 615, 617, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 662, 665, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 687, 688, 691, 692, 700, 701, 708, 709, 711, 712, 713, 714, 715, 716, 750, 757, 759, 760, 761, 762, 763, 764, 771, 782, 783, 812, 818, 819, 820, 821, 822, 823, 825, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 850, 852, 867, 869, 886, 888, 889, 891, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 931, 934, 935, 938, 943, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 966, 969, 982, 985, 998, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1032, 1033, 1044, 1045, 1048, 1055, 1056, 1059, 1060, 1063, 1076, 1079, 1080, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098], "z": [23, 26, 27, 41, 42, 43, 44, 53, 54, 73, 78, 79, 86, 87, 88, 89, 98, 99, 122, 127, 130, 136, 138, 366, 379, 399, 415, 416, 417, 418, 419, 435, 436, 437, 438, 439, 445, 448, 460, 461, 462, 463, 464, 470, 473, 530, 533, 540, 543, 555, 558, 605, 606, 683, 691, 692, 711, 712, 713, 714, 716, 750, 829, 835, 837, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 921, 982, 985, 998, 1018, 1019, 1055, 1056, 1059, 1060, 1063, 1072, 1075], "mix": [23, 26, 27, 41, 42, 43, 44, 73, 78, 79, 86, 87, 98, 99, 118, 122, 124, 136, 273, 351, 354, 366, 383, 399, 415, 418, 445, 448, 460, 463, 470, 473, 490, 491, 493, 495, 496, 497, 498, 520, 521, 522, 523, 524, 530, 533, 555, 558, 617, 620, 632, 633, 634, 635, 636, 683, 684, 685, 700, 708, 711, 712, 715, 757, 759, 763, 764, 812, 815, 818, 819, 822, 828, 829, 830, 833, 886, 888, 901, 902, 905, 906, 907, 911, 912, 915, 916, 917, 918, 921, 1000, 1001, 1004, 1018, 1022, 1055, 1056, 1059, 1064, 1067], "__le__": [23, 26, 27], "equal": [23, 26, 27, 35, 36, 41, 42, 43, 44, 76, 77, 86, 87, 88, 89, 122, 130, 131, 203, 217, 218, 225, 226, 227, 229, 273, 280, 283, 399, 455, 458, 465, 468, 499, 535, 538, 540, 543, 627, 630, 637, 640, 683, 684, 685, 686, 687, 688, 691, 692, 829, 841, 843, 861, 863, 870, 872, 917, 918, 921, 927, 930, 957, 974, 977, 1006, 1012, 1014, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1064, 1067, 1076, 1079, 1080, 1083, 1084, 1087], "result": [23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 121, 122, 124, 125, 129, 130, 131, 133, 139, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 280, 283, 290, 293, 351, 354, 366, 390, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 696, 698, 701, 702, 705, 706, 707, 709, 711, 712, 713, 714, 715, 716, 725, 738, 741, 742, 771, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 982, 985, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "bool": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 122, 130, 131, 133, 134, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 207, 209, 225, 226, 228, 230, 273, 280, 283, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 310, 329, 330, 331, 333, 335, 336, 338, 340, 341, 343, 345, 346, 348, 356, 365, 366, 372, 373, 376, 380, 381, 384, 385, 389, 396, 398, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 467, 469, 470, 472, 473, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 607, 609, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 701, 704, 708, 710, 712, 714, 716, 718, 721, 722, 724, 729, 731, 732, 733, 734, 750, 751, 759, 760, 762, 769, 770, 771, 789, 790, 791, 792, 793, 807, 811, 829, 830, 831, 832, 833, 834, 857, 859, 880, 882, 895, 897, 902, 904, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 952, 954, 956, 957, 978, 979, 980, 981, 982, 983, 984, 988, 992, 993, 994, 1001, 1003, 1006, 1007, 1018, 1019, 1020, 1029, 1030, 1032, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1137, 1138, 1139, 1140, 1141, 1142], "true": [23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 333, 334, 335, 337, 339, 340, 342, 343, 344, 345, 347, 348, 349, 351, 353, 355, 365, 366, 372, 381, 385, 386, 399, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 448, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 473, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 620, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 696, 697, 701, 708, 710, 712, 714, 716, 718, 721, 724, 725, 732, 734, 743, 746, 748, 750, 751, 757, 759, 760, 762, 764, 766, 767, 768, 770, 771, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 811, 812, 824, 829, 830, 831, 832, 833, 834, 853, 855, 857, 859, 880, 881, 882, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 957, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 978, 979, 980, 981, 982, 983, 992, 993, 995, 1001, 1003, 1005, 1006, 1007, 1012, 1013, 1015, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1076, 1078, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "__radd__": [23, 26, 27, 73, 78, 79, 121, 122], "adam_upd": [23, 26, 27, 90, 91, 140, 771], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 57, 58, 73, 76, 77, 78, 79, 90, 91, 102, 103, 120, 121, 124, 127, 130, 131, 133, 134, 139, 140, 141, 153, 683, 693, 727, 728, 729, 730, 731, 732, 734, 754, 771, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 810, 812, 827, 829, 877, 879, 978, 979, 980, 981, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1110, 1111, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "arang": [23, 26, 27, 73, 78, 79, 131, 203, 231, 232, 234, 235, 1055, 1056, 1059, 1099], "arg_info": [23, 26, 27, 73, 78, 79, 683], "arg_nam": [23, 26, 27, 73, 78, 79, 683], "argmax": [23, 26, 27, 73, 78, 79, 1018, 1099], "argmin": [23, 26, 27, 73, 78, 79, 1018, 1099], "array_equ": [23, 26, 27, 73, 78, 79, 683], "arrays_equ": [23, 26, 27, 73, 76, 77, 78, 79, 683], "as_ivy_dev": [23, 26, 27, 73, 78, 79, 138, 366], "as_ivy_dtyp": [23, 26, 27, 73, 78, 79, 125, 273], "as_native_dev": [23, 26, 27, 73, 78, 79, 366], "as_native_dtyp": [23, 26, 27, 73, 78, 79, 273], "assert_supports_inplac": [23, 26, 27, 73, 78, 79, 683], "cache_fn": [23, 26, 27, 73, 78, 79, 126, 683], "clear_mem_on_dev": [23, 26, 27, 73, 78, 79, 366], "clip_matrix_norm": [23, 26, 27, 73, 78, 79, 683], "clip_vector_norm": [23, 26, 27, 88, 89, 683], "closest_valid_dtyp": [23, 26, 27, 73, 78, 79, 273], "container_typ": [23, 26, 27, 73, 78, 79, 683], "conv1d": [23, 26, 27, 73, 78, 79, 812, 1121], "conv1d_transpos": [23, 26, 27, 73, 78, 79, 812], "conv2d": [23, 26, 27, 73, 78, 79, 812, 1099, 1121], "conv2d_transpos": [23, 26, 27, 73, 78, 79, 812], "conv3d": [23, 26, 27, 73, 78, 79, 812, 1121], "conv3d_transpos": [23, 26, 27, 73, 78, 79, 812], "copy_arrai": [23, 26, 27, 73, 78, 79, 683], "cumprod": [23, 26, 27, 73, 78, 79, 141, 683], "cumsum": [23, 26, 27, 73, 78, 79, 683, 1099], "current_backend_str": [23, 26, 27, 73, 78, 79, 683], "default_devic": [23, 26, 27, 73, 78, 79, 132, 136, 366, 383, 386, 387, 397], "default_dtyp": [23, 26, 27, 73, 78, 79, 126, 131, 273], "default_float_dtyp": [23, 26, 27, 73, 78, 79, 131, 273], "default_int_dtyp": [23, 26, 27, 73, 78, 79, 131, 273], "default_uint_dtyp": [23, 26, 27, 73, 78, 79, 273, 359, 364], "dev_util": [23, 26, 27, 73, 78, 79, 132, 366], "dropout": [23, 26, 27, 73, 78, 79, 139, 812, 1121, 1132], "dtype": [23, 26, 27, 35, 36, 37, 38, 67, 68, 76, 77, 80, 81, 82, 83, 88, 89, 112, 113, 119, 122, 124, 125, 126, 131, 132, 134, 138, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 288, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 352, 354, 356, 357, 358, 359, 364, 365, 366, 385, 399, 465, 468, 683, 691, 692, 738, 759, 760, 762, 763, 812, 824, 917, 931, 934, 1006, 1012, 1014, 1018, 1019, 1020, 1044, 1050, 1053, 1055, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1082, 1083, 1088, 1089, 1092, 1099, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1143, 1144], "dtype_bit": [23, 26, 27, 73, 78, 79, 273], "einops_rearrang": [23, 26, 27, 76, 77, 683], "einops_reduc": [23, 26, 27, 76, 77, 683], "einops_repeat": [23, 26, 27, 76, 77, 683], "empti": [23, 26, 27, 73, 76, 77, 78, 79, 129, 131, 132, 203, 204, 205, 771, 811, 1055, 1076, 1079, 1080, 1083, 1088, 1089, 1092, 1094, 1097], "execute_with_gradi": [23, 26, 27, 73, 78, 79, 130, 139, 140, 141, 153, 771, 1099], "ey": [23, 26, 27, 73, 78, 79, 141, 203, 812, 815, 819, 822], "floormod": [23, 26, 27, 73, 78, 79, 683, 1099], "fourier_encod": [23, 26, 27, 73, 78, 79, 683], "function_supported_dtyp": [23, 26, 27, 73, 78, 79, 273], "function_unsupported_dtyp": [23, 26, 27, 73, 78, 79, 273], "gather": [23, 26, 27, 43, 44, 76, 77, 88, 89, 683, 712, 713, 714, 715, 716], "get_all_arrays_in_memori": [23, 26, 27, 73, 78, 79, 683], "get_all_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 132, 366], "get_array_mod": [23, 26, 27, 73, 78, 79, 683, 743, 766], "get_min_bas": [23, 26, 27, 73, 78, 79, 683], "get_min_denomin": [23, 26, 27, 73, 78, 79, 683], "get_nestable_mod": [23, 26, 27, 73, 78, 79, 683, 746, 767], "get_num_dim": [23, 26, 27, 73, 78, 79, 683, 1099], "get_referrers_recurs": [23, 26, 27, 73, 78, 79, 683], "gpu_is_avail": [23, 26, 27, 73, 78, 79, 366], "gradient_descent_upd": [23, 26, 27, 90, 91, 771, 978, 979, 980, 981, 1099], "handle_nest": [23, 26, 27, 73, 78, 79, 126, 130, 154], "handle_out_argu": [23, 26, 27, 73, 78, 79, 120, 128, 131, 132, 133, 154], "has_nan": [23, 26, 27, 76, 77, 683], "indices_wher": [23, 26, 27, 73, 78, 79, 134, 683, 1099], "infer_devic": [23, 26, 27, 73, 78, 79, 120, 131, 132, 154], "infer_dtyp": [23, 26, 27, 73, 78, 79, 120, 131, 132, 154], "inplace_arrays_support": [23, 26, 27, 73, 78, 79, 683], "inplace_decr": [23, 26, 27, 73, 78, 79, 683], "inplace_incr": [23, 26, 27, 73, 78, 79, 683], "inplace_upd": [23, 26, 27, 76, 77, 133, 683, 1110, 1111], "inplace_variables_support": [23, 26, 27, 73, 78, 79, 683], "inputs_to_native_arrai": [23, 26, 27, 73, 78, 79, 129, 154], "invalid_dtyp": [23, 26, 27, 73, 78, 79, 131, 273], "is_arrai": [23, 26, 27, 125, 683], "is_ivy_arrai": [23, 26, 27, 133, 138, 683], "is_ivy_contain": [23, 26, 27, 73, 78, 79, 683], "is_native_arrai": [23, 26, 27, 138, 683], "is_vari": [23, 26, 27, 45, 46, 90, 91, 133, 771, 793], "boolean": [23, 26, 27, 41, 42, 43, 44, 45, 46, 76, 77, 86, 87, 88, 89, 90, 91, 124, 130, 203, 207, 209, 225, 273, 280, 283, 329, 365, 366, 380, 396, 399, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 683, 684, 685, 686, 687, 688, 691, 692, 724, 725, 726, 730, 731, 732, 733, 734, 743, 746, 748, 754, 770, 771, 789, 790, 791, 792, 793, 811, 978, 979, 980, 982, 992, 1055, 1068, 1071], "trainabl": [23, 26, 27, 45, 46, 90, 91, 121, 137, 139, 140, 771, 789, 790, 791, 792, 793, 1110, 1111, 1133, 1134, 1143], "lamb_upd": [23, 26, 27, 90, 91, 771], "lars_upd": [23, 26, 27, 90, 91, 771], "linear": [23, 26, 27, 73, 74, 75, 78, 79, 121, 136, 139, 140, 141, 164, 165, 168, 170, 173, 175, 177, 178, 179, 683, 710, 812, 824, 877, 879, 1099, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "linspac": [23, 26, 27, 73, 78, 79, 136, 203, 204, 205, 1099], "logspac": [23, 26, 27, 73, 78, 79, 136, 203], "lstm_updat": [23, 26, 27, 73, 78, 79, 136, 812], "mt": [23, 26, 27, 138], "match_kwarg": [23, 26, 27, 73, 78, 79, 683], "matrix_pow": [23, 26, 27, 73, 78, 79, 829], "maximum": [23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 100, 101, 122, 136, 139, 141, 366, 389, 399, 683, 695, 696, 698, 710, 771, 794, 796, 917, 918, 919, 920, 921, 922, 982, 994, 1018, 1019, 1055, 1060, 1063, 1068, 1071, 1099], "minimum": [23, 26, 27, 55, 56, 76, 77, 100, 101, 136, 141, 399, 400, 403, 683, 719, 720, 744, 745, 752, 753, 917, 918, 919, 920, 921, 922, 1018, 1020, 1055, 1060, 1063, 1068, 1071, 1099], "multi_head_attent": [23, 26, 27, 73, 78, 79, 130, 133, 812], "multinomi": [23, 26, 27, 73, 78, 79, 1006], "multiprocess": [23, 26, 27, 73, 76, 77, 78, 79, 139, 153, 683], "ndim": [23, 26, 27, 124, 138, 829, 873, 875, 880, 882], "dimens": [23, 26, 27, 35, 36, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 114, 115, 122, 124, 125, 136, 139, 164, 185, 188, 203, 255, 257, 259, 260, 262, 264, 683, 705, 706, 707, 710, 722, 738, 769, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 829, 830, 831, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 892, 894, 895, 897, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 923, 926, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 978, 979, 980, 981, 1006, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131, 1132], "ax": [23, 26, 27, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 100, 101, 114, 115, 119, 122, 124, 131, 138, 185, 187, 189, 366, 389, 683, 701, 829, 857, 859, 877, 879, 886, 887, 888, 895, 897, 917, 927, 930, 935, 938, 939, 940, 941, 942, 952, 953, 954, 955, 956, 958, 961, 966, 969, 974, 977, 1018, 1019, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "nonzero": [23, 26, 27, 73, 78, 79, 399, 415, 418, 607, 610, 1018], "num_arrays_in_memori": [23, 26, 27, 73, 78, 79, 683], "num_cpu_cor": [23, 26, 27, 73, 78, 79, 132, 366], "num_gpu": [23, 26, 27, 73, 78, 79, 124, 132, 366], "num_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 366], "one_hot": [23, 26, 27, 73, 78, 79, 141, 683, 1099], "ones": [23, 26, 27, 35, 36, 73, 76, 77, 78, 79, 124, 136, 138, 139, 203, 217, 218, 226, 227, 229, 250, 251, 253, 268, 272, 399, 475, 478, 683, 738, 1099], "optimizer_upd": [23, 26, 27, 90, 91, 771], "outputs_to_ivy_arrai": [23, 26, 27, 73, 78, 79, 120, 129, 131, 132, 154], "percent_used_mem_on_dev": [23, 26, 27, 73, 78, 79, 366], "print_all_arrays_in_memori": [23, 26, 27, 73, 78, 79, 683], "print_all_ivy_arrays_on_dev": [23, 26, 27, 73, 78, 79, 366], "promote_typ": [23, 26, 27, 73, 78, 79, 273], "queue_timeout": [23, 26, 27, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 683], "randint": [23, 26, 27, 49, 50, 73, 78, 79, 94, 95, 104, 105, 819, 820, 821, 823, 1006, 1010, 1099], "random_norm": [23, 26, 27, 49, 50, 73, 78, 79, 94, 95, 124, 812, 815, 818, 819, 820, 821, 822, 823, 829, 880, 882, 1006, 1023, 1024, 1028], "random_uniform": [23, 26, 27, 104, 105, 124, 132, 140, 1006, 1099], "scaled_dot_product_attent": [23, 26, 27, 73, 78, 79, 812], "scatter_flat": [23, 26, 27, 73, 78, 79, 683], "scatter_nd": [23, 26, 27, 73, 78, 79, 138, 683, 1099], "seed": [23, 26, 27, 73, 76, 77, 78, 79, 1006, 1099], "set_array_mod": [23, 26, 27, 73, 78, 79, 683, 718, 766], "set_default_devic": [23, 26, 27, 73, 78, 79, 132, 366, 397], "set_default_dtyp": [23, 26, 27, 73, 78, 79, 126, 131, 273], "set_default_float_dtyp": [23, 26, 27, 73, 78, 79, 131, 273], "set_default_int_dtyp": [23, 26, 27, 73, 78, 79, 131, 273], "set_default_uint_dtyp": [23, 26, 27, 73, 78, 79, 273, 306, 364], "set_min_bas": [23, 26, 27, 73, 78, 79, 683], "set_min_denomin": [23, 26, 27, 73, 78, 79, 683], "set_nestable_mod": [23, 26, 27, 73, 78, 79, 683, 721, 767], "set_queue_timeout": [23, 26, 27, 73, 78, 79, 683], "set_shape_array_mod": [23, 26, 27, 73, 78, 79, 683, 751, 768], "set_split_factor": [23, 26, 27, 73, 78, 79, 366], "set_tmp_dir": [23, 26, 27, 73, 78, 79, 683], "set_with_grad": [23, 26, 27, 73, 78, 79, 771, 811], "shape_array_mod": [23, 26, 27, 73, 78, 79, 683, 748, 768], "shuffl": [23, 26, 27, 76, 77, 1006, 1099], "size": [23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 100, 101, 124, 138, 139, 203, 231, 232, 234, 235, 366, 387, 388, 389, 683, 741, 812, 828, 829, 841, 843, 857, 859, 867, 869, 873, 875, 880, 882, 892, 894, 917, 931, 934, 952, 953, 954, 955, 956, 957, 958, 961, 1006, 1007, 1011, 1012, 1014, 1018, 1019, 1021, 1088, 1089, 1092, 1094, 1097, 1121, 1122, 1123], "product": [23, 26, 27, 41, 42, 130, 399, 607, 608, 610, 683, 701, 812, 827, 828, 829, 835, 837, 853, 856, 867, 869, 886, 888, 892, 894, 1055, 1056, 1059, 1072, 1075, 1121, 1132], "unknown": [23, 26, 27], "model": [23, 26, 27, 139, 140, 1099], "slogdet": [23, 26, 27, 73, 78, 79, 829], "split_factor": [23, 26, 27, 73, 78, 79, 366, 387], "split_func_cal": [23, 26, 27, 73, 78, 79, 366], "stable_divid": [23, 26, 27, 73, 78, 79, 126, 683], "stable_pow": [23, 26, 27, 73, 78, 79, 683], "stop_gradi": [23, 26, 27, 73, 76, 77, 78, 79, 90, 91, 140, 366, 389, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 978, 979, 980, 981, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "supports_inplac": [23, 26, 27, 73, 78, 79, 683], "tmp_dir": [23, 26, 27, 73, 78, 79, 683], "to_ivy_shap": [23, 26, 27, 73, 78, 79, 683], "to_list": [23, 26, 27, 76, 77, 683, 1099], "to_native_arrays_and_back": [23, 26, 27, 73, 78, 79, 120, 128, 154], "to_native_shap": [23, 26, 27, 73, 78, 79, 683], "to_scalar": [23, 26, 27, 73, 78, 79, 683], "total_mem_on_dev": [23, 26, 27, 73, 78, 79, 132, 366], "tpu_is_avail": [23, 26, 27, 73, 78, 79, 366], "try_else_non": [23, 26, 27, 73, 78, 79, 683], "type_promote_arrai": [23, 26, 27, 73, 78, 79, 273], "unset_array_mod": [23, 26, 27, 73, 78, 79, 683], "unset_default_devic": [23, 26, 27, 73, 78, 79, 366], "unset_default_dtyp": [23, 26, 27, 73, 78, 79, 273, 356], "unset_default_float_dtyp": [23, 26, 27, 73, 78, 79, 273], "unset_default_int_dtyp": [23, 26, 27, 73, 78, 79, 273], "unset_default_uint_dtyp": [23, 26, 27, 73, 78, 79, 273], "unset_nestable_mod": [23, 26, 27, 73, 78, 79, 683], "unset_shape_array_mod": [23, 26, 27, 73, 78, 79, 683, 766], "unset_with_grad": [23, 26, 27, 73, 78, 79, 771], "unstack": [23, 26, 27, 76, 77, 130, 136, 139, 683, 1099], "used_mem_on_dev": [23, 26, 27, 73, 78, 79, 366], "valid_dtyp": [23, 26, 27, 73, 78, 79, 273], "value_is_nan": [23, 26, 27, 73, 78, 79, 683], "variable_data": [23, 26, 27, 73, 78, 79, 771], "with_grad": [23, 26, 27, 73, 78, 79, 771, 806], "abc": [24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 138, 366, 368, 683, 708, 982, 999, 1133, 1134, 1137, 1141], "gelu": [24, 25, 74, 75, 164, 169, 1107], "approxim": [24, 25, 74, 75, 121, 164, 165, 166, 167, 168, 169, 399, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 505, 508, 510, 513, 560, 563, 565, 568, 570, 573, 575, 578, 627, 630, 647, 650, 652, 655, 672, 676, 677, 829, 861, 863, 870, 872], "185": [24, 25, 74, 75, 165, 166, 167, 169], "046": [24, 25, 74, 75, 165, 166, 167, 169], "leaky_relu": [24, 25, 74, 75, 124, 164, 174, 1099], "alpha": [24, 25, 74, 75, 124, 125, 164, 170, 171, 172, 173, 174], "39": [24, 25, 74, 75, 164, 170, 171, 172, 173, 174, 399, 425, 428, 505, 508, 771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "85": [24, 25, 74, 75, 164, 170, 171, 172, 173, 174, 399, 470, 473], "17": [24, 25, 74, 75, 122, 130, 164, 170, 171, 172, 173, 174, 399, 490, 493, 829, 841, 843, 1006, 1011], "relu": [24, 25, 71, 72, 74, 75, 139, 140, 164, 170, 172, 173, 174, 179, 1099], "sigmoid": [24, 25, 74, 75, 136, 139, 140, 164, 184, 1099], "269": [24, 25, 74, 75, 164, 180, 181, 182, 183, 184], "731": [24, 25, 74, 75, 164, 180, 181, 182, 183, 184], "881": [24, 25, 41, 42, 74, 75, 86, 87, 164, 180, 181, 182, 183, 184, 399, 425, 426, 427, 428], "softmax": [24, 25, 71, 72, 74, 75, 164, 189, 812, 827, 828, 1099], "axi": [24, 25, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 141, 152, 164, 185, 186, 187, 188, 189, 203, 231, 232, 233, 234, 235, 236, 366, 389, 683, 701, 702, 711, 769, 829, 835, 836, 837, 841, 843, 892, 893, 894, 895, 896, 897, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 923, 924, 925, 926, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 944, 945, 946, 947, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 973, 974, 977, 1006, 1017, 1018, 1019, 1020, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "422": [24, 25, 74, 75, 164, 185, 186, 187, 188, 189], "155": [24, 25, 74, 75, 164, 185, 186, 187, 188, 189], "softplu": [24, 25, 74, 75, 164, 194, 1099], "3461": [24, 25, 74, 75, 164, 190, 191, 192, 193, 194], "6491": [24, 25, 74, 75, 164, 190, 191, 192, 193, 194], "535": [24, 25, 74, 75, 164, 190, 191, 192, 193, 194], "42": [24, 25, 74, 75, 102, 103, 104, 105, 141, 164, 190, 191, 192, 193, 194, 771, 773, 776, 829, 867, 869, 1001, 1003, 1005, 1006, 1008, 1010, 1016, 1055, 1056, 1059], "tanh": [24, 25, 41, 42, 74, 75, 86, 87, 136, 164, 196, 399, 1099], "55": [24, 25, 74, 75, 164, 195, 199, 812, 818, 829, 867, 869, 1055, 1056, 1059], "501": [24, 25, 74, 75, 164, 195, 199], "collect": [29, 76, 77, 124, 152, 164, 200, 366, 683, 771, 812, 901, 982, 995, 1000, 1006, 1107, 1121, 1135, 1137], "args_to_contain": 29, "include_deriv": [29, 30, 31, 32, 33, 34, 982, 984, 994], "args_to_ivi": 29, "keyword": [29, 31, 32, 73, 76, 77, 78, 79, 119, 120, 124, 125, 131, 132, 133, 139, 203, 237, 240, 683, 690, 735, 982, 988, 1055, 1080, 1083, 1133, 1134], "nest": [29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 119, 124, 126, 129, 130, 138, 139, 140, 153, 683, 757, 771, 811, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "unchang": [29, 31, 32, 33, 34], "posit": [29, 31, 32, 41, 42, 51, 52, 55, 56, 86, 87, 96, 97, 100, 101, 120, 124, 125, 139, 152, 202, 203, 217, 218, 273, 313, 316, 399, 400, 403, 535, 538, 540, 541, 542, 543, 544, 607, 610, 626, 632, 635, 683, 710, 829, 830, 831, 832, 833, 834, 917, 931, 934, 952, 953, 954, 955, 956, 1006, 1016, 1018, 1021, 1088, 1089, 1092, 1094, 1097, 1110, 1111], "deriv": [29, 31, 32, 33, 34, 35, 36, 45, 46, 90, 91, 131, 132, 138, 140, 203, 212, 213, 215, 226, 227, 229, 250, 251, 253, 268, 270, 272, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 982, 984, 994, 1133, 1137, 1141, 1143], "tupl": [29, 31, 32, 33, 34, 35, 36, 49, 50, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 124, 125, 130, 131, 132, 134, 138, 139, 140, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 207, 208, 209, 226, 228, 230, 242, 245, 273, 290, 293, 295, 297, 299, 318, 319, 321, 322, 360, 366, 372, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 710, 712, 714, 716, 759, 760, 762, 789, 791, 793, 812, 815, 818, 819, 820, 821, 822, 823, 826, 829, 830, 832, 834, 861, 863, 870, 872, 880, 881, 882, 886, 888, 895, 897, 902, 904, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 923, 926, 927, 930, 935, 938, 939, 942, 952, 953, 954, 955, 956, 958, 961, 962, 965, 974, 977, 978, 979, 980, 981, 982, 984, 985, 987, 989, 990, 991, 993, 994, 996, 997, 998, 999, 1001, 1003, 1005, 1018, 1021, 1023, 1029, 1030, 1032, 1033, 1034, 1038, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "kei": [29, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 124, 130, 134, 139, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 689, 699, 712, 714, 716, 759, 760, 762, 789, 791, 793, 812, 827, 828, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 978, 979, 980, 982, 985, 991, 995, 1001, 1003, 1005, 1008, 1010, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098, 1110, 1111, 1121, 1132, 1137, 1141], "word": [29, 31, 32, 130, 203, 204, 205, 1006, 1012, 1014, 1110, 1111], "args_to_n": [29, 133, 138], "to_ivi": [29, 76, 77, 138, 982, 995], "leaf": [29, 33, 34, 76, 77, 126, 130, 139, 982, 983, 992, 993], "union": [29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 126, 129, 130, 131, 132, 133, 134, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 278, 279, 280, 283, 285, 288, 290, 293, 295, 297, 299, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 356, 357, 358, 359, 360, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 691, 692, 695, 696, 698, 701, 702, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 727, 728, 729, 734, 738, 741, 742, 750, 756, 757, 758, 759, 760, 762, 763, 764, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 829, 830, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 881, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 993, 994, 998, 999, 1000, 1001, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1032, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1137, 1138, 1139, 1141], "nativearrai": [29, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 74, 75, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 119, 120, 122, 126, 129, 130, 133, 134, 136, 138, 141, 154, 162, 164, 165, 168, 169, 170, 173, 174, 175, 178, 179, 180, 183, 184, 185, 188, 189, 190, 193, 194, 195, 199, 203, 204, 205, 207, 209, 212, 215, 226, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 250, 253, 255, 259, 260, 264, 268, 272, 273, 280, 283, 285, 288, 290, 293, 295, 298, 307, 310, 313, 316, 324, 327, 330, 333, 335, 338, 340, 343, 345, 348, 351, 354, 360, 366, 372, 373, 376, 383, 389, 390, 394, 399, 400, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 428, 430, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 483, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 645, 646, 647, 650, 652, 655, 657, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 679, 682, 683, 684, 685, 687, 691, 692, 695, 696, 698, 700, 701, 702, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 727, 728, 729, 734, 738, 741, 742, 743, 750, 757, 759, 760, 763, 764, 766, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 792, 793, 794, 796, 798, 800, 802, 804, 807, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 829, 830, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 948, 951, 952, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 982, 984, 985, 994, 998, 999, 1000, 1001, 1004, 1006, 1007, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1033, 1034, 1038, 1039, 1043, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098], "travers": [29, 33, 34, 76, 77, 130, 136, 138, 982, 994], "lowest": [29, 33, 34, 76, 77, 104, 105, 126, 153, 982, 994, 1006, 1008, 1009, 1010], "leav": [29, 33, 34, 73, 76, 77, 78, 79, 120, 121, 122, 124, 126, 130, 131, 133, 139, 140, 917, 962, 965, 982, 983, 984, 992, 993, 994], "to_n": [29, 76, 77], "item": [29, 34, 71, 72, 76, 77, 131, 136, 138, 139, 141, 273, 301, 366, 372, 683, 699, 723, 752, 753, 982, 987, 988, 989, 990, 994, 998, 999, 1099, 1133, 1134], "asarrai": [35, 36, 73, 78, 79, 124, 133, 203, 812, 813, 1023, 1029, 1033], "nativedtyp": [35, 36, 80, 81, 119, 120, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 273, 279, 280, 283, 302, 303, 305, 306, 307, 310, 350, 356, 365, 1055, 1080, 1083], "datatyp": [35, 36, 76, 77, 82, 83, 203, 207, 208, 226, 227, 229, 242, 243, 245, 273, 300, 350, 356], "nativedevic": [35, 36, 39, 40, 80, 81, 104, 105, 119, 120, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 366, 370, 371, 372, 373, 374, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 398, 683, 738, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1137, 1138, 1139, 1141], "interpret": [35, 36, 203, 207, 208, 209, 242, 243, 245], "empty_lik": [35, 36, 80, 81, 203], "uniniti": [35, 36, 203, 211, 212, 213, 215], "from_dlpack": [35, 36, 80, 81, 203], "full_lik": [35, 36, 80, 81, 203, 230], "fill_valu": [35, 36, 80, 81, 131, 203, 225, 226, 227, 228, 229, 230, 399, 530, 533, 555, 558], "float": [35, 36, 41, 42, 45, 46, 51, 52, 53, 54, 57, 58, 80, 81, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 120, 121, 124, 126, 130, 131, 133, 138, 140, 164, 170, 173, 195, 196, 197, 198, 202, 203, 204, 205, 207, 209, 211, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 247, 248, 265, 267, 273, 280, 283, 302, 303, 313, 316, 335, 338, 351, 354, 366, 378, 384, 387, 388, 395, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 470, 473, 475, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 498, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 518, 520, 523, 525, 528, 530, 533, 540, 543, 550, 553, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 695, 696, 698, 710, 719, 720, 744, 745, 752, 753, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 815, 819, 822, 828, 829, 830, 831, 832, 833, 834, 838, 840, 844, 846, 847, 849, 850, 852, 861, 863, 870, 872, 873, 875, 877, 879, 880, 882, 895, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 978, 979, 980, 981, 1000, 1001, 1002, 1003, 1004, 1006, 1011, 1012, 1014, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1137, 1138, 1139, 1140, 1141, 1142], "scalar": [35, 36, 74, 75, 80, 81, 131, 136, 141, 153, 170, 172, 174, 203, 226, 227, 228, 229, 230, 683, 738, 764, 770, 829, 895, 897], "fill": [35, 36, 76, 77, 80, 81, 104, 105, 203, 211, 225, 226, 227, 228, 229, 230, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 1006, 1008, 1009, 1010], "int": [35, 36, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 69, 70, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 122, 125, 126, 130, 131, 132, 133, 134, 141, 164, 185, 188, 200, 201, 203, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 255, 257, 259, 260, 262, 264, 273, 290, 293, 305, 312, 313, 316, 324, 327, 340, 343, 366, 381, 382, 383, 389, 390, 394, 399, 445, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 683, 689, 701, 702, 705, 706, 707, 710, 711, 722, 738, 741, 769, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 829, 830, 832, 834, 835, 837, 841, 843, 886, 888, 889, 891, 892, 894, 895, 897, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 923, 926, 927, 930, 931, 934, 935, 938, 939, 942, 943, 946, 952, 953, 954, 955, 956, 957, 958, 961, 962, 965, 966, 969, 970, 973, 974, 977, 978, 979, 980, 981, 982, 985, 994, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1044, 1045, 1048, 1050, 1053, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "000123": [35, 36, 203, 226, 227, 229], "meshgrid": [35, 36, 80, 81, 203], "xy": [35, 36, 80, 81, 203, 237, 238, 239, 240, 241], "ones_lik": [35, 36, 80, 81, 141, 203, 1099], "tril": [35, 36, 80, 81, 203], "k": [35, 36, 80, 81, 118, 125, 136, 203, 217, 218, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 683, 691, 812, 828, 829, 853, 856, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 1006, 1011, 1012, 1014, 1018, 1021], "n": [35, 36, 69, 70, 114, 115, 118, 124, 203, 237, 240, 255, 257, 259, 260, 262, 264, 683, 692, 812, 824, 829, 841, 843, 853, 856, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 880, 882, 883, 885, 889, 891, 892, 894, 895, 897, 898, 900, 917, 927, 930, 931, 934, 939, 942, 962, 965, 974, 977, 1006, 1011, 1012, 1014, 1018, 1021, 1055, 1064, 1067, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "whose": [35, 36, 41, 42, 51, 52, 55, 56, 63, 64, 80, 81, 86, 87, 96, 97, 100, 101, 108, 109, 121, 124, 195, 196, 197, 198, 203, 226, 228, 230, 255, 257, 259, 260, 262, 264, 399, 410, 411, 412, 413, 414, 425, 426, 427, 428, 429, 440, 441, 442, 443, 444, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 627, 628, 630, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 672, 673, 674, 675, 676, 677, 683, 694, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 917, 935, 938, 952, 953, 954, 955, 956, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1055, 1056, 1059], "innermost": [35, 36, 51, 52, 96, 97, 203, 255, 257, 259, 260, 262, 264, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 861, 863, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891], "mxn": [35, 36, 203, 255, 257, 259, 260, 262, 264, 829, 841, 843, 861, 863, 864, 866, 870, 872, 873, 875, 883, 885, 889, 891], "matric": [35, 36, 51, 52, 96, 97, 152, 203, 237, 240, 255, 257, 259, 260, 262, 264, 812, 825, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 860, 861, 863, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891], "diagon": [35, 36, 51, 52, 73, 78, 79, 203, 217, 218, 255, 257, 259, 260, 262, 264, 829, 889, 891], "triangular": [35, 36, 51, 52, 96, 97, 203, 255, 257, 259, 260, 262, 264, 829, 830, 831, 832, 833, 834, 873, 875], "triu": [35, 36, 80, 81, 203], "upper": [35, 36, 51, 52, 76, 77, 96, 97, 124, 203, 217, 218, 260, 262, 264, 829, 830, 831, 832, 833, 834, 873, 875, 1006, 1012, 1014], "zeros_lik": [35, 36, 80, 81, 125, 203, 812, 819, 822, 917, 918, 921, 1099], "creation": [36, 73, 76, 77, 78, 79, 81, 119, 124, 131, 132, 136, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "data_typ": [37, 38, 82, 83, 119, 124, 131, 273, 278, 279, 280, 283, 285, 288, 290, 293, 295, 298, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 316, 318, 319, 321, 322, 324, 327, 329, 330, 333, 335, 338, 340, 343, 345, 348, 350, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "astyp": [37, 38, 49, 50, 82, 83, 94, 95, 125, 131, 133, 273, 819, 820, 821, 823], "broadcast_arrai": [37, 38, 82, 83, 273], "broadcast_to": [37, 38, 82, 83, 131, 273], "can_cast": [37, 38, 82, 83, 126, 131, 273, 299, 313, 316], "cast": [37, 38, 82, 83, 125, 126, 131, 273, 280, 283, 295, 296, 297, 298, 299, 917, 923, 926, 1055, 1072, 1075, 1080, 1083, 1099], "occur": [37, 38, 63, 64, 82, 83, 108, 109, 273, 295, 296, 297, 298, 299, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043], "rule": [37, 38, 51, 52, 82, 83, 96, 97, 122, 124, 126, 129, 130, 131, 134, 273, 280, 283, 295, 296, 297, 298, 299, 351, 354, 399, 440, 443, 465, 468, 490, 493, 607, 610, 632, 635, 829, 830, 831, 832, 833, 834, 835, 837, 867, 869, 877, 879], "float32": [37, 38, 49, 50, 82, 83, 88, 89, 94, 95, 122, 124, 131, 203, 268, 272, 273, 278, 279, 295, 296, 297, 299, 307, 310, 313, 316, 340, 343, 365, 683, 759, 760, 763, 819, 820, 821, 823], "float64": [37, 38, 124, 131, 273, 280, 283, 295, 296, 298, 313, 316, 340, 343, 356, 365], "as_n": [37, 38, 39, 40, 82, 83, 84, 85, 131, 273, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 366, 372, 373, 374, 375, 376, 377, 386], "finfo": [37, 38, 82, 83, 273], "iinfo": [37, 38, 82, 83, 134, 273], "is_bool_dtyp": [37, 38, 82, 83, 273], "is_float_dtyp": [37, 38, 82, 83, 273], "is_int_dtyp": [37, 38, 82, 83, 273, 683, 764], "is_uint_dtyp": [37, 38, 82, 83, 273], "result_typ": [37, 38, 82, 83, 131, 273], "arrays_and_dtyp": [37, 38, 82, 83, 273, 351, 352, 353, 354, 355], "to_devic": [39, 40, 76, 77, 84, 85, 366, 372, 391], "stream": [39, 40, 84, 85, 366, 390, 391, 392, 393, 394], "ab": [41, 42, 86, 87, 124, 128, 399, 404, 627, 630, 829, 895, 897, 1099], "aco": [41, 42, 86, 87, 399, 409, 1099], "real": [41, 42, 86, 87, 195, 196, 197, 198, 399, 405, 406, 407, 409, 410, 411, 420, 421, 422, 424, 430, 431, 432, 434, 435, 436, 437, 439, 490, 491, 492, 494, 505, 507, 509, 510, 512, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 600, 601, 607, 608, 609, 611, 627, 628, 629, 631, 632, 633, 634, 636, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 677, 678, 679, 680, 681], "invers": [41, 42, 86, 87, 138, 152, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 829, 850, 852, 870, 872], "cosin": [41, 42, 86, 87, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "acosh": [41, 42, 86, 87, 273, 318, 319, 321, 322, 399, 1099], "hyperbol": [41, 42, 74, 75, 86, 87, 164, 195, 196, 197, 198, 199, 399, 410, 411, 412, 413, 414, 425, 426, 427, 428, 429, 440, 441, 442, 443, 444, 485, 486, 487, 488, 489, 652, 653, 654, 655, 656, 677], "x2": [41, 42, 43, 44, 51, 52, 76, 77, 86, 87, 88, 89, 96, 97, 120, 122, 125, 203, 268, 272, 273, 360, 366, 383, 399, 415, 416, 417, 418, 419, 435, 436, 437, 438, 439, 445, 446, 447, 448, 449, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 667, 668, 669, 670, 671, 683, 684, 685, 686, 687, 688, 812, 817, 829, 835, 836, 837, 853, 854, 855, 856, 867, 868, 869, 877, 878, 879, 886, 887, 888, 892, 893, 894, 1018, 1022], "asin": [41, 42, 86, 87, 399, 424, 1099], "sine": [41, 42, 86, 87, 399, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "asinh": [41, 42, 86, 87, 399, 429, 1099], "82": [41, 42, 425, 426], "atan": [41, 42, 86, 87, 399, 434, 1099], "tangent": [41, 42, 74, 75, 86, 87, 121, 164, 195, 196, 197, 198, 199, 399, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 672, 673, 674, 675, 676, 677], "atan2": [41, 42, 86, 87, 399, 439, 1099], "coordin": [41, 42, 86, 87, 203, 237, 240, 399, 435, 436, 437, 438, 439], "quotient": [41, 42, 86, 87, 399, 435, 436, 437, 438, 439], "785": [41, 42, 86, 87, 399, 435, 436, 437, 438, 439], "245": [41, 42, 435, 436], "57": [41, 42, 366, 378, 399, 420, 423, 425, 428, 435, 436, 438, 470, 473, 485, 488], "atanh": [41, 42, 86, 87, 399, 444, 1099], "bitwise_and": [41, 42, 86, 87, 399, 449], "integ": [41, 42, 69, 70, 76, 77, 86, 87, 104, 105, 114, 115, 124, 130, 131, 138, 203, 204, 205, 225, 273, 324, 327, 340, 343, 351, 354, 399, 400, 403, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 515, 518, 520, 523, 600, 603, 627, 630, 632, 635, 637, 640, 678, 682, 829, 860, 892, 894, 895, 897, 917, 957, 1006, 1008, 1009, 1010, 1016, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "bitwise_invert": [41, 42, 86, 87, 399, 454], "bitiwse_invert": [41, 42, 450, 451], "bitwise_left_shift": [41, 42, 86, 87, 399, 459], "bitwise_or": [41, 42, 86, 87, 399, 464], "bitwise_right_shift": [41, 42, 86, 87, 399, 469], "bitwise_xor": [41, 42, 86, 87, 399, 474], "ceil": [41, 42, 86, 87, 203, 204, 205, 399, 479, 1099], "express": [41, 42, 86, 87, 121, 134, 136, 141, 399, 405, 408, 420, 423, 430, 433, 435, 438, 480, 481, 482, 483, 484, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676], "radian": [41, 42, 86, 87, 121, 399, 405, 408, 420, 423, 430, 433, 435, 438, 480, 481, 482, 483, 484, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676], "54": [41, 42, 86, 87, 102, 103, 122, 399, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 657, 660, 812, 828, 829, 867, 869, 1001, 1003, 1005, 1006, 1011, 1055, 1056, 1059], "416": [41, 42, 399, 480, 481, 483], "99": [41, 42, 399, 425, 428, 480, 481, 1055, 1056, 1059], "cosh": [41, 42, 86, 87, 399, 410, 414, 489, 1099], "angl": [41, 42, 86, 87, 152, 195, 196, 197, 198, 399, 435, 438, 485, 486, 487, 488, 489, 652, 653, 654, 655, 656, 677], "76": [41, 42, 86, 87, 195, 196, 273, 324, 327, 399, 485, 486, 487, 488, 489, 652, 654, 656, 771, 773, 776, 829, 886, 888, 1055, 1056, 1059], "23": [41, 42, 80, 81, 86, 87, 203, 226, 228, 229, 230, 399, 435, 438, 470, 473, 485, 486, 487, 489, 540, 543, 632, 635, 642, 645, 652, 653, 654, 655, 656, 812, 818, 829, 841, 843, 1018, 1022], "03": [41, 42, 86, 87, 485, 486, 487, 489, 812, 828, 1000, 1001, 1004], "81": [41, 42, 273, 324, 327, 399, 485, 486, 637, 640, 662, 665, 1055, 1056, 1059], "divid": [41, 42, 76, 77, 86, 87, 122, 129, 399, 494, 520, 523, 683, 752, 917, 957], "dividend": [41, 42, 86, 87, 399, 490, 491, 492, 493, 494, 520, 521, 522, 524, 632, 633, 635], "divisor": [41, 42, 45, 46, 86, 87, 90, 91, 399, 490, 491, 492, 493, 494, 520, 521, 522, 524, 525, 527, 529, 632, 633, 635, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1055, 1076, 1079, 1084, 1087, 1137, 1138, 1139], "x1": [41, 42, 43, 44, 86, 87, 88, 89, 120, 122, 125, 203, 268, 272, 273, 307, 310, 360, 366, 383, 399, 415, 418, 419, 435, 438, 439, 445, 448, 449, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 520, 521, 522, 523, 524, 525, 528, 529, 530, 533, 534, 550, 553, 554, 555, 558, 559, 580, 583, 584, 585, 588, 589, 595, 598, 599, 600, 603, 604, 605, 606, 607, 610, 611, 617, 620, 621, 627, 630, 631, 632, 633, 634, 635, 636, 667, 668, 671, 683, 684, 685, 686, 687, 688, 691, 812, 817, 829, 835, 837, 853, 856, 867, 869, 877, 879, 886, 888, 892, 894, 1018, 1022], "375": [41, 42, 399, 495, 496, 498], "erf": [41, 42, 86, 87, 399, 504], "exponenti": [41, 42, 86, 87, 399, 500, 501, 502, 503, 504, 505, 506, 508, 580, 583, 627, 628, 630], "gauss": [41, 42, 86, 87, 399, 500, 501, 502, 503, 504], "exp": [41, 42, 86, 87, 399, 509, 510, 513, 580, 583, 1099], "evalu": [41, 42, 76, 77, 86, 87, 130, 399, 505, 506, 507, 508, 509, 510, 512, 513, 514, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 590, 592, 594, 612, 613, 614, 615, 616, 622, 623, 624, 626, 642, 643, 644, 645, 646, 662, 665, 982, 983, 992, 993, 1088, 1089, 1092, 1094, 1097], "expm1": [41, 42, 86, 87, 399, 514], "244": [41, 42, 510, 511], "918": [41, 42, 510, 511], "48": [41, 42, 164, 170, 173, 399, 510, 511, 657, 660, 771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "147": [41, 42, 164, 185, 188, 399, 510, 511, 513], "floor": [41, 42, 86, 87, 399, 465, 468, 519, 683, 709, 1099], "floor_divid": [41, 42, 86, 87, 399, 524], "13": [41, 42, 104, 105, 122, 124, 130, 273, 324, 327, 366, 378, 399, 445, 448, 470, 473, 485, 488, 510, 513, 520, 521, 523, 657, 660, 683, 701, 771, 773, 776, 812, 828, 829, 841, 843, 867, 869, 1008, 1010, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059], "greater": [41, 42, 76, 77, 86, 87, 399, 405, 408, 420, 423, 435, 438, 455, 458, 465, 468, 515, 518, 520, 523, 529, 627, 630, 632, 635, 642, 645, 678, 682, 829, 835, 837, 917, 958, 961, 1006, 1012, 1014], "greater_equ": [41, 42, 86, 87, 399, 534, 580, 582, 584], "isfinit": [41, 42, 86, 87, 124, 399, 539], "out_i": [41, 42, 86, 87, 399, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "self_i": [41, 42, 86, 87, 535, 536, 537, 540, 541, 542, 545, 546, 547], "finit": [41, 42, 86, 87, 399, 415, 418, 435, 438, 535, 536, 537, 538, 539, 607, 610, 627, 630, 632, 635], "isinf": [41, 42, 86, 87, 399, 544], "neg": [41, 42, 55, 56, 69, 70, 74, 75, 86, 87, 100, 101, 114, 115, 126, 130, 133, 164, 170, 172, 173, 174, 203, 204, 205, 217, 218, 399, 535, 538, 540, 541, 542, 543, 544, 607, 610, 616, 627, 630, 632, 635, 829, 880, 882, 892, 894, 895, 897, 917, 935, 938, 952, 953, 954, 955, 956, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "infin": [41, 42, 86, 87, 121, 202, 273, 280, 283, 399, 400, 403, 410, 413, 415, 418, 425, 428, 430, 433, 435, 438, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 520, 523, 535, 538, 540, 541, 542, 543, 544, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 829, 895, 897, 1055, 1060, 1063, 1068, 1071, 1088, 1089, 1092, 1094, 1097], "isnan": [41, 42, 86, 87, 399, 549], "nan": [41, 42, 76, 77, 86, 87, 119, 121, 124, 202, 273, 280, 283, 399, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 535, 538, 545, 546, 547, 548, 549, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 683, 724, 770, 812, 828, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1092, 1094, 1097], "less_equ": [41, 42, 86, 87, 399, 559], "log10": [41, 42, 86, 87, 399, 569], "logarithm": [41, 42, 86, 87, 399, 505, 508, 560, 563, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 578, 579, 580, 583, 829, 876], "log1p": [41, 42, 86, 87, 399, 574], "log2": [41, 42, 86, 87, 399, 579], "logaddexp": [41, 42, 86, 87, 399], "logical_and": [41, 42, 86, 87, 399, 589, 1099], "logical_not": [41, 42, 86, 87, 399, 594, 1099], "logical_or": [41, 42, 86, 87, 399, 599, 1099], "logical_xor": [41, 42, 86, 87, 399, 604], "multipli": [41, 42, 86, 87, 122, 127, 129, 399, 611, 683, 701], "not_equ": [41, 42, 86, 87, 399, 621], "pow": [41, 42, 86, 87, 399, 631], "expon": [41, 42, 399, 627, 628, 630, 683, 753], "remaind": [41, 42, 76, 77, 86, 87, 399, 636, 683, 709, 917, 957], "respect": [41, 42, 45, 46, 86, 87, 90, 91, 120, 122, 124, 129, 130, 131, 134, 203, 237, 240, 399, 400, 403, 415, 418, 435, 438, 445, 448, 455, 458, 460, 463, 465, 468, 470, 473, 490, 493, 495, 498, 520, 523, 525, 528, 530, 533, 550, 553, 555, 558, 580, 583, 585, 588, 595, 598, 600, 603, 607, 610, 617, 620, 632, 633, 634, 635, 636, 667, 671, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 829, 873, 875, 978, 979, 980, 981], "x2_i": [41, 42, 86, 87, 399, 415, 418, 435, 438, 445, 448, 455, 458, 460, 463, 465, 468, 470, 473, 490, 493, 495, 498, 520, 523, 525, 528, 530, 533, 550, 553, 555, 558, 580, 583, 585, 588, 595, 598, 600, 603, 607, 610, 617, 620, 627, 630, 632, 633, 634, 635, 636, 667, 671], "11": [41, 42, 45, 46, 73, 78, 79, 86, 87, 100, 101, 104, 105, 122, 124, 130, 399, 415, 417, 418, 419, 445, 448, 510, 512, 632, 633, 635, 637, 640, 683, 701, 711, 773, 774, 829, 841, 843, 867, 869, 901, 912, 915, 917, 935, 938, 958, 960, 982, 999, 1006, 1008, 1009, 1010, 1018, 1022, 1023, 1024, 1028, 1055, 1056, 1059], "18": [41, 42, 86, 87, 122, 130, 399, 435, 438, 470, 473, 490, 493, 632, 633, 652, 653, 654, 655, 656, 829, 841, 843, 867, 869, 1055, 1056, 1059], "94": [41, 42, 86, 87, 425, 429, 642, 643], "256": [41, 42, 642, 643, 812, 818], "0001": [41, 42, 642, 643, 1137, 1138, 1139], "36": [41, 42, 399, 435, 438, 642, 643, 829, 867, 869, 1055, 1056, 1059], "67": [41, 42, 86, 87, 130, 399, 470, 473, 485, 487, 488, 489, 642, 643, 652, 654, 656], "45": [41, 42, 86, 87, 124, 399, 435, 437, 438, 439, 490, 492, 493, 494, 642, 643, 771, 773, 776, 829, 867, 869, 917, 957, 1000, 1001, 1004, 1055, 1056, 1059], "24": [41, 42, 102, 103, 399, 470, 473, 642, 643, 657, 660, 683, 701, 771, 773, 776, 829, 841, 843, 867, 869, 1000, 1001, 1003, 1004, 1005, 1055, 1056, 1059], "678": [41, 42, 642, 643], "32": [41, 42, 45, 46, 124, 139, 164, 170, 173, 399, 470, 473, 642, 643, 773, 774, 812, 815, 818, 819, 822, 829, 867, 869, 1018, 1022, 1055, 1056, 1059], "sin": [41, 42, 86, 87, 129, 136, 399, 651, 683, 710, 1099], "841": [41, 42, 86, 87, 399, 647, 648, 649, 650, 651], "909": [41, 42, 86, 87, 399, 647, 648, 649, 650, 651], "141": [41, 42, 86, 87, 399, 647, 648, 649, 650, 651], "sinh": [41, 42, 86, 87, 399, 656, 1099], "63": [41, 42, 45, 46, 86, 87, 96, 97, 399, 652, 653, 654, 655, 656, 657, 660, 773, 774, 829, 830, 832, 833, 834, 867, 869, 1055, 1056, 1059], "232": [41, 42, 86, 87, 399, 652, 653, 654, 655, 656], "51": [41, 42, 399, 470, 473, 652, 653, 655], "sqrt": [41, 42, 86, 87, 399, 661, 829, 895, 897], "squar": [41, 42, 51, 52, 86, 87, 96, 97, 124, 399, 657, 658, 659, 660, 661, 666, 812, 815, 829, 830, 831, 832, 833, 834, 838, 840, 844, 846, 847, 849, 850, 852, 860, 876, 877, 879, 880, 882], "subtract": [41, 42, 86, 87, 122, 129, 399, 668], "tan": [41, 42, 86, 87, 120, 121, 125, 126, 130, 133, 136, 399, 420, 423, 425, 428, 673, 829, 841, 843, 1023, 1024, 1028, 1044, 1045, 1048, 1099], "56": [41, 42, 86, 87, 122, 399, 657, 660, 672, 673, 674, 675, 676, 771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "19": [41, 42, 86, 87, 122, 399, 425, 427, 429, 470, 473, 672, 673, 674, 675, 676, 829, 841, 843], "762": [41, 42, 86, 87, 164, 195, 197, 198, 199, 399, 677], "964": [41, 42, 86, 87, 164, 195, 197, 198, 199, 399, 677], "trunc": [41, 42, 86, 87, 399, 679], "elementwis": [42, 76, 77, 87, 119, 126, 136, 141, 400, 403, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 440, 443, 445, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 606, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 671, 672, 676, 677, 678, 682], "all_equ": [43, 44, 88, 89, 683, 688], "equality_matrix": [43, 44, 88, 89, 683, 684, 685, 686, 687, 688], "compar": [43, 44, 76, 77, 88, 89, 124, 134, 139, 683, 684, 685, 686, 687, 688, 691, 692, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1044, 1045, 1048, 1050, 1053], "matrix": [43, 44, 51, 52, 76, 77, 88, 89, 96, 97, 203, 237, 240, 255, 259, 260, 264, 683, 684, 685, 686, 687, 688, 695, 812, 825, 829, 830, 831, 832, 833, 834, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 860, 861, 863, 864, 866, 870, 872, 873, 875, 877, 879, 880, 882, 883, 885, 889, 891, 898, 900, 1121, 1131], "gather_nd": [43, 44, 76, 77, 88, 89, 683, 716, 1099], "cuda": [43, 44, 76, 77, 88, 89, 104, 105, 136, 139, 153, 203, 231, 232, 234, 235, 366, 369, 386, 387, 683, 711, 712, 713, 714, 715, 716, 738, 741, 742, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144], "to_numpi": [43, 44, 76, 77, 88, 89, 139, 683, 760, 1099], "adam_step": [45, 46, 90, 91, 771, 777], "mw": [45, 46, 90, 91, 140, 771, 773, 774, 775, 776, 777, 778, 780], "vw": [45, 46, 90, 91, 140, 771, 773, 774, 775, 776, 777, 778, 780], "beta1": [45, 46, 90, 91, 140, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1137, 1138, 1139], "beta2": [45, 46, 90, 91, 140, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1137, 1138, 1139], "999": [45, 46, 86, 87, 90, 91, 140, 195, 196, 198, 399, 677, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1137, 1138, 1139], "epsilon": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 829, 861, 863, 870, 872, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136, 1137, 1138, 1139], "1e": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 141, 273, 313, 316, 683, 720, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 829, 880, 882, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1000, 1001, 1002, 1003, 1004, 1005, 1099, 1137, 1138, 1139, 1140, 1142], "07": [45, 46, 53, 54, 86, 87, 90, 91, 98, 99, 140, 399, 435, 437, 438, 439, 642, 645, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1137, 1138, 1139], "cost": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 978, 979, 980, 981], "weight": [45, 46, 90, 91, 126, 130, 140, 141, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 812, 825, 826, 828, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1134, 1137, 1139, 1140], "ws": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "dc": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "dw": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "w": [45, 46, 49, 50, 76, 77, 90, 91, 94, 95, 136, 139, 140, 683, 692, 771, 773, 774, 775, 776, 777, 778, 780, 781, 785, 787, 788, 794, 796, 797, 798, 800, 801, 802, 804, 805, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823], "averag": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 978, 979, 980], "moment": [45, 46, 90, 91, 127, 153, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1137, 1138, 1139], "forget": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1137, 1138, 1139], "dure": [45, 46, 76, 77, 90, 91, 126, 130, 131, 132, 133, 153, 200, 201, 366, 390, 394, 683, 765, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 829, 853, 856, 978, 979, 980, 981, 1055, 1076, 1079, 1084, 1087, 1133, 1134, 1137, 1138, 1139, 1141], "adam": [45, 46, 90, 91, 139, 140, 141, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1099, 1137, 1139], "divis": [45, 46, 90, 91, 126, 399, 465, 468, 490, 493, 520, 523, 632, 635, 683, 709, 720, 745, 752, 753, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1137, 1138, 1139], "delta": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777], "dcdw": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801], "adam_step_delta": [45, 46, 90, 91, 771, 773, 774, 775, 776, 777], "639": [45, 46, 771, 773, 774, 776], "00121": [45, 46, 773, 774], "0102": [45, 46, 773, 774], "0397": [45, 46, 773, 774], "exclus": [45, 46, 76, 77, 90, 91, 124, 126, 130, 141, 203, 204, 205, 683, 701, 731, 732, 734, 771, 789, 790, 791, 792, 793, 1006, 1008, 1009], "is_var": [45, 46, 90, 91, 771, 789, 790, 791, 792, 793], "gradient": [46, 76, 77, 91, 119, 130, 139, 140, 152, 153, 366, 389, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 807, 808, 809, 810, 811, 978, 979, 980, 981, 1099, 1137, 1138, 1139, 1140, 1141, 1142], "depthwise_conv2d": [49, 50, 94, 95, 812, 823, 1099], "stride": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "pad": [49, 50, 94, 95, 683, 710, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 917, 927, 930, 974, 977, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "data_format": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "nhwc": [49, 50, 94, 95, 812, 815, 816, 819, 820, 821, 822, 823, 1121, 1124, 1125, 1128], "dilat": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "batch_siz": [49, 50, 94, 95, 139, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1006, 1007], "h": [49, 50, 94, 95, 118, 130, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 982, 985, 998], "convolut": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "fh": [49, 50, 94, 95, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823], "fw": [49, 50, 94, 95, 124, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823], "d_in": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823], "slide": [49, 50, 94, 95, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "valid": [49, 50, 69, 70, 94, 95, 114, 115, 124, 125, 131, 136, 273, 300, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 917, 962, 965, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "algorithm": [49, 50, 74, 75, 94, 95, 153, 165, 167, 169, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "nchw": [49, 50, 94, 95, 812, 815, 816, 819, 820, 821, 822, 823, 1121, 1124, 1125, 1128], "255": [49, 50, 94, 95, 819, 820, 821, 823], "128": [49, 50, 94, 95, 273, 324, 327, 812, 818, 819, 820, 821, 823, 829, 867, 869], "linear_algebra": [51, 52, 96, 97, 119, 138, 829, 830, 833, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 857, 859, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900], "choleski": [51, 52, 96, 97, 829, 834], "symmetr": [51, 52, 96, 97, 130, 829, 830, 831, 832, 833, 834, 844, 846, 847, 849, 898, 900], "u": [51, 52, 96, 97, 829, 830, 831, 832, 833, 834, 880, 882], "625": [51, 52, 829, 830, 831, 833], "25": [51, 52, 53, 54, 86, 87, 102, 103, 130, 399, 490, 492, 493, 494, 652, 655, 657, 660, 662, 665, 829, 830, 831, 833, 841, 843, 850, 852, 901, 907, 908, 910, 1000, 1001, 1003, 1004, 1005, 1055, 1056, 1059], "cross": [51, 52, 53, 54, 73, 78, 79, 98, 99, 829, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1099], "det": [51, 52, 73, 78, 79, 829], "offset": [51, 52, 57, 58, 102, 103, 829, 841, 842, 843, 889, 890, 891, 1000, 1001, 1002, 1003, 1004, 1005], "axis1": [51, 52, 55, 56, 100, 101, 829, 841, 842, 843, 917, 966, 967, 968, 969], "axis2": [51, 52, 829, 841, 842, 843], "eigh": [51, 52, 73, 78, 79, 829], "namedtupl": [51, 52, 63, 64, 108, 109, 829, 844, 845, 846, 873, 874, 875, 880, 882, 1023, 1024, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038], "eigvalsh": [51, 52, 73, 78, 79, 829], "inv": [51, 52, 73, 78, 79, 138, 829, 1099], "matmul": [51, 52, 96, 97, 119, 124, 127, 136, 829, 880, 882, 1099], "matrix_norm": [51, 52, 76, 77, 829], "ord": [51, 52, 76, 77, 829, 857, 858, 859, 895, 896, 897], "fro": [51, 52, 829, 857, 858, 859], "keepdim": [51, 52, 67, 68, 69, 70, 76, 77, 112, 113, 114, 115, 134, 683, 769, 829, 857, 858, 859, 895, 896, 897, 1018, 1019, 1020, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "matrix_rank": [51, 52, 73, 78, 79, 829], "rtol": [51, 52, 829, 861, 862, 863, 870, 871, 872], "matrix_transpos": [51, 52, 73, 78, 79, 138, 829], "outer": [51, 52, 73, 78, 79, 829, 978, 979, 980, 981], "pinv": [51, 52, 73, 78, 79, 829, 1099], "qr": [51, 52, 73, 78, 79, 829], "reduc": [51, 52, 69, 70, 76, 77, 114, 115, 138, 366, 389, 683, 706, 829, 873, 874, 875, 1018, 1019, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "solv": [51, 52, 73, 78, 79, 137, 152, 829], "svd": [51, 52, 73, 78, 79, 829, 1099], "full_matric": [51, 52, 829, 880, 881, 882], "svdval": [51, 52, 73, 78, 79, 829], "tensordot": [51, 52, 73, 78, 79, 829], "trace": [51, 52, 73, 76, 77, 78, 79, 136, 153, 683, 731, 732, 734, 829], "vecdot": [51, 52, 73, 78, 79, 829], "vector_norm": [51, 52, 76, 77, 829], "vector_to_skew_symmetric_matrix": [51, 52, 73, 78, 79, 829, 1099], "binary_cross_entropi": [53, 54, 98, 99, 901, 906], "pred": [53, 54, 98, 99, 126, 130, 133, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "predict": [53, 54, 98, 99, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "amount": [53, 54, 98, 99, 132, 366, 395, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "smooth": [53, 54, 98, 99, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "binari": [53, 54, 98, 99, 399, 445, 448, 460, 463, 470, 473, 600, 603, 901, 902, 903, 904, 905, 906], "entropi": [53, 54, 98, 99, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916], "357": [53, 54, 98, 99, 901, 902, 903, 904, 905, 906, 912, 913, 915, 916], "223": [53, 54, 98, 99, 901, 902, 903, 904, 905, 906, 912, 913, 914, 916], "cross_entropi": [53, 54, 98, 99, 126, 130, 133, 901, 911, 912, 915], "along": [53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 98, 99, 100, 101, 114, 115, 119, 133, 185, 187, 189, 203, 231, 232, 234, 235, 366, 389, 683, 701, 702, 711, 769, 829, 857, 859, 889, 891, 892, 894, 895, 897, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 923, 926, 935, 938, 943, 946, 952, 953, 954, 955, 956, 957, 962, 965, 970, 973, 978, 979, 980, 981, 1006, 1017, 1018, 1019, 1020, 1044, 1045, 1048, 1050, 1053, 1055, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "3862944": [53, 54, 901, 907, 908, 910], "sparse_cross_entropi": [53, 54, 98, 99, 901, 916], "logit": [53, 54, 98, 99, 901, 912, 913, 914, 915, 916], "spars": [53, 54, 98, 99, 901, 912, 913, 914, 915, 916], "loss": [54, 99, 119, 126, 139, 140, 141, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1099], "clip": [55, 56, 76, 77, 100, 101, 126, 130, 133, 136, 139, 141, 399, 605, 606, 683, 695, 696, 698, 917, 922, 1099], "x_min": [55, 56, 76, 77, 100, 101, 136, 141, 917, 918, 919, 920, 921, 922], "x_max": [55, 56, 76, 77, 100, 101, 136, 141, 917, 918, 919, 920, 921, 922], "roll": [55, 56, 100, 101, 120, 130, 917, 918, 919, 956], "concat": [55, 56, 76, 77, 100, 101, 125, 366, 389, 683, 710, 917, 1099], "xs": [55, 56, 90, 91, 100, 101, 130, 683, 684, 687, 692, 771, 782, 783, 784, 917, 923, 924, 925, 926], "constant_pad": [55, 56, 100, 101, 917], "pad_width": [55, 56, 100, 101, 917, 927, 928, 929, 930, 974, 975, 976, 977], "expand_dim": [55, 56, 100, 101, 136, 139, 917, 1099], "flip": [55, 56, 100, 101, 138, 139, 141, 399, 450, 453, 917, 1099], "permute_dim": [55, 56, 100, 101, 917], "reshap": [55, 56, 76, 77, 100, 101, 124, 133, 136, 138, 141, 917, 1099], "shift": [55, 56, 80, 81, 100, 101, 120, 122, 226, 228, 230, 399, 455, 458, 465, 468, 917, 952, 953, 954, 955, 956], "sequenc": [55, 56, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 124, 125, 131, 134, 152, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 683, 684, 686, 688, 692, 712, 714, 716, 735, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 917, 918, 920, 922, 952, 953, 954, 955, 956, 957, 962, 965, 982, 998, 1001, 1003, 1005, 1006, 1008, 1009, 1010, 1029, 1030, 1032, 1055, 1060, 1063, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1121, 1130, 1135, 1136, 1143, 1144], "larger": [55, 56, 100, 101, 124, 136, 141, 273, 313, 316, 917, 918, 921, 952, 953, 954, 955, 956, 1055, 1076, 1079, 1084, 1087], "flatten": [55, 56, 63, 64, 76, 77, 100, 101, 108, 109, 683, 710, 829, 867, 869, 895, 897, 917, 943, 946, 952, 953, 954, 955, 956, 1018, 1019, 1020, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1039, 1043], "restor": [55, 56, 100, 101, 917, 952, 953, 954, 955, 956], "squeez": [55, 56, 100, 101, 917, 1099], "stack": [55, 56, 76, 77, 100, 101, 136, 203, 255, 259, 260, 264, 829, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 856, 860, 861, 863, 864, 866, 870, 872, 873, 875, 880, 882, 883, 885, 889, 891, 917, 982, 983, 992, 993, 1099, 1121, 1130], "swapax": [55, 56, 100, 101, 917], "axis0": [55, 56, 100, 101, 917, 966, 967, 968, 969], "tile": [55, 56, 100, 101, 917, 1099], "rep": [55, 56, 100, 101, 917, 970, 971, 972, 973], "zero_pad": [55, 56, 100, 101, 917, 1099], "layer_norm": [57, 58, 102, 103, 1000, 1005], "normalized_idx": [57, 58, 102, 103, 1000, 1001, 1002, 1003, 1004, 1005], "05": [57, 58, 102, 103, 124, 771, 773, 776, 1000, 1001, 1002, 1003, 1004, 1005], "scale": [57, 58, 102, 103, 125, 130, 366, 387, 388, 771, 798, 800, 812, 824, 827, 828, 1000, 1001, 1002, 1003, 1004, 1005, 1121, 1129, 1132, 1137, 1140], "new_std": [57, 58, 102, 103, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "normal": [57, 58, 102, 103, 139, 917, 962, 965, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1011, 1135, 1136], "small": [57, 58, 102, 103, 122, 126, 136, 140, 153, 399, 607, 610, 829, 861, 863, 870, 872, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "constant": [57, 58, 102, 103, 119, 126, 140, 141, 153, 917, 927, 930, 982, 988, 1000, 1001, 1002, 1003, 1004, 1005, 1112, 1113, 1117, 1120, 1133, 1134, 1135, 1136], "denomin": [57, 58, 102, 103, 126, 153, 683, 709, 720, 745, 752, 753, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "_min_bas": [57, 58, 102, 103, 683, 753, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "learnabl": [57, 58, 102, 103, 141, 1000, 1001, 1002, 1003, 1004, 1005, 1135, 1136], "gamma": [57, 58, 102, 103, 1000, 1001, 1002, 1003, 1004, 1005], "beta": [57, 58, 102, 103, 1000, 1001, 1002, 1003, 1004, 1005], "after": [57, 58, 76, 77, 102, 103, 122, 124, 125, 130, 131, 135, 273, 360, 366, 399, 657, 660, 771, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 1000, 1001, 1002, 1003, 1004, 1005, 1137, 1138, 1139, 1140, 1141, 1142], "0976": [57, 58, 1000, 1001, 1002, 1004], "3452": [57, 58, 1000, 1001, 1002, 1004], "2740": [57, 58, 1000, 1001, 1002, 1004], "1047": [57, 58, 1000, 1001, 1002, 1004], "5886": [57, 58, 1000, 1001, 1002, 1004], "2732": [57, 58, 1000, 1001, 1002, 1004], "7696": [57, 58, 1000, 1001, 1002, 1004], "7024": [57, 58, 1000, 1001, 1002, 1004], "2518": [57, 58, 1000, 1001, 1002, 1004], "001": [57, 58, 139, 140, 273, 313, 316, 399, 642, 645, 771, 773, 776, 1000, 1001, 1002, 1004], "576": [57, 58, 1000, 1001, 1002, 1004], "292": [57, 58, 1000, 1001, 1002, 1004], "33": [57, 58, 86, 87, 425, 427, 829, 867, 869, 982, 999, 1000, 1001, 1002, 1004, 1055, 1056, 1059], "581": [57, 58, 771, 773, 776, 1000, 1001, 1002, 1004], "891": [57, 58, 164, 180, 183, 1000, 1001, 1002, 1004], "01": [57, 58, 141, 399, 637, 640, 642, 645, 1000, 1001, 1002, 1004], "579": [57, 58, 1000, 1001, 1002, 1004], "931": [57, 58, 1000, 1001, 1002, 1004], "norm": [58, 76, 77, 103, 119, 683, 695, 696, 698, 829, 857, 859, 895, 897, 1001, 1002, 1003, 1004, 1005, 1099, 1136, 1137, 1139], "random": [60, 76, 77, 105, 119, 132, 141, 152, 1007, 1008, 1009, 1011, 1012, 1014, 1016, 1017, 1099], "unique_al": [63, 64, 108, 109, 1023], "unique_count": [63, 64, 108, 109, 1023, 1030], "count": [63, 64, 69, 70, 108, 109, 114, 115, 122, 139, 366, 383, 829, 892, 894, 917, 935, 938, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "field": [63, 64, 108, 109, 152, 829, 844, 846, 873, 875, 880, 882, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1033], "uc": [63, 64, 1029, 1031], "unique_invers": [63, 64, 108, 109, 1023], "unique_valu": [63, 64, 108, 109, 1023], "argsort": [65, 66, 110, 111, 1044], "descend": [65, 66, 110, 111, 829, 880, 882, 883, 885, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "sort": [66, 73, 76, 77, 78, 79, 111, 119, 829, 844, 846, 880, 882, 883, 885, 1045, 1048], "einsum": [67, 68, 112, 113, 1055], "equat": [67, 68, 112, 113, 829, 877, 879, 1055, 1056, 1057, 1058, 1059], "max": [67, 68, 76, 77, 112, 113, 273, 313, 316, 324, 327, 399, 605, 683, 695, 696, 698, 706, 741, 742, 829, 861, 863, 870, 872, 1055, 1137, 1139], "min": [67, 68, 76, 77, 112, 113, 273, 313, 316, 324, 327, 399, 606, 683, 706, 741, 742, 752, 829, 873, 875, 880, 882, 883, 885, 895, 897, 1055], "prod": [67, 68, 76, 77, 112, 113, 122, 131, 683, 706, 1055], "std": [67, 68, 112, 113, 122, 1006, 1011, 1023, 1024, 1028, 1055], "var": [67, 68, 112, 113, 116, 117, 122, 136, 978, 979, 980, 1055], "statist": [68, 113, 116, 117, 119, 124, 131, 1056, 1059, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087], "logic": [69, 70, 114, 115, 124, 128, 129, 131, 132, 138, 366, 381, 399, 585, 588, 590, 593, 595, 598, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "AND": [69, 70, 114, 115, 399, 445, 448, 585, 588, 1088, 1089, 1090, 1091, 1092, 1093], "reduct": [69, 70, 76, 77, 114, 115, 124, 131, 138, 683, 706, 741, 742, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "By": [69, 70, 114, 115, 122, 125, 126, 130, 133, 140, 141, 683, 701, 702, 829, 892, 894, 917, 943, 946, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "interv": [69, 70, 76, 77, 104, 105, 114, 115, 136, 141, 203, 204, 205, 231, 232, 234, 235, 829, 892, 894, 917, 918, 921, 962, 965, 1006, 1008, 1009, 1010, 1012, 1014, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "rank": [69, 70, 114, 115, 203, 237, 240, 683, 769, 829, 835, 837, 861, 863, 873, 875, 877, 879, 889, 891, 892, 894, 895, 897, 917, 927, 930, 931, 934, 962, 965, 974, 977, 1018, 1021, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "backward": [69, 70, 114, 115, 153, 399, 632, 635, 829, 892, 894, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "invalid": [69, 70, 114, 115, 125, 131, 134, 829, 892, 894, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "except": [69, 70, 76, 77, 114, 115, 121, 129, 133, 134, 138, 153, 273, 290, 293, 683, 693, 704, 729, 765, 829, 870, 872, 917, 923, 926, 962, 965, 1018, 1021, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "singleton": [69, 70, 114, 115, 829, 895, 897, 917, 958, 961, 1018, 1020, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "accordingli": [69, 70, 114, 115, 125, 134, 203, 237, 240, 399, 510, 513, 829, 895, 897, 1018, 1020, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "dimension": [69, 70, 76, 77, 114, 115, 203, 204, 205, 217, 218, 237, 240, 829, 835, 837, 838, 840, 853, 856, 861, 863, 867, 869, 870, 872, 892, 894, 895, 897, 917, 957, 1018, 1019, 1020, 1021, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1076, 1079, 1080, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "non": [69, 70, 114, 115, 122, 130, 131, 136, 200, 201, 273, 280, 283, 329, 399, 590, 593, 595, 598, 812, 815, 829, 838, 840, 861, 863, 880, 882, 886, 888, 892, 894, 895, 897, 1018, 1019, 1020, 1021, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1072, 1075, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1133, 1134, 1137, 1141], "util": [70, 115, 119, 132, 366, 378, 1089, 1092, 1094, 1097], "add_ivy_array_instance_method": 71, "cl": [71, 72, 116, 117], "to_ignor": [71, 72, 116, 117, 982, 993], "loop": [71, 72, 116, 117, 127, 134, 153, 978, 979, 980, 981], "_wrap_funct": [71, 72, 116, 117, 126, 128], "toi": [71, 72, 116, 117], "arrayexampl": [71, 72], "hasattr": [71, 72, 116, 117, 138], "dict_in": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 139, 683, 740, 747], "queue_load_s": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerwithactiv": [73, 74, 78, 79], "containerwithcr": [73, 78, 79, 80], "containerwithdatatyp": [73, 78, 79, 82], "containerwithdevic": [73, 78, 79, 84], "containerwithelementwis": [73, 78, 79, 86, 130], "containerwithgener": [73, 78, 79, 88], "containerwithgradi": [73, 78, 79, 90], "containerwithimag": [73, 78, 79, 92], "containerwithlay": [73, 78, 79, 94], "containerwithlinearalgebra": [73, 78, 79, 96], "containerwithloss": [73, 78, 79, 98], "containerwithnorm": [73, 78, 79, 102], "containerwithrandom": [73, 78, 79, 104], "containerwithsearch": [73, 78, 79, 106], "containerwithset": [73, 78, 79, 108], "containerwithsort": [73, 78, 79, 110], "containerwithstatist": [73, 78, 79, 112], "containerwithutil": [73, 78, 79, 114], "represent": [73, 76, 77, 78, 79, 152, 202, 273, 278, 279, 313, 316, 324, 327, 366, 369, 370, 399, 400, 403, 415, 418, 445, 448, 460, 463, 470, 473, 600, 603, 607, 610, 683, 689, 757], "dictionari": [73, 76, 77, 78, 79, 139, 153, 366, 388], "asynchron": [73, 76, 77, 78, 79], "arriv": [73, 76, 77, 78, 79], "timeout": [73, 76, 77, 78, 79, 683, 740, 747], "length": [73, 76, 77, 78, 79, 124, 134, 139, 203, 204, 205, 237, 240, 829, 880, 882, 883, 885, 917, 948, 951], "whitespac": [73, 76, 77, 78, 79], "indent": [73, 76, 77, 78, 79, 139], "extra": [73, 76, 77, 78, 79, 122, 124, 125, 128, 129, 136, 771, 782, 783], "newlin": [73, 76, 77, 78, 79, 121], "handl": [73, 76, 77, 78, 79, 118, 120, 124, 125, 126, 128, 130, 131, 132, 133, 140, 153, 200, 201, 366, 369, 370, 371, 372, 373, 376, 379, 383, 384, 395, 398, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1137, 1138, 1139, 1140, 1141, 1142], "color": [73, 76, 77, 78, 79, 1146, 1147], "map": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 126, 130, 139, 152, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 712, 714, 716, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 982, 989, 990, 994, 995, 1001, 1003, 1005, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098, 1121, 1132], "termcolor": [73, 76, 77, 78, 79], "rebuild": [73, 76, 77, 78, 79], "constructor": [73, 76, 77, 78, 79, 131, 132, 138, 683, 690, 1143, 1144], "param": [73, 76, 77, 78, 79, 88, 89, 136, 141, 683, 689, 711, 712, 715, 716], "alphabet": [73, 76, 77, 78, 79], "preserv": [73, 76, 77, 78, 79, 124, 141, 153, 771, 807, 917, 935, 938], "key_chain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 697, 712, 714, 716, 759, 760, 762, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 830, 832, 834, 853, 855, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 982, 995, 1001, 1003, 1005, 1008, 1010, 1012, 1013, 1015, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1042, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1096, 1098], "to_appli": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 697, 712, 714, 716, 759, 760, 762, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 830, 832, 834, 853, 855, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 982, 995, 1001, 1003, 1005, 1012, 1013, 1015, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1042, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1096, 1098], "prune_unappli": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 697, 712, 714, 716, 759, 760, 762, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 830, 832, 834, 853, 855, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 982, 995, 1001, 1003, 1005, 1012, 1013, 1015, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1042, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1096, 1098], "map_sequ": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 697, 712, 714, 716, 759, 760, 762, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 958, 960, 966, 968, 970, 972, 974, 976, 1001, 1003, 1005, 1012, 1013, 1015, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1042, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1096, 1098], "static_arg_info": [73, 78, 79], "static_arg_nam": [73, 78, 79], "static_argmax": [73, 78, 79], "static_argmin": [73, 78, 79], "static_arrai": [73, 78, 79], "static_array_equ": [73, 78, 79], "static_arrays_equ": [73, 78, 79], "static_as_ivy_dev": [73, 78, 79], "static_as_ivy_dtyp": [73, 78, 79], "static_as_native_dev": [73, 78, 79], "static_as_native_dtyp": [73, 78, 79], "static_assert_supports_inplac": [73, 78, 79], "static_cache_fn": [73, 78, 79], "static_clear_mem_on_dev": [73, 78, 79], "static_clip_matrix_norm": [73, 78, 79], "static_clip_vector_norm": [73, 78, 79], "static_closest_valid_dtyp": [73, 78, 79], "static_concat": [73, 78, 79], "static_constant_pad": [73, 78, 79], "static_container_typ": [73, 78, 79], "static_conv1d": [73, 78, 79], "static_conv1d_transpos": [73, 78, 79], "static_conv2d": [73, 78, 79], "static_conv2d_transpos": [73, 78, 79], "static_conv3d": [73, 78, 79], "static_conv3d_transpos": [73, 78, 79], "static_copy_arrai": [73, 78, 79], "static_cross": [73, 78, 79], "static_cumprod": [73, 78, 79], "static_cumsum": [73, 78, 79], "static_current_backend": [73, 78, 79], "static_current_backend_str": [73, 78, 79], "static_default": [73, 78, 79], "static_default_devic": [73, 78, 79], "static_default_dtyp": [73, 78, 79], "static_default_int_dtyp": [73, 78, 79], "static_default_uint_dtyp": [73, 78, 79], "static_det": [73, 78, 79], "static_dev_util": [73, 78, 79], "static_diagon": [73, 78, 79], "static_dropout": [73, 78, 79], "static_dtype_bit": [73, 78, 79], "static_eigh": [73, 78, 79], "static_eigvalsh": [73, 78, 79], "static_einops_rearrang": [73, 78, 79], "static_einops_reduc": [73, 78, 79], "static_einops_repeat": [73, 78, 79], "static_einsum": [73, 78, 79], "static_empti": [73, 78, 79], "static_exist": [73, 78, 79], "static_expand_dim": [73, 78, 79], "static_flip": [73, 78, 79], "static_floormod": [73, 78, 79], "static_fourier_encod": [73, 78, 79], "static_ful": [73, 78, 79], "static_gath": [73, 78, 79], "static_get_all_arrays_in_memori": [73, 78, 79], "static_get_all_ivy_arrays_on_dev": [73, 78, 79], "static_get_array_mod": [73, 78, 79], "static_get_min_bas": [73, 78, 79], "static_get_min_denomin": [73, 78, 79], "static_get_nestable_mod": [73, 78, 79], "static_get_num_dim": [73, 78, 79], "static_get_referrers_recurs": [73, 78, 79], "static_gpu_is_avail": [73, 78, 79], "static_handle_nest": [73, 78, 79], "static_handle_out_argu": [73, 78, 79], "static_has_nan": [73, 78, 79], "static_indices_wher": [73, 78, 79], "static_infer_devic": [73, 78, 79], "static_infer_dtyp": [73, 78, 79], "static_inplace_arrays_support": [73, 78, 79], "static_inplace_decr": [73, 78, 79], "static_inplace_incr": [73, 78, 79], "static_inplace_upd": [73, 78, 79], "static_inplace_variables_support": [73, 78, 79], "static_inputs_to_native_arrai": [73, 78, 79], "static_inv": [73, 78, 79], "static_invalid_dtyp": [73, 78, 79], "static_is_arrai": [73, 78, 79], "static_is_ivy_arrai": [73, 78, 79], "static_is_ivy_contain": [73, 78, 79], "static_is_native_arrai": [73, 78, 79], "static_linear": [73, 78, 79], "static_lstm_upd": [73, 78, 79], "static_match_kwarg": [73, 78, 79], "static_matmul": [73, 78, 79], "static_matrix_norm": [73, 78, 79], "static_matrix_pow": [73, 78, 79], "static_matrix_rank": [73, 78, 79], "static_matrix_transpos": [73, 78, 79], "static_max": [73, 78, 79], "static_maximum": [73, 78, 79], "static_mean": [73, 78, 79], "static_min": [73, 78, 79], "static_minimum": [73, 78, 79], "static_multi_head_attent": [73, 78, 79], "static_multinomi": [73, 78, 79], "static_multiprocess": [73, 78, 79], "static_nonzero": [73, 78, 79], "static_num_arrays_in_memori": [73, 78, 79], "static_num_cpu_cor": [73, 78, 79], "static_num_gpu": [73, 78, 79], "static_num_ivy_arrays_on_dev": [73, 78, 79], "static_one_hot": [73, 78, 79], "static_out": [73, 78, 79], "static_outputs_to_ivy_arrai": [73, 78, 79], "static_percent_used_mem_on_dev": [73, 78, 79], "static_permute_dim": [73, 78, 79], "static_pinv": [73, 78, 79], "static_print_all_arrays_in_memori": [73, 78, 79], "static_print_all_ivy_arrays_on_dev": [73, 78, 79], "static_prod": [73, 78, 79], "static_promote_typ": [73, 78, 79], "static_qr": [73, 78, 79], "static_queue_timeout": [73, 78, 79], "static_random_norm": [73, 78, 79], "static_reshap": [73, 78, 79], "static_scaled_dot_product_attent": [73, 78, 79], "static_scatter_flat": [73, 78, 79], "static_scatter_nd": [73, 78, 79], "static_se": [73, 78, 79], "static_set_array_mod": [73, 78, 79], "static_set_default_devic": [73, 78, 79], "static_set_default_dtyp": [73, 78, 79], "static_set_default_float_dtyp": [73, 78, 79], "static_set_default_int_dtyp": [73, 78, 79], "static_set_default_uint_dtyp": [73, 78, 79], "static_set_min_bas": [73, 78, 79], "static_set_min_denomin": [73, 78, 79], "static_set_nestable_mod": [73, 78, 79], "static_set_queue_timeout": [73, 78, 79], "static_set_shape_array_mod": [73, 78, 79], "static_set_split_factor": [73, 78, 79], "static_set_tmp_dir": [73, 78, 79], "static_set_with_grad": [73, 78, 79], "static_shap": [73, 78, 79], "static_shape_array_mod": [73, 78, 79], "static_shuffl": [73, 78, 79], "static_slogdet": [73, 78, 79], "static_solv": [73, 78, 79], "static_split": [73, 78, 79], "static_split_factor": [73, 78, 79], "static_split_func_cal": [73, 78, 79], "static_squeez": [73, 78, 79], "static_stable_divid": [73, 78, 79], "static_stable_pow": [73, 78, 79], "static_stack": [73, 78, 79], "static_std": [73, 78, 79], "static_stop_gradi": [73, 78, 79], "static_sum": [73, 78, 79], "static_supports_inplac": [73, 78, 79], "static_svd": [73, 78, 79], "static_svdv": [73, 78, 79], "static_swapax": [73, 78, 79], "static_tensordot": [73, 78, 79], "static_til": [73, 78, 79], "static_tmp_dir": [73, 78, 79], "static_to_ivy_shap": [73, 78, 79], "static_to_list": [73, 78, 79], "static_to_native_arrays_and_back": [73, 78, 79], "static_to_native_shap": [73, 78, 79], "static_to_scalar": [73, 78, 79], "static_total_mem_on_dev": [73, 78, 79], "static_tpu_is_avail": [73, 78, 79], "static_trac": [73, 78, 79], "static_try_else_non": [73, 78, 79], "static_type_promote_arrai": [73, 78, 79], "static_unset_array_mod": [73, 78, 79], "static_unset_default_devic": [73, 78, 79], "static_unset_default_dtyp": [73, 78, 79], "static_unset_default_float_dtyp": [73, 78, 79], "static_unset_default_int_dtyp": [73, 78, 79], "static_unset_default_uint_dtyp": [73, 78, 79], "static_unset_nestable_mod": [73, 78, 79], "static_unset_shape_array_mod": [73, 78, 79], "static_unset_with_grad": [73, 78, 79], "static_unstack": [73, 78, 79], "static_used_mem_on_dev": [73, 78, 79], "static_valid_dtyp": [73, 78, 79], "static_value_is_nan": [73, 78, 79], "static_var": [73, 78, 79], "static_vari": [73, 78, 79], "static_variable_data": [73, 78, 79], "static_vecdot": [73, 78, 79], "static_vector_norm": [73, 78, 79], "static_vector_to_skew_symmetric_matrix": [73, 78, 79], "static_wher": [73, 78, 79], "static_with_grad": [73, 78, 79], "static_zero_pad": [73, 78, 79], "containerbas": [74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 130], "formul": [74, 75, 165, 167, 169], "chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 129, 130, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 712, 714, 716, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 978, 979, 980, 982, 995, 1001, 1003, 1005, 1008, 1010, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098, 1143, 1144], "prune": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 226, 228, 230, 295, 297, 299, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 712, 714, 716, 759, 760, 762, 789, 791, 793, 830, 832, 834, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 952, 954, 956, 982, 995, 996, 997, 1001, 1003, 1005, 1029, 1030, 1032, 1089, 1091, 1093, 1094, 1096, 1098], "unit": [74, 75, 123, 124, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194], "slope": [74, 75, 164, 170, 172, 173, 174], "leaki": [74, 75, 164, 170, 172, 173, 174], "rectifi": [74, 75, 164, 170, 173, 175, 177, 178, 179], "static_gelu": [74, 75, 165], "static_leaky_relu": [74, 75, 170], "static_relu": [74, 75, 175], "static_sigmoid": [74, 75, 180], "static_softmax": [74, 75, 185], "static_softplu": [74, 75, 190], "static_tanh": [74, 75, 86, 87, 195], "__getitem__": [76, 77, 130], "queri": [76, 77, 130, 131, 138, 366, 378, 388, 812, 827, 828, 1121, 1132], "slice": [76, 77, 683, 711, 712, 715, 982, 991], "__setitem__": [76, 77, 129, 130, 138], "val": [76, 77, 133, 138, 683, 727, 728, 729, 744, 745], "all_fals": [76, 77], "assert_is_bool": [76, 77], "entri": [76, 77, 203, 231, 232, 234, 235, 917, 957, 982, 995], "assert": [76, 77, 124, 134, 138, 139, 683, 693], "all_key_chain": [76, 77], "include_empti": [76, 77], "all_tru": [76, 77, 130, 139], "arrays_as_list": [76, 77], "intermedi": [76, 77], "as_arrai": [76, 77, 683, 722, 750], "as_bool": [76, 77], "as_on": [76, 77], "as_random_uniform": [76, 77], "low": [76, 77, 104, 105, 136, 1006, 1008, 1009, 1010, 1012, 1014, 1015], "uniform": [76, 77, 104, 105, 140, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1112, 1114, 1115, 1118, 1119], "boundari": [76, 77, 1006, 1012, 1014], "as_vari": [76, 77, 124], "as_zero": [76, 77], "assert_contains_sub_contain": [76, 77], "sub_cont": [76, 77], "diff": [76, 77, 130, 139], "screen": [76, 77, 139], "assert_contains_sub_structur": [76, 77], "check_shap": [76, 77], "assert_ident": [76, 77], "check_typ": [76, 77], "same_arrai": [76, 77, 139], "assert_identical_structur": [76, 77], "at_key_chain": [76, 77], "ignore_key_error": [76, 77], "ignore_non": [76, 77], "at_kei": [76, 77], "ignor": [76, 77, 122, 124, 153, 203, 237, 240, 982, 993, 1137, 1141], "substr": [76, 77], "clip_min": [76, 77], "clip_max": [76, 77], "config": [76, 77, 139, 982, 995], "duplic": [76, 77, 121, 127, 128, 134, 138, 140], "container_rightmost": [76, 77], "common_key_chain": [76, 77, 130], "contains_sub_contain": [76, 77], "match": [76, 77, 130, 273, 280, 283, 399, 632, 635, 683, 735], "contains_sub_structur": [76, 77], "create_if_abs": [76, 77], "inplac": [76, 77, 90, 91, 118, 120, 122, 128, 129, 138, 140, 683, 693, 726, 729, 730, 754, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 1110, 1111, 1137, 1138, 1139, 1140, 1141, 1142], "cutoff_at_depth": [76, 77], "depth_cutoff": [76, 77], "cutoff_at_height": [76, 77], "height_cutoff": [76, 77], "deep_copi": [76, 77, 139], "intern": [76, 77, 121, 124, 129, 130, 132, 133, 771, 810, 982, 983, 992, 993, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1143, 1144], "belong": [76, 77, 140], "dev_clon": [76, 77], "dev_dist": [76, 77], "dev_str": [76, 77], "diff_kei": [76, 77], "detect_key_diff": [76, 77], "detect_value_diff": [76, 77], "detect_shape_diff": [76, 77], "treat": [76, 77, 124, 137, 141, 200, 201], "detect": [76, 77, 120, 124, 130, 134, 139, 140, 982, 983, 993], "container0": [76, 77], "axes_length": [76, 77, 683, 705, 706, 707], "rearrang": [76, 77, 683, 705, 707], "One": [76, 77, 104, 105, 124, 131, 136, 138, 139, 683, 706, 917, 948, 951, 1006, 1008, 1009, 1010], "callabl": [76, 77, 124, 130, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 200, 201, 273, 318, 319, 321, 322, 366, 389, 683, 689, 694, 704, 706, 978, 979, 980, 981, 982, 988, 992, 993, 994], "find_sub_contain": [76, 77], "sub_cont_to_find": [76, 77], "exsit": [76, 77], "find_sub_structur": [76, 77], "sub_struc_to_find": [76, 77], "flatten_key_chain": [76, 77, 139, 1133, 1134], "__": [76, 77, 122, 139], "above_height": [76, 77, 139], "below_depth": [76, 77, 139], "format_key_chain": [76, 77], "format_fn": [76, 77], "string": [76, 77, 127, 131, 132, 134, 136, 139, 273, 278, 279, 307, 310, 329, 365, 366, 369, 370, 371, 372, 378, 384, 390, 394, 395, 398, 683, 703], "from_disk_as_hdf5": [76, 77, 139], "h5_obj_or_filepath": [76, 77], "slice_obj": [76, 77], "load": [76, 77, 153], "disk": [76, 77, 139], "h5py": [76, 77], "hdf5": [76, 77, 139, 1133, 1134], "h5": [76, 77], "from_disk_as_json": [76, 77, 139], "json_filepath": [76, 77], "json": [76, 77, 139], "from_disk_as_pickl": [76, 77, 139], "pickle_filepath": [76, 77], "pickl": [76, 77, 130, 139], "from_flat_list": [76, 77], "flat_list": [76, 77], "hierarchi": [76, 77, 139], "flat": [76, 77, 683, 741, 917, 943, 946], "popul": [76, 77, 124, 131, 132, 136, 1006, 1007, 1055, 1076, 1079, 1084, 1087], "from_numpi": [76, 77, 139], "h5_file_s": [76, 77], "batch": [76, 77, 126, 130, 139, 366, 387, 388, 683, 710, 812, 825, 829, 895, 897, 978, 979, 980, 981, 1000, 1001, 1004, 1135, 1136], "handle_inplac": [76, 77], "prime": [76, 77], "overwritten": [76, 77, 127, 129], "has_kei": [76, 77], "query_kei": [76, 77], "somewher": [76, 77], "has_key_chain": [76, 77], "include_inf": [76, 77, 683, 724, 770], "leafwis": [76, 77], "well": [76, 77, 124, 125, 133, 140, 141, 152, 683, 724, 829, 877, 879], "inf": [76, 77, 124, 202, 399, 435, 438, 510, 513, 540, 543, 683, 724, 770, 829, 895, 897], "identical_array_shap": [76, 77], "identical_config": [76, 77], "identical_structur": [76, 77], "if_exist": [76, 77], "key_chains_contain": [76, 77], "sub_str": [76, 77], "join": [76, 77, 917, 923, 926, 962, 965, 1099], "list_stack": [76, 77, 139], "dim": [76, 77, 125, 131, 683, 738, 1121, 1132], "func": [76, 77, 90, 91, 130, 200, 201, 366, 389, 683, 694, 771, 782, 783, 784, 982, 995], "map_cont": [76, 77], "include_self": [76, 77], "possibi": [76, 77], "max_depth": [76, 77, 683, 723, 982, 994], "multi_map": [76, 77, 130], "map_nest": [76, 77, 96, 97, 100, 101, 853, 855, 923, 925, 962, 964], "leftmost": [76, 77, 982, 995], "multi_map_in_static_method": [76, 77, 130], "fn_name": [76, 77], "num_arrai": [76, 77, 124], "overwrite_at_key_chain": [76, 77], "target_dict": [76, 77], "return_dict": [76, 77], "prune_empti": [76, 77], "keep_non": [76, 77], "prune_key_chain": [76, 77], "key1": [76, 77, 140], "key2": [76, 77], "key3": [76, 77], "prune_key_from_key_chain": [76, 77], "prune_kei": [76, 77], "prune_keys_from_key_chain": [76, 77], "remove_key_length_limit": [76, 77], "remove_print_limit": [76, 77], "reshape_lik": [76, 77], "leading_shap": [76, 77], "return_cont": [76, 77], "restructur": [76, 77], "keep_orig": [76, 77], "transpos": [76, 77, 138, 141, 812, 814, 816, 818, 829, 864, 866, 870, 872, 1099, 1121, 1123, 1125, 1127], "restructure_key_chain": [76, 77], "keychain_map": [76, 77], "set_at_key_chain": [76, 77], "set_at_kei": [76, 77], "set_framework": [76, 77, 136, 138, 139, 141], "set_ivy_backend": [76, 77], "ivy_backend": [76, 77], "attribut": [76, 77, 121, 125, 130, 131, 137, 138, 139, 140, 273, 313, 316, 318, 319, 321, 322, 324, 327, 366, 385], "show_sub_contain": [76, 77], "sub_cont_or_keychain": [76, 77], "seed_valu": [76, 77, 1006, 1016], "shuffle_h5_fil": [76, 77], "dataset": [76, 77, 139, 151, 1099], "size_ordered_arrai": [76, 77], "keychain": [76, 77], "smallest": [76, 77, 273, 313, 316, 324, 327, 399, 475, 478], "largest": [76, 77, 152, 273, 313, 316, 324, 327, 829, 880, 882], "slice_kei": [76, 77], "key_slic": [76, 77], "all_depth": [76, 77], "slice_via_kei": [76, 77], "sort_by_kei": [76, 77], "num_or_size_split": [76, 77, 136, 917, 957], "with_remaind": [76, 77, 917, 957], "constitu": [76, 77, 141], "evenli": [76, 77, 203, 204, 205, 231, 232, 234, 235, 917, 957], "store": [76, 77, 121, 127, 129, 130, 136, 138, 139, 140, 203, 268, 272, 683, 710, 771, 810, 829, 889, 891, 917, 957, 1133, 1134], "preserve_typ": [76, 77, 771, 807], "stop": [76, 77, 80, 81, 136, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 366, 368, 389, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 807, 978, 979, 980, 981, 1137, 1138, 1139, 1140, 1141, 1142], "structural_diff": [76, 77], "target": [76, 77, 118, 135, 139, 140, 141, 366, 371, 1099], "to_dict": [76, 77], "to_disk_as_hdf5": [76, 77, 139], "starting_index": [76, 77], "max_batch_s": [76, 77], "later": [76, 77, 124, 683, 694], "to_disk_as_json": [76, 77, 139], "to_disk_as_pickl": [76, 77, 139], "to_flat_list": [76, 77], "to_iter": [76, 77, 130], "leaf_keys_onli": [76, 77], "to_iterator_kei": [76, 77], "to_iterator_valu": [76, 77], "to_json": [76, 77], "update_backend": [76, 77], "to_raw": [76, 77], "raw": [76, 77, 121], "trim_kei": [76, 77], "max_length": [76, 77], "try_kc": [76, 77], "tri": [76, 77], "arbitrari": [76, 77, 120, 124, 126, 130, 133, 140, 153, 203, 237, 240, 273, 285, 288, 351, 354], "concatten": [76, 77, 366, 389], "dim_siz": [76, 77], "update_config": [76, 77], "global_norm": [76, 77, 88, 89, 696, 697], "vector": [76, 77, 152, 203, 237, 240, 683, 696, 698, 812, 825, 829, 835, 837, 844, 846, 853, 856, 867, 869, 880, 882, 883, 885, 892, 894, 895, 897, 898, 900, 1121, 1131], "with_default_key_color": [76, 77], "with_entries_as_list": [76, 77], "with_ivy_backend": [76, 77], "with_key_length_limit": [76, 77, 139], "with_print_ind": [76, 77, 139], "with_print_limit": [76, 77, 139], "with_print_line_spac": [76, 77], "2324": [80, 81, 203, 226, 228, 229, 230], "234": [80, 81, 203, 226, 228, 229, 230], "123": [80, 81, 124, 203, 226, 228, 229, 230, 683, 708], "static_arang": [80, 81, 204], "static_asarrai": [80, 81, 207], "static_empty_lik": [80, 81, 212], "static_ey": [80, 81, 217], "n_row": [80, 81, 203, 217, 218, 219], "n_col": [80, 81, 203, 217, 218, 219], "static_from_dlpack": [80, 81, 220], "static_full_lik": [80, 81, 226], "static_linspac": [80, 81, 231], "num": [80, 81, 136, 203, 231, 232, 233, 234, 235, 236], "endpoint": [80, 81, 203, 231, 232, 233, 234, 236], "static_logspac": [80, 81, 234], "static_meshgrid": [80, 81, 237], "static_native_arrai": [80, 81, 242], "static_on": [80, 81, 247], "static_ones_lik": [80, 81, 250], "static_tril": [80, 81, 255], "static_triu": [80, 81, 260], "static_zero": [80, 81, 265], "static_zeros_lik": [80, 81, 268], "int32": [82, 83, 88, 89, 124, 131, 203, 268, 272, 273, 295, 297, 298, 299, 307, 310, 324, 327, 340, 343, 356, 683, 759, 760, 762, 763, 917, 931, 934, 1055, 1072, 1075, 1080, 1083], "int64": [82, 83, 124, 131, 273, 295, 297, 298, 299, 324, 327, 345, 348, 365, 399, 465, 468, 1018, 1019, 1020, 1055, 1072, 1075, 1080, 1083], "static_astyp": [82, 83, 280], "static_broadcast_arrai": [82, 83, 285], "static_broadcast_to": [82, 83, 290], "static_can_cast": [82, 83, 295], "from_": [82, 83, 273, 295, 298, 299], "static_default_float_dtyp": [82, 83, 302], "float_dtyp": [82, 83, 273, 302, 303, 304, 357], "static_dtyp": [82, 83, 307], "static_finfo": [82, 83, 313], "static_function_supported_dtyp": [82, 83, 318], "fn": [82, 83, 136, 138, 154, 155, 156, 157, 158, 159, 160, 161, 162, 273, 318, 319, 320, 321, 322, 323, 683, 689, 765, 982, 983, 988, 989, 990, 992, 993, 994, 1102, 1104], "static_function_unsupported_dtyp": [82, 83, 321], "static_iinfo": [82, 83, 324], "static_is_bool_dtyp": [82, 83, 330], "dtype_in": [82, 83, 273, 278, 279, 312, 329, 330, 333, 334, 335, 338, 339, 340, 343, 344, 345, 348, 349, 365], "static_is_float_dtyp": [82, 83, 335], "static_is_int_dtyp": [82, 83, 340], "static_is_uint_dtyp": [82, 83, 345], "static_result_typ": [82, 83, 351], "static_dev": [84, 85, 373], "static_to_devic": [84, 85, 390], "02": [86, 87, 425, 427, 771, 773, 776], "21": [86, 87, 273, 324, 327, 399, 425, 427, 435, 437, 438, 439, 470, 473, 683, 701, 829, 841, 843, 867, 869, 901, 912, 915, 1055, 1056, 1059], "61": [86, 87, 98, 99, 399, 425, 427, 662, 665, 812, 819, 822, 901, 902, 904, 905, 906, 912, 914, 916], "915": [86, 87, 399, 435, 437, 438, 439], "29": [86, 87, 399, 435, 437, 438, 439], "983": [86, 87, 399, 435, 437, 438, 439], "75": [86, 87, 399, 425, 428, 429, 435, 437, 438, 439, 490, 493, 829, 850, 852, 867, 869], "35": [86, 87, 399, 435, 437, 438, 439, 657, 660, 812, 828, 829, 835, 837, 1018, 1022, 1055, 1056, 1059], "978": [86, 87, 164, 180, 183, 399, 435, 437, 438, 439], "696": [86, 87, 399, 435, 437, 438, 439], "993": [86, 87, 399, 435, 437, 438, 439], "96": [86, 87, 195, 196, 399, 480, 482, 483, 484, 672, 676, 771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "34": [86, 87, 273, 324, 327, 399, 470, 473, 485, 487, 489, 652, 654, 656, 657, 660], "98": [86, 87, 399, 470, 473, 485, 487, 489, 652, 654, 656, 829, 867, 869, 1018, 1022, 1055, 1056, 1059], "06": [86, 87, 124, 273, 313, 316, 485, 487, 489, 771, 773, 776], "52": [86, 87, 104, 105, 399, 435, 438, 485, 487, 489, 490, 492, 493, 494, 771, 773, 776, 829, 867, 869, 1008, 1010, 1023, 1024, 1028, 1055, 1056, 1059], "333": [86, 87, 399, 490, 492, 493, 494, 812, 819, 822], "thefunct": [86, 87, 500, 502, 510, 514, 515, 519], "649": [86, 87, 510, 512], "220": [86, 87, 510, 512], "959": [86, 87, 399, 510, 512, 647, 649, 650, 651], "53": [86, 87, 366, 395, 510, 512], "865": [86, 87, 510, 512], "metho": [86, 87, 530, 532, 575, 577], "20": [86, 87, 104, 105, 138, 399, 470, 473, 505, 508, 510, 513, 637, 639, 640, 641, 657, 660, 829, 841, 843, 867, 869, 886, 888, 1006, 1008, 1009, 1010, 1018, 1021, 1022, 1055, 1056, 1059], "300": [86, 87, 124, 399, 637, 639, 640, 641], "527": [86, 87, 399, 637, 639, 640, 641], "301": [86, 87, 399, 637, 639, 640, 641], "757": [86, 87, 399, 647, 649, 650, 651], "279": [86, 87, 399, 647, 649, 650, 651], "37": [86, 87, 104, 105, 399, 425, 428, 429, 652, 654, 656, 672, 676, 1008, 1010], "835": [86, 87, 652, 654, 656], "347": [86, 87, 652, 654, 656], "721": [86, 87, 652, 654, 656], "static_ab": [86, 87, 400], "static_aco": [86, 87, 405], "static_acosh": [86, 87, 410], "static_add": [86, 87, 121, 122, 130, 415], "static_asin": [86, 87, 420], "static_asinh": [86, 87, 425], "97": [86, 87, 399, 425, 428, 429], "static_atan": [86, 87, 430], "static_atan2": [86, 87, 435], "static_atanh": [86, 87, 440], "static_bitwise_and": [86, 87, 445], "static_bitwise_invert": [86, 87, 450], "static_bitwise_left_shift": [86, 87, 455], "static_bitwise_or": [86, 87, 460], "static_bitwise_right_shift": [86, 87, 465], "static_bitwise_xor": [86, 87, 470], "static_ceil": [86, 87, 475], "static_co": [86, 87, 480], "static_cosh": [86, 87, 485], "static_divid": [86, 87, 130, 490], "static_equ": [86, 87, 495], "static_erf": [86, 87, 500], "static_exp": [86, 87, 505], "static_expm1": [86, 87, 399, 510, 513], "areal": [86, 87, 510, 514], "static_floor": [86, 87, 515], "static_floor_divid": [86, 87, 520], "static_great": [86, 87, 525], "static_greater_equ": [86, 87, 530], "static_isfinit": [86, 87, 535], "x_i": [86, 87, 121, 399, 400, 403, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 450, 453, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 535, 538, 539, 540, 543, 544, 545, 548, 549, 560, 563, 565, 568, 575, 578, 590, 593, 612, 615, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 676, 677, 678, 682, 1023, 1024, 1028, 1029, 1033, 1039, 1043, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087], "static_isinf": [86, 87, 399, 540, 543], "static_isnan": [86, 87, 545], "static_less": [86, 87, 550], "static_less_equ": [86, 87, 555], "static_log": [86, 87, 560], "static_log10": [86, 87, 565], "static_log1p": [86, 87, 570], "static_log2": [86, 87, 575], "static_logaddexp": [86, 87, 580], "static_logical_and": [86, 87, 585], "static_logical_not": [86, 87, 590], "static_logical_or": [86, 87, 595], "static_logical_xor": [86, 87, 600], "static_multipli": [86, 87, 130, 607], "static_neg": [86, 87, 612], "static_not_equ": [86, 87, 617], "static_posit": [86, 87, 622], "static_pow": [86, 87, 627], "static_remaind": [86, 87, 632], "static_round": [86, 87, 637], "thevfunct": [86, 87, 637, 641], "static_sign": [86, 87, 642], "static_sin": [86, 87, 647], "static_sinh": [86, 87, 652], "static_sqrt": [86, 87, 657], "static_squar": [86, 87, 662], "static_subtract": [86, 87, 130, 667], "static_tan": [86, 87, 122, 130, 672], "143": [86, 87, 122, 399, 672, 673, 675, 676], "38": [86, 87, 122, 273, 313, 316, 399, 672, 673, 675, 676], "995": [86, 87, 195, 196, 198, 399, 677], "9999": [86, 87, 195, 196], "static_trunc": [86, 87, 678], "static_all_equ": [88, 89, 684, 686], "max_norm": [88, 89, 683, 695, 696, 697, 698], "static_gather_nd": [88, 89, 712], "static_to_numpi": [88, 89, 759, 762], "lr": [90, 91, 139, 140, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 1137, 1138, 1139, 1140, 1141, 1142], "mw_tm1": [90, 91, 771, 778, 779, 780, 781, 794, 795, 796, 797], "vw_tm1": [90, 91, 771, 778, 779, 780, 781, 794, 795, 796, 797], "max_trust_ratio": [90, 91, 771, 794, 795, 796, 797, 1137, 1139], "decay_lambda": [90, 91, 771, 794, 795, 796, 797, 798, 799, 800, 801, 1137, 1139, 1140], "effective_grad": [90, 91, 771, 802, 803, 804, 805], "static_adam_step": [90, 91, 773], "87": [90, 91, 104, 105, 771, 773, 776, 777, 1008, 1010], "976": [90, 91, 399, 677, 771, 773, 776, 777], "static_adam_upd": [90, 91, 778], "static_execute_with_gradi": [90, 91, 782], "retain_grad": [90, 91, 130, 771, 782, 783, 784], "static_gradient_descent_upd": [90, 91, 785], "static_is_vari": [90, 91, 789], "static_lamb_upd": [90, 91, 794], "static_lars_upd": [90, 91, 798], "static_optimizer_upd": [90, 91, 802], "inp": [94, 95, 812, 819, 821, 822, 823], "static_depthwise_conv2d": [94, 95, 819], "73": [96, 97, 124, 399, 657, 660, 829, 830, 832, 833, 834, 1000, 1001, 1004], "577": [96, 97, 829, 830, 832, 833, 834], "41": [96, 97, 138, 399, 470, 473, 657, 660, 829, 830, 832, 833, 834, 1055, 1080, 1083], "707": [96, 97, 829, 830, 832, 833, 834], "static_choleski": [96, 97, 830], "static_rol": [96, 97, 100, 101, 122, 130, 830, 834, 918, 922, 952], "511": [98, 99, 901, 902, 904, 905, 906, 912, 914, 916], "5108256": [98, 99, 907, 909], "609438": [98, 99, 907, 909], "static_binary_cross_entropi": [98, 99, 902], "static_cross_entropi": [98, 99, 907], "20397282": [98, 99, 907, 911], "83258148": [98, 99, 907, 911], "60943794": [98, 99, 907, 911], "static_sparse_cross_entropi": [98, 99, 912], "static_clip": [100, 101, 918], "static_repeat": [100, 101, 943], "658": [102, 103, 1000, 1001, 1003, 1004, 1005], "04": [102, 103, 273, 313, 316, 399, 510, 513, 812, 828, 1000, 1001, 1003, 1004, 1005], "759": [102, 103, 1000, 1001, 1003, 1004, 1005], "403": [102, 103, 1001, 1003, 1005], "62": [102, 103, 104, 105, 399, 652, 655, 1001, 1003, 1005, 1008, 1010], "static_layer_norm": [102, 103, 1001], "static_randint": [104, 105, 1008], "drawn": [104, 105, 124, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014], "highest": [104, 105, 1006, 1008, 1009, 1010], "nativeshap": [104, 105, 203, 211, 225, 247, 248, 265, 267, 683, 742, 750, 756, 758, 812, 814, 816, 818, 917, 948, 951, 1006, 1008, 1009, 1010, 1011, 1012, 1014], "half": [104, 105, 203, 204, 205, 1006, 1008, 1009, 1010, 1012, 1014], "40": [104, 105, 399, 485, 488, 657, 660, 829, 867, 869, 1008, 1010, 1055, 1056, 1059], "95": [104, 105, 399, 642, 645, 771, 773, 776, 1008, 1010], "static_random_uniform": [104, 105, 1012], "static_unique_al": [108, 109, 1024], "static_unique_count": [108, 109, 1029], "classivi": [108, 109, 917, 957, 1023, 1029, 1030, 1032, 1033], "static_unique_invers": [108, 109, 1034], "static_unique_valu": [108, 109, 1039], "static_argsort": [110, 111, 1045], "static_sort": [110, 111, 1050], "static_al": [114, 115, 1089], "static_ani": [114, 115, 1094], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 135, 153], "mainli": [118, 137, 139], "under": [118, 121, 122, 123, 124, 125, 126, 130, 135, 136, 139, 141], "hood": [118, 122, 124, 126, 130, 135, 136, 139, 141], "weed": [118, 135], "behind": [118, 124, 135, 137, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "tour": 118, "primari": [118, 124, 127, 133, 153], "composit": [118, 124, 127, 129, 130, 133, 136, 140, 141, 153], "nestabl": [118, 121, 122, 124, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 475, 478, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 841, 843, 917, 952, 955, 1000, 1001, 1004, 1023, 1029, 1033, 1055, 1060, 1063, 1088, 1089, 1092], "dynam": [118, 131, 132, 133, 136, 200, 201], "runtim": [118, 124, 366], "j": [118, 683, 691, 692, 829, 889, 891, 1055, 1056, 1059], "borrow": 118, "taken": [119, 134, 141, 829, 841, 843], "compil": [119, 130, 135, 137, 153, 1099, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "meta": [119, 129, 979, 980, 981], "overlap": 119, "sever": [119, 153, 829, 850, 852], "judgement": 119, "locat": [119, 124, 127, 132, 1006, 1007], "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 134, 138, 153, 1099], "anyth": [119, 124, 1099], "refactor": 119, "ongo": 119, "file_nam": [119, 124], "my_func": [119, 122], "my": 119, "cooler": 119, "produc": [119, 124, 812, 828], "something_cool": 119, "category_nam": [120, 121, 126, 131, 132], "backend_nam": [120, 121, 126, 127, 128, 131, 132], "adress": 120, "conveni": [120, 131, 132, 137, 139, 140], "revisit": [120, 141], "dedic": [120, 138, 140, 771, 810, 1110, 1111], "four": [120, 122, 126, 131, 139], "tf": [120, 125, 129, 131, 132, 133, 136, 141, 153, 1099], "jnp": [120, 131, 132, 133, 141, 1099], "jaxarrai": [120, 131, 132, 133], "wherea": [120, 122, 124, 126, 129, 131, 132, 141], "__sub__": [120, 122, 129, 130, 138], "__mul__": [120, 122, 129, 130, 138], "__div__": 120, "permit": [120, 124, 129], "dicat": 120, "addition": [120, 130, 133], "omit": [120, 133, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "wrapper": [120, 128, 129, 130, 131, 133, 138], "contrast": [120, 121], "futher": 120, "absenc": [120, 130], "pep": 120, "484": 120, "annot": [120, 134], "dictat": [120, 122, 129, 133], "brittl": 120, "intend": [120, 1055, 1080, 1083], "subset": [120, 121, 124, 136], "freeli": 120, "extend": [120, 121, 127], "consum": [120, 124, 130], "inde": [120, 153], "flexibl": 120, "technic": [120, 130, 133, 153], "original_typ": 120, "cumbersom": 120, "readabl": [120, 129, 130, 138, 139], "account": 121, "instanti": 121, "firstli": [121, 122, 126, 129, 131, 133, 139], "templat": [121, 124, 1099], "spec": [121, 122], "api_specif": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "array_api": 121, "preview": 121, "render": 121, "incorrectli": [121, 134], "onlin": [121, 1099], "domain": [121, 399, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 505, 508, 510, 513, 560, 563, 565, 568, 575, 578, 647, 650, 652, 655, 657, 660, 672, 676, 677], "codomain": [121, 399, 405, 408, 410, 413, 420, 423, 425, 428, 430, 433, 435, 438, 480, 483, 485, 488, 505, 508, 510, 513, 560, 563, 565, 568, 575, 578, 647, 650, 652, 655, 657, 660, 672, 676, 677], "assum": [121, 124, 127, 131, 138, 139, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 480, 483, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092], "operand": [121, 125, 399, 405, 408, 410, 413, 415, 418, 420, 423, 425, 428, 430, 433, 435, 438, 470, 473, 475, 478, 480, 483, 485, 488, 505, 508, 510, 513, 515, 518, 560, 563, 565, 568, 575, 578, 580, 583, 607, 610, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 672, 676, 677, 678, 682, 1055, 1056, 1059, 1060, 1063, 1068, 1071, 1080, 1083], "ref": [121, 399, 465, 468, 550, 553, 607, 610, 617, 620, 632, 635, 667, 671, 917, 962, 965], "But": [121, 130, 141], "needless": 121, "info": [121, 1099], "renam": 121, "conform": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 555, 558, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 829, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092], "org": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 313, 316, 324, 327, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 771, 773, 776, 778, 780, 829, 841, 843, 917, 931, 934, 952, 955, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "elementwise_funct": [121, 399, 400, 403, 420, 423, 425, 428, 435, 438, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 647, 650, 657, 660, 662, 665, 829, 841, 843, 917, 952, 955, 1023, 1024, 1028, 1044, 1045, 1048, 1055, 1060, 1063], "descript": [121, 124, 130, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 895, 897, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063, 1088, 1089, 1092], "simplic": [121, 140, 152, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 295, 298, 330, 333, 340, 343, 399, 400, 403, 415, 418, 420, 423, 425, 428, 435, 438, 445, 448, 470, 473, 475, 478, 485, 488, 510, 513, 515, 518, 540, 543, 605, 606, 617, 620, 637, 640, 642, 645, 647, 650, 657, 660, 662, 665, 672, 676, 677, 683, 711, 812, 815, 819, 822, 828, 829, 830, 833, 838, 840, 841, 843, 917, 931, 934, 935, 938, 952, 955, 1000, 1001, 1004, 1023, 1024, 1028, 1029, 1033, 1044, 1045, 1048, 1055, 1060, 1063], "judgment": 121, "beyond": [121, 917, 952, 955], "text": 121, "func_nam": [121, 122, 126], "pure": [121, 138, 141, 153], "themselv": [121, 126, 130, 131, 132, 140, 982, 983], "operator_nam": 121, "succinct": 121, "contstructor": 121, "though": [121, 126, 131, 139, 153], "forward": [121, 124, 141, 152, 153, 1133, 1134, 1137, 1141], "_forward": [121, 136, 139, 140, 1099], "former": 121, "explicitli": [121, 126, 127, 129, 130, 133, 136, 153, 829, 844, 846, 1121, 1130, 1132, 1133, 1134], "latter": [121, 127], "implicit": [121, 124, 130, 136], "docst": 121, "eight": 122, "static_": 122, "op_nam": 122, "__r": 122, "__truediv__": [122, 129, 130], "recap": [122, 130, 140], "independ": [122, 123, 128, 130, 136, 141, 829, 835, 837, 877, 879, 1006, 1007], "combinatorili": 122, "variat": [122, 124], "grid": [122, 124, 152, 203, 237, 240], "vari": [122, 124, 130, 138, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "simplest": [122, 124], "unus": [122, 133, 134, 200, 201], "excess": [122, 127, 138], "okai": [122, 136], "showcas": [122, 152], "demonstr": [122, 138], "replic": [122, 131], "meant": 122, "imaginari": 122, "some_flag": 122, "another_flag": 122, "jointli": 122, "three": [122, 124, 125, 130, 135, 203, 237, 240, 1099], "x0": [122, 683, 691], "procedur": 122, "sens": [122, 130, 138], "5574077": 122, "1850398": 122, "5463025": 122, "8422884": 122, "91601413": 122, "9647598": 122, "3738229": 122, "1597457": 122, "0963247": 122, "9955841": 122, "3278579": 122, "multi": [122, 130, 135, 153, 812, 827, 829, 835, 837, 1099, 1105, 1121, 1132], "seper": [122, 683, 710], "pars": [122, 153], "satisfi": [122, 829, 898, 900], "far": [122, 132, 137, 138, 982, 983, 993], "asid": [122, 152], "irrelev": [122, 131], "increasingli": 122, "complex": [122, 125, 139, 140, 141, 153, 829, 844, 846, 880, 882], "14254655": 122, "1578213": 122, "380515": 122, "trivial": 122, "exlud": 122, "thoroughli": 123, "ci": [123, 124, 153], "failur": 123, "On": [124, 125, 134, 137, 141], "fixtur": 124, "hit": [124, 136], "action": 124, "eleg": 124, "intellig": 124, "sampl": [124, 812, 824, 1006, 1007, 1011, 1012, 1014, 1055, 1076, 1079, 1084, 1087, 1121, 1129], "rang": [124, 139, 140, 141, 203, 204, 205, 231, 232, 234, 235, 1023, 1024, 1028, 1055, 1072, 1075, 1080, 1083, 1099], "cach": [124, 126, 366, 371, 683, 694], "unexplor": 124, "known": 124, "repeatedli": [124, 130, 982, 991], "upload": 124, "artifact": 124, "parametr": 124, "statement": [124, 134, 153], "plai": [124, 125, 141], "varieti": [124, 131, 132], "valid_int_dtyp": 124, "int8": [124, 131, 273, 324, 327, 340, 343, 365], "int16": [124, 131, 273, 295, 298, 324, 327, 340, 343, 1055, 1072, 1075, 1080, 1083], "uint8": [124, 131, 273, 295, 298, 306, 345, 348, 356, 359, 364, 365], "uint16": [124, 131, 273, 306, 321, 322, 324, 327, 345, 348, 1055, 1072, 1075, 1080, 1083], "uint32": [124, 131, 273, 306, 321, 322, 324, 327, 364, 1055, 1072, 1075, 1080, 1083], "uint64": [124, 131, 273, 306, 321, 322, 324, 327, 356, 359, 1055, 1072, 1075, 1080, 1083], "custom_strategi": 124, "st": 124, "sampled_from": 124, "min_siz": 124, "max_siz": 124, "wherein": 124, "referenc": 124, "print_hypothesis_exampl": 124, "searchstrategi": 124, "randomis": 124, "simplist": 124, "intricaci": 124, "briefli": [124, 126, 139], "bound": [124, 136], "mechan": [124, 151, 153, 1099], "power": [124, 138, 139, 140, 399, 465, 468, 505, 508, 627, 630, 683, 719, 744, 753, 829, 860, 1112], "math": [124, 133, 141, 399, 540, 543, 1099], "inclus": [124, 133, 203, 204, 205, 1006, 1008, 1009], "width": 124, "losslessli": 124, "mostli": 124, "one_of": 124, "datum": 124, "pipe": 124, "overload": 124, "shorthand": 124, "draw": [124, 1006, 1007, 1011, 1012, 1014], "input_dtyp": 124, "reject": 124, "flatmap": 124, "suppos": 124, "interact": [124, 1099], "dataobject": 124, "test_argsort": 124, "decor": [124, 126, 128, 130, 131, 132, 133], "initialis": [124, 366], "snippet": 124, "dtype_and_x": 124, "dtype_and_valu": 124, "valid_float_dtyp": 124, "list_of_length": 124, "num_positional_arg": 124, "instance_method": 124, "test_leaky_relu": 124, "float16": [124, 125, 131, 273, 313, 316, 321, 322, 365], "exhaust": 124, "num_posit": 124, "indirectli": 124, "advis": 124, "seri": [124, 125], "9433925": 124, "401298464324817e": 124, "574352379": 124, "99999": 124, "2250738585072014e": 124, "308": [124, 273, 313, 316], "103515625e": 124, "unpack": [124, 134, 683, 769], "seamlessli": 124, "edg": [124, 136, 141, 917, 918, 921, 927, 930, 974, 977, 1099], "encount": 124, "criterion": 124, "straight": [124, 138, 1099], "array_valu": 124, "valid_ax": 124, "hand": [124, 126, 134, 153], "craft": 124, "polici": [124, 152], "hoc": 124, "overview": [124, 135, 152], "array_dtyp": 124, "array_bool": 124, "na": 124, "test_concat": 124, "test_devic": 124, "array_shap": 124, "test_manipul": 124, "common_shap": 124, "test_lay": 124, "size_bound": 124, "precis": [124, 273, 313, 316, 399, 607, 610, 657, 660], "283405296074752": 124, "564049465049088": 124, "0417876997507982e": 124, "min_valu": 124, "max_valu": 124, "allow_inf": 124, "min_num_dim": 124, "wherev": 124, "reshape_shap": 124, "stand": 124, "alon": [124, 366, 384, 398], "fashion": 124, "some_sequ": 124, "allow_subnorm": 124, "exclude_min": 124, "960464477539063e": 124, "08": [124, 399, 425, 428, 510, 513, 812, 828], "coverag": 124, "allow_nan": 124, "Such": 124, "kind": [124, 153, 273, 313, 316, 324, 327, 399, 627, 630, 1055, 1072, 1075, 1080, 1083], "get_shap": 124, "allow_non": 124, "max_num_dim": 124, "min_dim_s": 124, "none_or_list_of_float": 124, "200": 124, "199": [124, 399, 425, 428], "99999999999997": 124, "000000000000002": 124, "125": 124, "43759670925832": 124, "get_mean_std": 124, "probabilist": 124, "811428143185347e": 124, "89": [124, 273, 324, 327, 399, 470, 473, 829, 886, 888, 1055, 1080, 1083], "none_or_list_float": 124, "get_bound": 124, "arrays_valu": 124, "put": [124, 153], "36418": 124, "213": 124, "21716926": 124, "get_prob": 124, "unnorm": [124, 1006, 1007], "099609375": 124, "get_axi": 124, "number_positional_argu": 124, "mind": [124, 129, 130], "bodi": 124, "test_valu": 124, "enough": [124, 138, 139, 140], "justifi": 124, "unduli": 124, "labori": 124, "straightforward": [124, 139], "scenario": 124, "autom": [124, 1099], "report": 124, "test_demo": 124, "falsifi": 124, "failing_test": 124, "traceback": 124, "assertionerror": [124, 771, 811], "shrink": 124, "prescrib": 124, "behavior": [124, 130, 136, 153, 399, 627, 630, 632, 635, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "identifi": 124, "closest": [124, 273, 300, 399, 475, 478, 515, 518, 520, 523, 637, 640, 678, 682], "checkout": 124, "scratch": 124, "databas": 124, "therebi": 124, "debug": [124, 130, 139], "event": [124, 1099], "test_gelu": 124, "test_fil": 124, "brief": 124, "phase": [124, 153], "reus": 124, "notabl": 124, "displai": [124, 130, 139], "verbos": [124, 136, 1099, 1147], "newer": 124, "max_exampl": 124, "impact": [124, 140], "deadlin": 124, "weird": 124, "verifi": [124, 131, 132, 138, 1099, 1105], "truth": [124, 399, 495, 498, 525, 528, 530, 533, 550, 553, 555, 558, 617, 620], "opt": [124, 127, 133, 138], "defer": [124, 126, 129, 130, 131, 132, 133], "suffic": [124, 128], "catch": [124, 683, 704], "systemat": 124, "safeguard": 124, "inabl": 124, "lax": [125, 153], "unsupported_dtyp": [125, 131], "bfloat16": [125, 131], "thu": [125, 399, 465, 468, 627, 630, 632, 635, 829, 844, 846], "categoris": 125, "notic": [125, 138], "mathematical_funct": 125, "arithmetic_oper": 125, "same_kind": 125, "subok": 125, "mathemat": [125, 202, 399, 415, 418, 435, 438, 510, 513, 607, 610, 829, 895, 897], "slightli": [125, 130, 136, 140], "recov": 125, "obtain": 125, "trigonometric_funct": 125, "pointwise_op": 125, "concaten": [125, 136, 139, 683, 710, 917, 923, 926, 1099], "manipulation_routin": 125, "joining_arrai": 125, "indexing_slicing_joining_mutating_op": 125, "cat": [125, 136, 141], "grasp": 125, "youtub": 125, "categor": [126, 132], "mutual": [126, 130], "constitut": [126, 136, 1055, 1076, 1079, 1084, 1087], "venn": 126, "diagram": 126, "light": [126, 153], "log_pr": [126, 130, 133], "array_arg": 126, "typic": 126, "whatsoev": [126, 130], "commonli": [126, 1055, 1076, 1079, 1084, 1087], "outsid": [126, 132, 134, 136, 138, 141, 917, 918, 921, 962, 965], "deal": [126, 153], "concurr": [126, 130], "modif": 126, "group": [126, 130], "get_all_arrays_on_dev": 126, "nested_map": [126, 982], "index_nest": [126, 982], "implicit_backend": 127, "unless": [127, 132, 133, 153, 399, 607, 610, 683, 738], "__dict__": [127, 136, 138], "ivy_original_dict": [127, 136], "unmodifi": [127, 131], "fallback": 127, "freedom": [127, 1055, 1076, 1079, 1084, 1087], "recommend": [127, 399, 590, 593, 595, 598, 632, 635, 1055, 1064, 1067], "achiev": [128, 134, 139, 141], "topic": [128, 138], "_data": [129, 138], "organiz": [129, 130], "inherit": [129, 130, 138], "bear": [129, 130, 131], "necessarili": [129, 130], "although": [129, 130], "underpin": [129, 130, 136], "programmat": [129, 130], "backup": [129, 130], "accident": [129, 130], "absent": [129, 130], "perk": [129, 130], "auto": [129, 130, 139], "throw": [129, 138], "imposs": 129, "coupl": [129, 130, 138, 140], "anywai": 129, "secondli": [129, 131], "easier": 129, "five": [130, 139], "decis": [130, 136, 138], "arbitrarili": [130, 139], "__repr__": 130, "control": [130, 131, 133, 138, 139, 152], "__getattr__": 130, "underli": [130, 399, 445, 448, 460, 463, 470, 473, 600, 603], "__setattr__": 130, "__contains__": 130, "__getstate__": 130, "__setstate__": 130, "unpickl": 130, "expand": [130, 683, 710, 917, 931, 934], "counterpart": 130, "irrespect": [130, 133, 138, 273, 280, 283], "presenc": [130, 133], "implicitli": 130, "intuit": [130, 139, 140], "chronolog": 130, "had": [130, 133], "sequenti": [130, 140], "flow": [130, 152], "implic": 130, "eager": [130, 153], "children": 130, "shallowest": 130, "deepest": 130, "22": [130, 399, 470, 473, 829, 841, 843, 867, 869, 982, 999, 1018, 1022, 1055, 1056, 1059], "dy": [130, 771, 782, 783], "dx": [130, 771, 782, 783], "autograd": [130, 153], "grad": [130, 139, 140, 141, 1099, 1137, 1141], "redund": 130, "num_head": [130, 812, 827, 1121, 1132], "mask": [130, 812, 827, 828], "to_q_fn": [130, 812, 827], "to_kv_fn": [130, 812, 827], "to_out_fn": [130, 133, 812, 827], "to_q_v": [130, 812, 827], "to_kv_v": [130, 812, 827], "to_out_v": [130, 812, 827], "measur": [130, 812, 827, 1121, 1132], "dot": [130, 812, 827, 828, 829, 886, 888, 892, 894, 1121, 1132], "all_dtyp": 131, "all_numeric_dtyp": 131, "all_int_dtyp": 131, "all_float_dtyp": 131, "fall": [131, 135, 1099, 1133, 1134, 1137, 1141], "thirdli": 131, "native_float32": [131, 273, 365], "importantli": [131, 138, 141, 152], "arguabl": [131, 132], "compound": 131, "overflow": [131, 399, 415, 418, 1055, 1080, 1083], "arr": [131, 132], "settabl": [131, 132], "mx": [131, 132, 133, 1099], "nd": [131, 132, 133, 136, 141, 1099], "deleg": 131, "shape_to_tupl": 131, "idx": [132, 138, 683, 689], "tpu": [132, 366, 387, 396], "aliv": [132, 366, 379, 383, 385, 683, 717, 737, 739], "memori": [132, 133, 151, 153, 366, 371, 384, 389, 395, 398, 812, 826, 1099], "dual": 132, "thrown": [132, 153, 683, 729], "rare": [132, 153], "program": 133, "strictli": 133, "ration": 133, "speak": 133, "subtli": 133, "ensure_in_backend": [133, 683, 729], "x_nativ": 133, "val_n": 133, "assign": [133, 134, 138], "elif": 133, "unspecifi": [133, 399, 627, 630, 632, 635, 829, 844, 846, 917, 962, 965], "predominantli": [133, 152], "altern": [133, 139], "_wrap_fn": 133, "maxim": [133, 136], "inner": [133, 138, 829, 844, 846, 853, 856, 978, 979, 980, 981], "third": [133, 153, 829, 880, 882, 1023, 1024, 1028], "leverag": 133, "equival": [133, 139, 141, 203, 204, 205, 399, 465, 468, 590, 593, 595, 598, 632, 635, 829, 861, 863, 870, 872, 877, 879, 895, 897], "input_arrai": 133, "clean": [134, 136, 137, 139], "flake8": 134, "undefin": 134, "yield": [134, 1018, 1022], "handler": [134, 135, 137, 141, 1099], "liter": [134, 829, 895, 897], "carri": 134, "star": 134, "byte": 134, "notimpl": 134, "notimplementederror": 134, "unsuccess": 134, "exce": [134, 399, 606], "black": 134, "disobei": 134, "successfulli": 134, "comparison": 134, "sound": 135, "higher": [135, 136, 141, 153, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "fledg": [136, 137], "syntact": [136, 141], "clip_by_valu": [136, 141], "clamp": [136, 141], "fit": [136, 917, 943, 946], "construct": [136, 137, 140, 141, 917, 970, 973, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144], "power_seq": 136, "resid": [136, 140], "ml_framework": [136, 141, 203, 204, 205], "current_framework": [136, 141], "furthermor": 136, "framework_handl": 136, "face": 136, "cprint": [136, 1146], "framework_stack": 136, "_determine_framework_from_arg": 136, "valueerror": [136, 917, 958, 961], "get_framework": 136, "neither": [136, 399, 415, 418, 607, 610, 771, 811], "illustr": [136, 152], "un": [136, 273, 329], "nn": [136, 141, 203, 237, 240, 1099], "init_h": [136, 812, 826], "init_c": [136, 812, 826], "kernel": [136, 153, 812, 826], "recurrent_kernel": [136, 812, 826], "bia": [136, 140, 812, 825, 826, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131], "recurrent_bia": [136, 812, 826], "x_shape": 136, "batch_shap": [136, 138, 141, 203, 217, 218, 683, 738, 812, 826, 827, 828, 829, 898, 900, 1006, 1007, 1121, 1130], "timestep": [136, 812, 826, 1121, 1130], "input_channel": [136, 140, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1131], "x_flat": 136, "wi": 136, "wi_x": 136, "wii_x": 136, "wif_x": 136, "wig_x": 136, "wio_x": 136, "recurr": [136, 812, 826], "wh": 136, "lstm": [136, 812, 826, 1121], "ht": 136, "ct": 136, "hts_list": 136, "unrol": [136, 139, 812, 826], "wii_xt": 136, "wif_xt": 136, "wig_xt": 136, "wio_xt": 136, "zip": 136, "htm1": 136, "ctm1": 136, "wh_htm1": 136, "whi_htm1": 136, "whf_htm1": 136, "whg_htm1": 136, "who_htm1": 136, "ft": 136, "gt": 136, "ot": 136, "offici": 136, "reliabl": 136, "sacrific": 136, "hear": 136, "virtu": 136, "pure_ivi": 136, "reduce_mean": [136, 139, 140, 141, 1099], "reduce_sum": [136, 1099], "reduce_var": 136, "compile_graph": [136, 141], "pure_torch": 136, "backbon": [136, 139], "_layer": 136, "super": [136, 139, 140, 141], "random_unifrom": 136, "unclean": 136, "wx": 136, "temp": 136, "torchscript": 136, "example_input": [136, 200, 201], "static_argnum": [136, 200, 201], "static_argnam": [136, 200, 201], "jit": [136, 153], "frontend": 137, "primit": [137, 153], "hierarch": [137, 139, 140], "arraywithlinalg": 138, "arraywithlog": 138, "arraywithmath": 138, "arraywithmeta": 138, "arraywithreduct": 138, "_shape": 138, "_size": 138, "functool": 138, "mul": 138, "len": [138, 141, 203, 237, 240], "_dtype": 138, "_devic": 138, "_dev_str": 138, "_pre_repr": 138, "_post_repr": 138, "answer": [138, 153], "consol": 138, "typeerror": 138, "immut": 138, "behav": 138, "claim": 138, "truli": 138, "_native_wrapp": 138, "attributeerror": 138, "genuin": 138, "some_method": 138, "similarli": [138, 203, 237, 240], "rewritten": 138, "__pow__": 138, "strang": 138, "enforc": 138, "appear": [138, 917, 931, 934], "_wrap_method": 138, "func_wrapp": [138, 154, 155, 156, 157, 158, 159, 160, 161, 162], "__name__": 138, "non_wrapped_method": 138, "_method_wrap": 138, "native_arg": 138, "native_kwarg": 138, "inner_fn": 138, "whist": 138, "unwrap": 138, "transit": 138, "needlessli": 138, "randn": 138, "_unwrap_method": 138, "method_wrap": 138, "compartment": 138, "public": [138, 683, 699], "newshap": 138, "new_shap": 138, "tidi": 138, "shorter": 138, "crystal": 138, "ton": 139, "ado": [139, 140], "incred": [139, 153], "hash": 139, "soup": 139, "walk": [139, 140], "dct": 139, "cnt": 139, "combo": [139, 1099, 1105], "hold": [139, 683, 741, 742], "1000": [139, 399, 657, 660], "uda": 139, "3333": 139, "6667": 139, "178": 139, "new_weight": 139, "0600": 139, "3100": 139, "2400": 139, "6900": 139, "delimit": 139, "autocomplet": 139, "midwai": 139, "agent": 139, "total_spe": 139, "total_height": 139, "total_width": 139, "ag": 139, "tot": 139, "total_": 139, "total_h": 139, "dir": 139, "cnt0": 139, "cnt1": 139, "diff_0": 139, "diff_1": 139, "config0": 139, "config1": 139, "Not": [139, 140, 153, 202], "helper": 139, "decod": 139, "l0": 139, "l1": [139, 829, 895, 897], "depth": [139, 140, 141, 152, 683, 723, 738, 982, 994, 1133, 1134], "clearer": 139, "truncat": 139, "decoder__l0": 139, "decoder__l1": 139, "encoder__l0": 139, "encoder__l1": 139, "height": 139, "l0__b": 139, "l0__w": 139, "l1__b": 139, "l1__w": 139, "printabl": 139, "obviou": 139, "foresight": 139, "untidili": 139, "update_ag": 139, "normalize_img": 139, "img": 139, "img_max": 139, "reduce_max": [139, 1099], "img_min": 139, "reduce_min": [139, 1099], "img_rang": 139, "agent_posit": 139, "agent_veloc": 139, "agent_cam_front_rgb": 139, "agent_cam_front_depth": 139, "agent_cam_rear_rgb": 139, "agent_cam_rear_depth": 139, "agent_cam_lidar": 139, "cleaner": 139, "camera": 139, "front_rgb": 139, "front_depth": 139, "rear_rgb": 139, "rear_depth": 139, "lidar": 139, "rgb": 139, "rear": 139, "veloc": 139, "cam": 139, "cam_max": 139, "cam_min": 139, "cam_rang": 139, "Of": 139, "ideal": 139, "perman": 139, "afterward": 139, "thread": 139, "incorpor": 139, "pretti": 139, "dataload": [139, 151, 1099], "_cnt": 139, "img_": 139, "_dataset_s": 139, "_batch_siz": 139, "_count": [139, 140], "__next__": 139, "filenam": 139, "img_fnam": 139, "fname": 139, "loaded_img": 139, "cv2": 139, "imread": 139, "loader": [139, 153], "batch_slic": 139, "mymodel": [139, 1099], "linear0": [139, 140, 1099], "linear1": [139, 140, 1099], "x_in": [139, 140, 141, 1099], "loss_fn": [139, 140, 141, 1099], "0145": 139, "grad_fn": 139, "addbackward0": 139, "_create_vari": 140, "output_channel": [140, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1131], "with_bia": [140, 1121, 1131], "_input_channel": 140, "_output_channel": 140, "_w_shape": 140, "_b_shape": 140, "_with_bia": 140, "8979": 140, "3198": 140, "0196": 140, "3126": 140, "3717": 140, "9687": 140, "6958": 140, "5122": 140, "3902": 140, "8800": 140, "5613": 140, "1982": 140, "nightmar": 140, "overcom": 140, "fc": 140, "9563": 140, "v0": 140, "v1": 140, "6440": 140, "key0": 140, "1823": 140, "8075": 140, "linear3": 140, "v2": 140, "2346": 140, "counter": 140, "hidden": [140, 812, 826, 1121, 1130], "fed": [140, 366, 389], "1300": 140, "decoupl": 140, "scheme": 140, "weight_initi": [140, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131], "glorotuniform": [140, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131], "bias_initi": [140, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131], "_w_init": 140, "_b_init": 140, "create_vari": [140, 1112], "var_shap": [140, 1112], "fan_out": [140, 1112], "fan_in": [140, 1112], "fan_mod": [140, 1112], "fan_sum": 140, "slight": 140, "misnom": 140, "saw": 140, "vanilla": [140, 978, 980], "descent": [140, 771, 785, 787, 1137, 1142], "lar": [140, 771, 794, 796, 798, 800, 1137], "lamb": [140, 771, 794, 796, 1137], "compile_on_next_step": [140, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142], "_beta1": 140, "_beta2": 140, "_epsilon": 140, "_mw": 140, "_vw": 140, "_first_pass": 140, "_should_compil": 140, "_step": [140, 1137, 1141], "new_v": 140, "_lr": 140, "isinst": [140, 141, 683, 757], "_inplac": 140, "_stop_gradi": 140, "set_stat": [140, 1137, 1138, 1139, 1140, 1141, 1142], "pre": [141, 153], "captur": 141, "sparse_funct": 141, "num_class": 141, "num_dim": 141, "new_axi": 141, "_linear": 141, "to_backend": 141, "jax_graph": 141, "to_ivy_modul": [141, 1110], "thinli": 141, "whilst": 141, "to_haiku_modul": 141, "hk": 141, "loss_fn_t": 141, "transform": [141, 152, 812, 824, 825], "without_apply_rng": 141, "rng": 141, "prngkei": 141, "init": 141, "update_rul": 141, "tree_multimap": 141, "vision": [151, 1099], "robot": [151, 1099], "focus": 152, "perfect": 152, "3d": [152, 1121, 1126, 1127], "differenti": 152, "demo": [152, 1099], "orient": 152, "pose": 152, "euler": [152, 202], "quaternion": 152, "rotat": 152, "ivy_mech": 152, "target_facing_rotation_matrix": 152, "polar_to_cartesian_coord": 152, "ordin": [152, 829, 877, 879], "warp": 152, "optic": 152, "voxel": 152, "ivy_vis": 152, "coords_to_voxel_grid": 152, "render_pixel_coord": 152, "neural": [152, 812, 1099, 1107, 1121], "radianc": 152, "nerf": 152, "trajectori": 152, "motion": 152, "plan": [152, 1099], "mobil": 152, "ivy_robot": 152, "sample_spline_path": 152, "rigidmobil": 152, "sample_bodi": 152, "drone": 152, "sample_link": 152, "openai": 152, "swimmer": 152, "cumul": [152, 683, 701, 702], "reward": 152, "supervis": 152, "reinforc": 152, "door": [152, 153], "intersect": 152, "cartpol": 152, "mountain_car": 152, "pendulum": 152, "reacher": 152, "condit": [152, 200, 201, 982, 992, 993, 1018, 1022], "learnt": 152, "ture": 152, "ntm": 152, "egospher": 152, "spatial": 152, "esm": 152, "ivy_memori": 152, "egocentr": 152, "room": 152, "inspir": 152, "doubt": 153, "grate": 153, "probe": 153, "undergo": 153, "remark": 153, "surpris": 153, "lock": 153, "contunu": 153, "minor": 153, "xla": 153, "buffer": 153, "gold": 153, "dex": 153, "scan": 153, "tricki": 153, "predictor": 153, "tight": 153, "driver": 153, "schedul": 153, "dispatch": 153, "Will": 153, "ast": 153, "dynamic": 153, "cond": 153, "jacobian": 153, "checkpoint": 153, "autodiff": 153, "shine": 153, "merci": 153, "superset": 153, "cluster": 153, "compet": 153, "paradigm": 153, "parallelis": 153, "spmd": 153, "mixtur": [153, 771, 773, 776], "expert": 153, "sophist": 153, "depart": 153, "routin": 153, "hundr": 153, "thousand": 153, "deepli": [153, 982, 984], "broadli": 153, "heavili": 153, "supplementari": 153, "Is": 153, "reusabl": 153, "fanci": 153, "fusion": 153, "lose": 153, "vmap": 153, "pmap": 153, "overhead": 153, "ineffici": 153, "eventu": 153, "supplement": 153, "backdoor": 153, "callback": 153, "record": 153, "metric": 153, "somewhat": 153, "outsourc": 153, "inputs_to_ivy_arrai": 154, "gaussian": [164, 165, 168], "88": [164, 170, 173, 399, 470, 473, 829, 867, 869, 1055, 1056, 1059], "214": [164, 180, 183], "0768": [164, 185, 188], "231": [164, 185, 188], "693": [164, 185, 188, 399, 425, 428, 901, 912, 915], "49": [164, 185, 188, 399, 657, 660, 1055, 1056, 1059], "363": [164, 185, 188], "array_method": [165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 197, 207, 208, 212, 213, 220, 221, 226, 227, 237, 238, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 280, 281, 285, 286, 290, 291, 295, 296, 307, 308, 313, 314, 324, 325, 330, 331, 335, 336, 340, 341, 345, 346, 351, 352, 373, 374, 390, 392, 400, 401, 405, 406, 410, 411, 415, 416, 420, 421, 425, 426, 430, 431, 435, 436, 440, 441, 445, 446, 450, 451, 455, 456, 460, 461, 465, 466, 470, 471, 475, 476, 480, 481, 485, 486, 490, 491, 495, 496, 500, 501, 505, 506, 510, 511, 515, 516, 520, 521, 525, 526, 530, 531, 535, 536, 540, 541, 545, 546, 550, 551, 555, 556, 560, 561, 565, 566, 570, 571, 575, 576, 580, 581, 585, 586, 590, 591, 595, 596, 600, 601, 607, 608, 612, 613, 617, 618, 622, 623, 627, 628, 632, 633, 637, 638, 642, 643, 647, 648, 652, 653, 657, 658, 662, 663, 667, 669, 672, 674, 678, 680, 684, 685, 712, 713, 759, 761, 773, 774, 789, 790, 819, 820, 830, 831, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 902, 903, 907, 908, 912, 913, 918, 919, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 948, 949, 952, 953, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 1001, 1002, 1024, 1026, 1029, 1031, 1034, 1036, 1039, 1041, 1045, 1046, 1050, 1051, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1089, 1090, 1094, 1095], "container_method": [165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 299, 302, 304, 307, 309, 311, 313, 315, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 334, 335, 337, 339, 340, 342, 344, 345, 347, 349, 351, 353, 355, 373, 375, 377, 390, 391, 393, 400, 402, 404, 405, 407, 409, 410, 412, 414, 415, 417, 419, 420, 422, 424, 425, 427, 429, 430, 432, 434, 435, 437, 439, 440, 442, 444, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 462, 464, 465, 467, 469, 470, 472, 474, 475, 477, 479, 480, 482, 484, 485, 487, 489, 490, 492, 494, 495, 497, 499, 500, 502, 504, 505, 507, 509, 510, 512, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 535, 537, 539, 540, 542, 544, 545, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 668, 670, 672, 673, 675, 678, 679, 681, 684, 686, 688, 696, 697, 712, 714, 716, 759, 760, 762, 773, 775, 777, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 819, 821, 823, 830, 832, 834, 853, 855, 902, 904, 906, 907, 909, 911, 912, 914, 916, 918, 920, 922, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 1001, 1003, 1005, 1008, 1010, 1012, 1013, 1015, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1040, 1042, 1045, 1047, 1049, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1096, 1098], "faster": [200, 201], "invoc": [200, 201], "718281828459045": 202, "newaxi": 202, "alia": 202, "pi": 202, "141592653589793": 202, "chosen": [203, 204, 205, 399, 435, 438, 1018, 1022], "distanc": [203, 204, 205], "adjac": [203, 204, 205], "creation_funct": [203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "elsewher": [203, 217, 218, 1018, 1022], "row": [203, 217, 218, 829, 877, 879, 880, 882, 1006, 1007, 1018, 1021], "column": [203, 217, 218, 829, 844, 846, 873, 875, 877, 879, 880, 882], "__dlpack__": [203, 220, 223, 366, 390, 394], "interchang": [203, 220, 223, 917, 966, 969], "cartesian": [203, 237, 240], "ij": [203, 237, 240, 1055, 1056, 1059], "ni": [203, 237, 240], "xi": [203, 237, 240], "n1": [203, 237, 240], "n2": [203, 237, 240], "n3": [203, 237, 240], "xv": [203, 237, 240], "yv": [203, 237, 240], "y1": [203, 268, 272], "y2": [203, 268, 272], "x3": [203, 268, 272, 366, 383], "y3": [203, 268, 272], "intdtyp": [203, 268, 272, 273, 305, 345, 348], "defaultdtyp": [273, 274], "defaultfloatdtyp": [273, 275], "defaultintdtyp": [273, 276], "defaultuintdtyp": [273, 277], "uint_dtyp": [273, 306, 359], "incompat": [273, 290, 293], "data_type_funct": [273, 295, 298, 313, 316, 324, 327], "floatdtyp": [273, 302, 303], "int_dtyp": [273, 305, 358], "uint": [273, 306, 345, 348, 359, 364], "uintdtyp": [273, 306, 345, 348, 359, 364], "defualt": [273, 306], "4294967346": [273, 306], "followng": [273, 313, 316], "occupi": [273, 313, 316, 324, 327, 683, 741, 742], "ep": [273, 313, 316, 829, 861, 863, 870, 872], "smallest_norm": [273, 313, 316], "4028235e": [273, 313, 316], "7976931348623157e": [273, 313, 316], "55040e": [273, 313, 316], "encapsul": [273, 324, 327], "2147483648": [273, 324, 327], "2147483647": [273, 324, 327], "18446744073709551615": [273, 324, 327], "9223372036854775808": [273, 324, 327], "9223372036854775807": [273, 324, 327], "127": [273, 324, 327], "84": [273, 324, 327, 366, 378, 829, 867, 869, 1055, 1056, 1059], "314": [273, 324, 327], "32768": [273, 324, 327], "32767": [273, 324, 327], "1800": [273, 324, 327], "65535": [273, 324, 327], "4294967295": [273, 324, 327], "109": [273, 324, 327], "8400": [273, 324, 327], "119": [273, 324, 327], "122": [273, 324, 327, 399, 485, 488], "type1": [273, 350], "type2": [273, 350], "default_dtype_stack": [273, 356], "native_int32": [273, 356, 365], "native_bool": [273, 356, 365], "native_uint64": [273, 356, 365], "native_float64": [273, 356, 365], "ret1": [273, 360], "ret2": [273, 360], "reset": [273, 364, 366, 397, 683, 766, 767, 768], "native_float16": [273, 365], "native_int8": [273, 365], "native_int16": [273, 365], "native_int64": [273, 365], "native_uint8": [273, 365], "noinspect": [274, 275, 276, 367, 772], "pyshadowingnam": [274, 275, 276, 367, 772], "defaultdevic": [366, 367], "__enter__": 366, "_dev": 366, "__exit__": 366, "exc_typ": 366, "exc_val": 366, "exc_tb": 366, "exit": 366, "profil": 366, "save_dir": [366, 368], "93": [366, 378, 399, 657, 660], "139740789224448": [366, 379], "physic": [366, 381], "x4": [366, 383], "process_specif": [366, 384, 398], "percentag": [366, 384], "ram": [366, 384, 395, 398], "attr_onli": [366, 385], "chunk": [366, 387, 388, 389], "max_chunk_s": [366, 389], "chunk_siz": [366, 389], "input_ax": [366, 389], "output_ax": [366, 389], "feed": [366, 389], "fist": [366, 389], "caveat": [366, 390, 394], "portabl": [366, 390, 394, 1099], "gb": [366, 395, 398], "66700032": [366, 395], "589934592": [366, 395], "magnitud": [399, 400, 403, 415, 418, 607, 610, 829, 880, 882, 883, 885], "princip": [399, 405, 408, 420, 423, 430, 433], "x1_i": [399, 415, 418, 435, 438, 445, 448, 455, 458, 460, 463, 465, 468, 470, 473, 490, 493, 495, 498, 520, 523, 525, 528, 530, 533, 550, 553, 555, 558, 580, 583, 585, 588, 595, 598, 600, 603, 607, 610, 617, 620, 627, 630, 632, 635, 667, 671], "nor": [399, 415, 418, 607, 610, 771, 811], "nearest": [399, 415, 418, 607, 610, 637, 640], "2019": [399, 415, 418, 510, 513, 607, 610], "commut": [399, 415, 418], "524": [399, 420, 423], "644": [399, 420, 423], "201": [399, 420, 423], "305": [399, 420, 423], "412": [399, 420, 423], "44": [399, 425, 428, 637, 640, 657, 660, 662, 665, 829, 867, 869, 1018, 1022, 1055, 1056, 1059], "809": [399, 425, 428], "569": [399, 425, 428], "733": [399, 425, 428], "68": [399, 425, 428, 435, 438, 1000, 1001, 1004], "notat": [399, 435, 438, 1055, 1056, 1059], "denot": [399, 435, 438, 771, 811], "pair": [399, 435, 438, 812, 828, 829, 835, 837], "quadrant": [399, 435, 438], "3\u03c0": [399, 435, 438], "464": [399, 435, 438], "588": [399, 435, 438], "719": [399, 435, 438], "197": [399, 435, 438], "549": [399, 440, 443], "bitwis": [399, 445, 448, 460, 463, 470, 473, 600, 603], "invert": [399, 450, 453], "arithmet": [399, 465, 468, 1055, 1064, 1067], "propag": [399, 465, 468, 1055, 1060, 1063, 1064, 1067, 1068, 1071, 1076, 1079, 1080, 1083, 1084, 1087], "lh": [399, 465, 468], "rh": [399, 465, 468], "xor": [399, 470, 473, 600, 603], "78": [399, 470, 473, 642, 645, 829, 867, 869, 1055, 1056, 1059], "91": [399, 470, 473, 829, 867, 869, 1055, 1056, 1059], "66": [399, 470, 473, 829, 867, 869, 1055, 1056, 1059], "77": [399, 470, 473, 829, 867, 869, 1055, 1056, 1059], "79": [399, 470, 473, 490, 493], "26": [399, 470, 473, 490, 493, 652, 655, 771, 773, 776, 812, 819, 822, 829, 841, 843, 867, 869, 886, 888, 1055, 1056, 1059], "27": [399, 470, 473, 485, 488, 652, 655, 657, 660, 812, 828, 829, 867, 869, 1055, 1056, 1059], "74": [399, 470, 473], "59": [399, 470, 473], "654": [399, 480, 483], "368": [399, 485, 488], "670": [399, 485, 488], "202": [399, 485, 488], "548": [399, 485, 488, 652, 655], "1490": [399, 485, 488], "667": [399, 490, 493, 1023, 1024, 1028], "698": [399, 490, 493], "72": [399, 505, 508, 510, 513, 771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "accur": [399, 510, 513], "fdlibm": [399, 510, 513], "compliant": [399, 510, 513, 590, 593, 595, 598, 1055, 1060, 1063, 1064, 1067, 1068, 1071], "85e": [399, 510, 513], "632": [399, 510, 513], "20e": [399, 510, 513], "72e": [399, 510, 513], "00": [399, 510, 513], "22000": [399, 510, 513], "442000": [399, 510, 513], "greatest": [399, 515, 518, 520, 523], "threshold": [399, 605, 606], "y_i": [399, 612, 615], "versu": [399, 627, 630], "odd": [399, 627, 630], "modulu": [399, 632, 635], "primarili": [399, 632, 635], "5654": [399, 637, 640], "034": [399, 637, 640], "433": [399, 637, 640], "343": [399, 637, 640], "30": [399, 637, 640, 829, 867, 869, 1055, 1056, 1059, 1112, 1118], "124": [399, 642, 645], "46": [399, 642, 645], "932": [399, 647, 650], "746": [399, 647, 650], "443": [399, 647, 650], "657": [399, 647, 650], "253": [399, 652, 655], "indistinguish": [399, 657, 660], "infinit": [399, 657, 660], "83": [399, 657, 660], "32455532": [399, 657, 660], "89897949": [399, 657, 660], "50": [399, 657, 660, 829, 867, 869, 1018, 1021, 1055, 1056, 1059], "31": [399, 657, 660], "169": [399, 657, 660], "47": [399, 657, 660], "09": [399, 662, 665, 812, 828], "546": [399, 672, 676], "842": [399, 672, 676], "916": [399, 672, 676, 901, 902, 905], "996": [399, 672, 676], "328": [399, 672, 676], "462": [399, 677], "604": [399, 677], "984": [399, 677], "997": [399, 677], "decim": [399, 678, 682], "inspect": [683, 689, 1103, 1104], "downscal": [683, 695, 696, 698], "60": [683, 701, 829, 867, 869, 1055, 1056, 1059], "default_v": [683, 704], "catch_except": [683, 704], "rev": [683, 704], "with_cal": [683, 704], "arrang": [683, 705], "mod": [683, 709], "max_freq": [683, 710], "num_band": [683, 710], "fourier": [683, 710], "band": [683, 710], "linearli": [683, 710, 829, 877, 879], "oppos": [683, 710], "geometr": [683, 710], "array_mod": [683, 718], "seen_set": [683, 723], "local_set": [683, 723], "decrement": [683, 727], "allow_dupl": [683, 735], "forkserv": [683, 736], "spawn": [683, 736], "hot": [683, 738], "scatter": [683, 738, 741, 742], "overrid": [683, 738], "tmp_dr": [683, 749], "temporari": [683, 749], "min_denomin": [683, 752], "stabil": [683, 752, 753, 1044, 1045, 1048, 1050, 1053], "_min_denomin": [683, 752], "min_bas": [683, 753], "100000023841858": [683, 757], "200000047683716": [683, 757], "299999952316284": [683, 757], "400000095367432": [683, 757], "599999904632568": [683, 757], "gradienttrack": [771, 772], "en": [771, 773, 776, 778, 780], "wikipedia": [771, 773, 776, 778, 780], "wiki": [771, 773, 776, 778, 780], "stochastic_gradient_desc": [771, 773, 776, 778, 780], "004": [771, 773, 776], "009": [771, 773, 776], "86": [771, 773, 776], "28": [771, 773, 776, 812, 815, 818, 819, 822, 829, 867, 869, 1055, 1056, 1059], "0125": [771, 773, 776], "601": [771, 773, 776], "025": [771, 773, 776], "992": [771, 773, 776], "209": [771, 773, 776, 1023, 1024, 1028], "271": [771, 773, 776], "0717": [771, 773, 776], "142": [771, 773, 776], "182": [771, 773, 776], "624": [771, 773, 776, 1006, 1012, 1014], "744": [771, 773, 776], "626": [771, 773, 776], "65": [771, 773, 776, 829, 867, 869, 1055, 1056, 1059], "024": [771, 773, 776], "096": [771, 773, 776], "216": [771, 773, 776], "384": [771, 773, 776], "rate": [771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 978, 979, 980, 981, 1121, 1132, 1137, 1138, 1139, 1140, 1141, 1142], "ws_new": [771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "retain": [771, 782, 783], "trust": [771, 794, 796, 1137, 1139], "ratio": [771, 794, 796, 1137, 1139], "decai": [771, 794, 796, 798, 800, 1137, 1139, 1140], "layerwis": [771, 798, 800], "with_grads_stack": [771, 811], "nwc": [812, 813, 814, 1121, 1122, 1123], "d_out": [812, 813, 814, 815, 816, 817, 818], "ncw": [812, 813, 814, 1121, 1122, 1123], "wio": [812, 813], "output_shap": [812, 814, 816, 818, 1121, 1123, 1125, 1127], "hwio": [812, 815], "unequ": [812, 815], "unsqueez": [812, 815, 819, 822], "ndhwc": [812, 817, 818, 1121, 1126, 1127], "volum": [812, 817], "fd": [812, 817, 818], "ncdhw": [812, 817, 818, 1121, 1126, 1127], "dhwio": [812, 817], "258": [812, 818], "depthwis": [812, 819, 822, 1121, 1128], "hwi": [812, 819, 822], "prob": [812, 824, 1006, 1007, 1121, 1129], "randomli": [812, 824, 1121, 1129], "bernoulli": [812, 824], "out_featur": [812, 824, 825], "incom": [812, 825], "outer_batch_shap": [812, 825], "inner_batch_shap": [812, 825], "in_featur": [812, 825], "cell": [812, 826, 1121, 1130], "num_queri": [812, 827, 828], "x_feat_dim": [812, 827], "num_kei": [812, 827, 828], "cont_feat_dim": [812, 827], "numhead": [812, 827], "feat_dim": [812, 827, 828], "out_feat_dim": [812, 827], "score": [812, 828], "decomposit": [829, 830, 833, 873, 875, 880, 882], "vif": [829, 835, 837], "92": [829, 838, 840], "293": [829, 838, 840], "46997": [829, 838, 840], "eigendecomposit": [829, 844, 846], "qlq\u1d40": [829, 844, 846], "orthogon": [829, 844, 846], "eig": [829, 844, 846], "eigenvalu": [829, 844, 846, 847, 849], "eigenvector": [829, 844, 846], "prepend": [829, 853, 856], "singular": [829, 861, 863, 870, 872, 880, 882, 883, 885], "toler": [829, 861, 863, 870, 872], "largest_singular_valu": [829, 861, 863, 870, 872], "array_lik": [829, 867, 869], "105": [829, 867, 869, 901, 902, 905], "112": [829, 867, 869, 1055, 1056, 1059], "104": [829, 867, 869, 1055, 1056, 1059], "120": [829, 867, 869], "moor": [829, 870, 872], "penros": [829, 870, 872], "pseudo": [829, 870, 872], "orthonorm": [829, 873, 875, 880, 882], "2d": [829, 876, 1121, 1124, 1125, 1128], "logdet": [829, 876], "coeffici": [829, 877, 879], "usvh": [829, 880, 882], "vh": [829, 880, 882], "hermitian": [829, 880, 882], "et": [829, 880, 882], "cetera": [829, 880, 882], "adjoint": [829, 880, 882], "reconstruct": [829, 880, 882, 1023, 1024, 1028, 1034, 1038], "reconstructed_x": [829, 880, 882], "contract": [829, 886, 888, 1055, 1056, 1059], "doubl": [829, 886, 888], "manhattan": [829, 895, 897], "l2": [829, 895, 897], "euclidean": [829, 895, 897], "mathbf": [829, 898, 900], "mathbb": [829, 898, 900], "skew": [829, 898, 900], "discret": [901, 907, 910], "35667497": [901, 907, 910], "793291": [901, 912, 915], "512926": [901, 912, 915], "before_1": [917, 927, 930, 974, 977], "after_1": [917, 927, 930, 974, 977], "before_n": [917, 927, 930, 974, 977], "after_n": [917, 927, 930, 974, 977], "insert": [917, 931, 934, 982, 987, 1018, 1019], "manipulation_funct": [917, 931, 934], "reorder": [917, 935, 938], "permut": [917, 939, 942, 966, 969], "repetit": [917, 943, 946, 970, 973], "famili": [917, 962, 965], "intxx": [917, 962, 965], "floatxx": [917, 962, 965], "fomaml_step": 978, "inner_cost_fn": [978, 979, 980], "outer_cost_fn": [978, 979, 980], "inner_grad_step": [978, 979, 980, 981], "inner_learning_r": [978, 979, 980, 981], "inner_optimization_step": [978, 979, 980, 981], "inner_batch_fn": [978, 979, 980], "outer_batch_fn": [978, 979, 980], "average_across_step": [978, 979, 980], "inner_v": [978, 979, 980], "keep_inner_v": [978, 979, 980], "outer_v": [978, 979, 980], "keep_outer_v": [978, 979, 980], "return_inner_v": [978, 979, 980, 981], "num_task": [978, 979, 980, 981], "maml": [978, 979, 980], "recev": [978, 979, 980], "0x7effa4e95700": [978, 979, 980, 981], "maml_step": 978, "rece": [978, 980], "reptile_step": 978, "cost_fn": [978, 981], "reptil": [978, 981], "receivng": [978, 981], "all_nested_indic": 982, "include_nest": [982, 983], "_index": [982, 983, 993], "_base": [982, 983, 992, 993], "copy_nest": 982, "to_mut": [982, 984, 994], "mutabl": [982, 984, 994], "insert_into_nest_at_index": 982, "insert_into_nest_at_indic": 982, "map_nest_at_index": 982, "map_nest_at_indic": 982, "multi_index_nest": 982, "nested_ani": 982, "check_nest": [982, 992, 993], "conditon": [982, 992, 993], "nested_indices_wher": 982, "stop_after_n_found": [982, 993], "_depth": [982, 994], "_tuple_check_fn": [982, 994], "_list_check_fn": [982, 994], "_dict_check_fn": [982, 994], "nested_multi_map": 982, "nest0": [982, 995], "ivy_arrai": [982, 995], "funciton": [982, 995], "prune_nest_at_index": 982, "prune_nest_at_indic": 982, "set_nest_at_index": 982, "set_nest_at_indic": 982, "111": [982, 999], "xyz": [982, 999], "pqr": [982, 999], "mini": [1000, 1001, 1004, 1135, 1136], "894": [1000, 1001, 1004], "772": [1000, 1001, 1004], "796": [1000, 1001, 1004], "population_s": [1006, 1007], "num_sampl": [1006, 1007], "home": [1006, 1007, 1011, 1137, 1138, 1139, 1140, 1142], "uniformli": [1006, 1008, 1009, 1012, 1014], "parameter": [1006, 1011, 1012, 1014], "6444774682897879": [1006, 1011], "811": [1006, 1011], "508": [1006, 1011], "564": [1006, 1011], "7268672": [1006, 1011], "968": [1006, 1011], "175": [1006, 1011, 1023, 1024, 1028], "064": [1006, 1011], "40935726": [1006, 1011], "556": [1006, 1011], "26431865": [1006, 1012, 1014], "475": [1006, 1012, 1014], "878": [1006, 1012, 1014], "861": [1006, 1012, 1014], "89150229": [1006, 1012, 1014], "89629126": [1006, 1012, 1014], "94198485": [1006, 1012, 1014], "91405606": [1006, 1012, 1014], "72848724": [1006, 1012, 1014], "7550739": [1006, 1012, 1014], "00109": [1006, 1012, 1014], "occurr": [1018, 1019, 1020, 1023, 1024, 1028], "43": [1018, 1022], "x_j": [1023, 1024, 1028, 1029, 1033, 1039, 1043], "impli": [1023, 1024, 1028, 1029, 1033, 1039, 1043], "inverse_indic": [1023, 1024, 1028, 1034, 1038], "aggreg": [1023, 1024, 1028], "fourth": [1023, 1024, 1028], "607": [1023, 1024, 1028], "735": [1023, 1024, 1028], "381": [1023, 1024, 1028], "857": [1023, 1024, 1028], "0396": [1023, 1024, 1028], "166": [1023, 1024, 1028], "58": [1023, 1024, 1028], "828": [1023, 1024, 1028], "144": [1023, 1024, 1028], "40501155": [1023, 1024, 1028], "77361575": [1023, 1024, 1028], "97776199": [1023, 1024, 1028], "36831157": [1023, 1024, 1028], "89148434": [1023, 1024, 1028], "9512272": [1023, 1024, 1028], "67542176": [1023, 1024, 1028], "41985657": [1023, 1024, 1028], "23478023": [1023, 1024, 1028], "1141": [1023, 1024, 1028], "8101": [1023, 1024, 1028], "9298": [1023, 1024, 1028], "8460": [1023, 1024, 1028], "2119": [1023, 1024, 1028], "3519": [1023, 1024, 1028], "6252": [1023, 1024, 1028], "4033": [1023, 1024, 1028], "7443": [1023, 1024, 1028], "2577": [1023, 1024, 1028], "3707": [1023, 1024, 1028], "0545": [1023, 1024, 1028], "3238": [1023, 1024, 1028], "5944": [1023, 1024, 1028], "0775": [1023, 1024, 1028], "4327": [1023, 1024, 1028], "176": [1023, 1024, 1028], "889": [1023, 1024, 1028], "763": [1023, 1024, 1028], "071": [1023, 1024, 1028], "262": [1023, 1024, 1028], "456": [1023, 1024, 1028], "114": [1023, 1024, 1028], "349": [1023, 1024, 1028], "615": [1023, 1024, 1028], "594": [1023, 1024, 1028], "335": [1023, 1024, 1028], "212": [1023, 1024, 1028], "457": [1023, 1024, 1028], "827": [1023, 1024, 1028], "set_funct": [1023, 1029, 1033], "ascend": [1044, 1045, 1048], "einstein": [1055, 1056, 1059], "summat": [1055, 1056, 1059], "seq": [1055, 1056, 1059], "jk": [1055, 1056, 1059], "ik": [1055, 1056, 1059], "126": [1055, 1056, 1059], "510": [1055, 1056, 1059], "108": [1055, 1056, 1059], "117": [1055, 1056, 1059], "sentinel": [1055, 1060, 1063, 1068, 1071], "unsign": [1055, 1072, 1075, 1080, 1083], "degre": [1055, 1076, 1079, 1084, 1087], "bessel": [1055, 1076, 1079, 1084, 1087], "8164966": [1055, 1076, 1079], "varianc": [1055, 1084, 1087], "unbias": [1055, 1084, 1087], "simplicit": [1088, 1089, 1092], "grow": 1099, "ai": 1099, "got": 1099, "colab": 1099, "sharp": 1099, "weekli": 1099, "immedi": 1099, "favorit": 1099, "jax_concat": 1099, "tf_concat": 1099, "np_concat": 1099, "mx_concat": 1099, "torch_concat": 1099, "prompt": 1099, "get_devic": 1099, "reduce_prod": 1099, "gradient_imag": 1099, "linalg": 1099, "bilinear_resampl": 1099, "stack_imag": 1099, "neural_net": 1099, "ecosystem": [1099, 1105], "popular": [1099, 1105], "acceler": 1099, "articl": 1099, "lenton2021ivi": 1099, "inter": 1099, "lenton": 1099, "daniel": 1099, "pardo": 1099, "fabio": 1099, "falck": 1099, "fabian": 1099, "jame": 1099, "stephen": 1099, "clark": 1099, "ronald": 1099, "journal": 1099, "arxiv": 1099, "preprint": 1099, "2102": 1099, "02886": 1099, "2021": 1099, "add_array_spec": 1102, "fn_array_spec": 1102, "geglu": 1107, "native_modul": [1110, 1111], "native_module_class": [1110, 1111], "firstlayersiren": 1112, "kaimingnorm": [1112, 1116], "negative_slop": 1112, "Ones": 1112, "siren": 1112, "w0": [1112, 1118], "filter_s": [1121, 1122, 1123], "1d": [1121, 1122, 1123], "conv1dtranspos": 1121, "filter_shap": [1121, 1124, 1125, 1126, 1127, 1128], "conv2dtranspos": 1121, "conv3dtranspos": 1121, "depthwiseconv2d": 1121, "num_channel": [1121, 1128], "bernoul": [1121, 1129], "num_lay": [1121, 1130], "return_sequ": [1121, 1130], "return_st": [1121, 1130], "get_initial_st": [1121, 1130], "dens": [1121, 1131], "multiheadattent": 1121, "query_dim": [1121, 1132], "head_dim": [1121, 1132], "dropout_r": [1121, 1132], "context_dim": [1121, 1132], "with_to_q_fn": [1121, 1132], "with_to_kv_fn": [1121, 1132], "with_to_out_fn": [1121, 1132], "build_mod": [1121, 1132, 1133, 1134], "on_init": [1121, 1132, 1133, 1134], "__call__": [1121, 1132, 1133, 1134], "store_var": [1133, 1134], "arg_stateful_idx": [1133, 1134], "kwarg_stateful_idx": [1133, 1134], "fallback_to_non_compil": [1133, 1134, 1137, 1141], "with_partial_v": [1133, 1134], "initialz": [1133, 1134], "from_cal": [1133, 1134], "check_submod_ret": [1133, 1134], "get_mod_kei": [1133, 1134], "top_mod": [1133, 1134], "mod_depth": [1133, 1134], "mod_height": [1133, 1134], "mod_with_top_mod_key_chain": [1133, 1134], "save_weight": [1133, 1134], "weights_path": [1133, 1134], "show_mod_in_top_mod": [1133, 1134], "upper_depth": [1133, 1134], "lower_depth": [1133, 1134], "show_structur": [1133, 1134], "show_v_in_top_v": [1133, 1134], "sub_mod": [1133, 1134], "show_v": [1133, 1134], "track_submod_call_ord": [1133, 1134], "track_submod_ret": [1133, 1134], "v_with_top_v_key_chain": [1133, 1134], "layernorm": 1135, "normalized_shap": [1135, 1136], "elementwise_affin": [1135, 1136], "trail": [1135, 1136], "affin": [1135, 1136], "0x7effa503af70": [1137, 1140], "init_on_first_step": [1137, 1141], "ignore_miss": [1137, 1141], "overridden": [1137, 1141], "sgd": 1137, "stochast": [1137, 1142], "0x7effa503aca0": [1137, 1142], "sub_modul": [1143, 1144]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [35, 0, 0, "-", "creation"], [37, 0, 0, "-", "data_type"], [39, 0, 0, "-", "device"], [41, 0, 0, "-", "elementwise"], [43, 0, 0, "-", "general"], [45, 0, 0, "-", "gradients"], [47, 0, 0, "-", "image"], [49, 0, 0, "-", "layers"], [51, 0, 0, "-", "linear_algebra"], [53, 0, 0, "-", "losses"], [55, 0, 0, "-", "manipulation"], [57, 0, 0, "-", "norms"], [59, 0, 0, "-", "random"], [61, 0, 0, "-", "searching"], [63, 0, 0, "-", "set"], [65, 0, 0, "-", "sorting"], [67, 0, 0, "-", "statistical"], [69, 0, 0, "-", "utility"], [71, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "default_uint_dtype"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_array_mode"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "random_uniform"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_array_mode"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_default_uint_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_array_mode"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_default_uint_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[401, 4, 1, "", "abs"], [406, 4, 1, "", "acos"], [411, 4, 1, "", "acosh"], [774, 4, 1, "", "adam_step"], [416, 4, 1, "", "add"], [1090, 4, 1, "", "all"], [685, 4, 1, "", "all_equal"], [1095, 4, 1, "", "any"], [1046, 4, 1, "", "argsort"], [208, 4, 1, "", "asarray"], [421, 4, 1, "", "asin"], [426, 4, 1, "", "asinh"], [281, 4, 1, "", "astype"], [431, 4, 1, "", "atan"], [436, 4, 1, "", "atan2"], [441, 4, 1, "", "atanh"], [903, 4, 1, "", "binary_cross_entropy"], [446, 4, 1, "", "bitwise_and"], [451, 4, 1, "", "bitwise_invert"], [456, 4, 1, "", "bitwise_left_shift"], [461, 4, 1, "", "bitwise_or"], [466, 4, 1, "", "bitwise_right_shift"], [471, 4, 1, "", "bitwise_xor"], [286, 4, 1, "", "broadcast_arrays"], [291, 4, 1, "", "broadcast_to"], [296, 4, 1, "", "can_cast"], [476, 4, 1, "", "ceil"], [831, 4, 1, "", "cholesky"], [919, 4, 1, "", "clip"], [924, 4, 1, "", "concat"], [928, 4, 1, "", "constant_pad"], [481, 4, 1, "", "cos"], [486, 4, 1, "", "cosh"], [836, 4, 1, "", "cross"], [908, 4, 1, "", "cross_entropy"], [820, 4, 1, "", "depthwise_conv2d"], [839, 4, 1, "", "det"], [374, 4, 1, "", "dev"], [842, 4, 1, "", "diagonal"], [491, 4, 1, "", "divide"], [308, 4, 1, "", "dtype"], [845, 4, 1, "", "eigh"], [848, 4, 1, "", "eigvalsh"], [1057, 4, 1, "", "einsum"], [213, 4, 1, "", "empty_like"], [496, 4, 1, "", "equal"], [501, 4, 1, "", "erf"], [506, 4, 1, "", "exp"], [932, 4, 1, "", "expand_dims"], [511, 4, 1, "", "expm1"], [314, 4, 1, "", "finfo"], [936, 4, 1, "", "flip"], [516, 4, 1, "", "floor"], [521, 4, 1, "", "floor_divide"], [221, 4, 1, "", "from_dlpack"], [227, 4, 1, "", "full_like"], [713, 4, 1, "", "gather_nd"], [166, 4, 1, "", "gelu"], [526, 4, 1, "", "greater"], [531, 4, 1, "", "greater_equal"], [325, 4, 1, "", "iinfo"], [851, 4, 1, "", "inv"], [331, 4, 1, "", "is_bool_dtype"], [336, 4, 1, "", "is_float_dtype"], [341, 4, 1, "", "is_int_dtype"], [346, 4, 1, "", "is_uint_dtype"], [790, 4, 1, "", "is_variable"], [536, 4, 1, "", "isfinite"], [541, 4, 1, "", "isinf"], [546, 4, 1, "", "isnan"], [1002, 4, 1, "", "layer_norm"], [171, 4, 1, "", "leaky_relu"], [551, 4, 1, "", "less"], [556, 4, 1, "", "less_equal"], [561, 4, 1, "", "log"], [566, 4, 1, "", "log10"], [571, 4, 1, "", "log1p"], [576, 4, 1, "", "log2"], [581, 4, 1, "", "logaddexp"], [586, 4, 1, "", "logical_and"], [591, 4, 1, "", "logical_not"], [596, 4, 1, "", "logical_or"], [601, 4, 1, "", "logical_xor"], [854, 4, 1, "", "matmul"], [858, 4, 1, "", "matrix_norm"], [862, 4, 1, "", "matrix_rank"], [865, 4, 1, "", "matrix_transpose"], [1061, 4, 1, "", "max"], [1065, 4, 1, "", "mean"], [238, 4, 1, "", "meshgrid"], [1069, 4, 1, "", "min"], [608, 4, 1, "", "multiply"], [243, 4, 1, "", "native_array"], [613, 4, 1, "", "negative"], [618, 4, 1, "", "not_equal"], [251, 4, 1, "", "ones_like"], [868, 4, 1, "", "outer"], [940, 4, 1, "", "permute_dims"], [871, 4, 1, "", "pinv"], [623, 4, 1, "", "positive"], [628, 4, 1, "", "pow"], [1073, 4, 1, "", "prod"], [874, 4, 1, "", "qr"], [176, 4, 1, "", "relu"], [633, 4, 1, "", "remainder"], [944, 4, 1, "", "repeat"], [949, 4, 1, "", "reshape"], [352, 4, 1, "", "result_type"], [953, 4, 1, "", "roll"], [638, 4, 1, "", "round"], [181, 4, 1, "", "sigmoid"], [643, 4, 1, "", "sign"], [648, 4, 1, "", "sin"], [653, 4, 1, "", "sinh"], [186, 4, 1, "", "softmax"], [191, 4, 1, "", "softplus"], [878, 4, 1, "", "solve"], [1051, 4, 1, "", "sort"], [913, 4, 1, "", "sparse_cross_entropy"], [658, 4, 1, "", "sqrt"], [663, 4, 1, "", "square"], [959, 4, 1, "", "squeeze"], [963, 4, 1, "", "stack"], [1077, 4, 1, "", "std"], [669, 4, 1, "", "subtract"], [1081, 4, 1, "", "sum"], [881, 4, 1, "", "svd"], [884, 4, 1, "", "svdvals"], [967, 4, 1, "", "swapaxes"], [674, 4, 1, "", "tan"], [197, 4, 1, "", "tanh"], [887, 4, 1, "", "tensordot"], [971, 4, 1, "", "tile"], [392, 4, 1, "", "to_device"], [761, 4, 1, "", "to_numpy"], [890, 4, 1, "", "trace"], [257, 4, 1, "", "tril"], [262, 4, 1, "", "triu"], [680, 4, 1, "", "trunc"], [1026, 4, 1, "", "unique_all"], [1031, 4, 1, "", "unique_counts"], [1036, 4, 1, "", "unique_inverse"], [1041, 4, 1, "", "unique_values"], [1085, 4, 1, "", "var"], [893, 4, 1, "", "vecdot"], [896, 4, 1, "", "vector_norm"], [899, 4, 1, "", "vector_to_skew_symmetric_matrix"], [975, 4, 1, "", "zero_pad"], [270, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_container"], [31, 4, 1, "", "args_to_ivy"], [32, 4, 1, "", "args_to_native"], [33, 4, 1, "", "to_ivy"], [34, 4, 1, "", "to_native"]], "ivy.array.creation": [[36, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[36, 2, 1, "", "asarray"], [36, 2, 1, "", "empty_like"], [36, 2, 1, "", "from_dlpack"], [36, 2, 1, "", "full_like"], [36, 2, 1, "", "meshgrid"], [36, 2, 1, "", "native_array"], [36, 2, 1, "", "ones_like"], [36, 2, 1, "", "tril"], [36, 2, 1, "", "triu"], [36, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[38, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[38, 2, 1, "", "astype"], [38, 2, 1, "", "broadcast_arrays"], [38, 2, 1, "", "broadcast_to"], [38, 2, 1, "", "can_cast"], [38, 2, 1, "", "dtype"], [38, 2, 1, "", "finfo"], [38, 2, 1, "", "iinfo"], [38, 2, 1, "", "is_bool_dtype"], [38, 2, 1, "", "is_float_dtype"], [38, 2, 1, "", "is_int_dtype"], [38, 2, 1, "", "is_uint_dtype"], [38, 2, 1, "", "result_type"]], "ivy.array.device": [[40, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[40, 2, 1, "", "dev"], [40, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[42, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[42, 2, 1, "", "abs"], [42, 2, 1, "", "acos"], [42, 2, 1, "", "acosh"], [42, 2, 1, "", "add"], [42, 2, 1, "", "asin"], [42, 2, 1, "", "asinh"], [42, 2, 1, "", "atan"], [42, 2, 1, "", "atan2"], [42, 2, 1, "", "atanh"], [42, 2, 1, "", "bitwise_and"], [42, 2, 1, "", "bitwise_invert"], [42, 2, 1, "", "bitwise_left_shift"], [42, 2, 1, "", "bitwise_or"], [42, 2, 1, "", "bitwise_right_shift"], [42, 2, 1, "", "bitwise_xor"], [42, 2, 1, "", "ceil"], [42, 2, 1, "", "cos"], [42, 2, 1, "", "cosh"], [42, 2, 1, "", "divide"], [42, 2, 1, "", "equal"], [42, 2, 1, "", "erf"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "expm1"], [42, 2, 1, "", "floor"], [42, 2, 1, "", "floor_divide"], [42, 2, 1, "", "greater"], [42, 2, 1, "", "greater_equal"], [42, 2, 1, "", "isfinite"], [42, 2, 1, "", "isinf"], [42, 2, 1, "", "isnan"], [42, 2, 1, "", "less"], [42, 2, 1, "", "less_equal"], [42, 2, 1, "", "log"], [42, 2, 1, "", "log10"], [42, 2, 1, "", "log1p"], [42, 2, 1, "", "log2"], [42, 2, 1, "", "logaddexp"], [42, 2, 1, "", "logical_and"], [42, 2, 1, "", "logical_not"], [42, 2, 1, "", "logical_or"], [42, 2, 1, "", "logical_xor"], [42, 2, 1, "", "multiply"], [42, 2, 1, "", "negative"], [42, 2, 1, "", "not_equal"], [42, 2, 1, "", "positive"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "remainder"], [42, 2, 1, "", "round"], [42, 2, 1, "", "sign"], [42, 2, 1, "", "sin"], [42, 2, 1, "", "sinh"], [42, 2, 1, "", "sqrt"], [42, 2, 1, "", "square"], [42, 2, 1, "", "subtract"], [42, 2, 1, "", "tan"], [42, 2, 1, "", "tanh"], [42, 2, 1, "", "trunc"]], "ivy.array.general": [[44, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[44, 2, 1, "", "all_equal"], [44, 2, 1, "", "gather_nd"], [44, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[46, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[46, 2, 1, "", "adam_step"], [46, 2, 1, "", "is_variable"]], "ivy.array.image": [[48, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[50, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[50, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[52, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[52, 2, 1, "", "cholesky"], [52, 2, 1, "", "cross"], [52, 2, 1, "", "det"], [52, 2, 1, "", "diagonal"], [52, 2, 1, "", "eigh"], [52, 2, 1, "", "eigvalsh"], [52, 2, 1, "", "inv"], [52, 2, 1, "", "matmul"], [52, 2, 1, "", "matrix_norm"], [52, 2, 1, "", "matrix_rank"], [52, 2, 1, "", "matrix_transpose"], [52, 2, 1, "", "outer"], [52, 2, 1, "", "pinv"], [52, 2, 1, "", "qr"], [52, 2, 1, "", "solve"], [52, 2, 1, "", "svd"], [52, 2, 1, "", "svdvals"], [52, 2, 1, "", "tensordot"], [52, 2, 1, "", "trace"], [52, 2, 1, "", "vecdot"], [52, 2, 1, "", "vector_norm"], [52, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[54, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[54, 2, 1, "", "binary_cross_entropy"], [54, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[56, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[56, 2, 1, "", "clip"], [56, 2, 1, "", "concat"], [56, 2, 1, "", "constant_pad"], [56, 2, 1, "", "expand_dims"], [56, 2, 1, "", "flip"], [56, 2, 1, "", "permute_dims"], [56, 2, 1, "", "repeat"], [56, 2, 1, "", "reshape"], [56, 2, 1, "", "roll"], [56, 2, 1, "", "squeeze"], [56, 2, 1, "", "stack"], [56, 2, 1, "", "swapaxes"], [56, 2, 1, "", "tile"], [56, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[58, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[58, 2, 1, "", "layer_norm"]], "ivy.array.random": [[60, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[62, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[64, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[64, 2, 1, "", "unique_all"], [64, 2, 1, "", "unique_counts"], [64, 2, 1, "", "unique_inverse"], [64, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[66, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[66, 2, 1, "", "argsort"], [66, 2, 1, "", "sort"]], "ivy.array.statistical": [[68, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[68, 2, 1, "", "einsum"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "min"], [68, 2, 1, "", "prod"], [68, 2, 1, "", "std"], [68, 2, 1, "", "sum"], [68, 2, 1, "", "var"]], "ivy.array.utility": [[70, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[70, 2, 1, "", "all"], [70, 2, 1, "", "any"]], "ivy.array.wrapping": [[72, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [154, 0, 0, "-", "func_wrapper"], [1102, 0, 0, "-", "inspection"], [1106, 0, 0, "-", "stateful"], [1146, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[74, 0, 0, "-", "activations"], [76, 0, 0, "-", "base"], [78, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[75, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[75, 2, 1, "", "gelu"], [75, 2, 1, "", "leaky_relu"], [75, 2, 1, "", "relu"], [75, 2, 1, "", "sigmoid"], [75, 2, 1, "", "softmax"], [75, 2, 1, "", "softplus"], [75, 2, 1, "", "static_gelu"], [75, 2, 1, "", "static_leaky_relu"], [75, 2, 1, "", "static_relu"], [75, 2, 1, "", "static_sigmoid"], [75, 2, 1, "", "static_softmax"], [75, 2, 1, "", "static_softplus"], [75, 2, 1, "", "static_tanh"], [75, 2, 1, "", "tanh"]], "ivy.container.base": [[77, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[77, 2, 1, "", "__getitem__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__setitem__"], [77, 2, 1, "", "all_false"], [77, 2, 1, "", "all_key_chains"], [77, 2, 1, "", "all_true"], [77, 2, 1, "", "arrays_as_lists"], [77, 2, 1, "", "as_arrays"], [77, 2, 1, "", "as_bools"], [77, 2, 1, "", "as_ones"], [77, 2, 1, "", "as_random_uniform"], [77, 2, 1, "", "as_variables"], [77, 2, 1, "", "as_zeros"], [77, 2, 1, "", "assert_contains_sub_container"], [77, 2, 1, "", "assert_contains_sub_structure"], [77, 2, 1, "", "assert_identical"], [77, 2, 1, "", "assert_identical_structure"], [77, 2, 1, "", "at_key_chain"], [77, 2, 1, "", "at_key_chains"], [77, 2, 1, "", "at_keys"], [77, 2, 1, "", "clip"], [77, 2, 1, "", "combine"], [77, 2, 1, "", "common_key_chains"], [77, 3, 1, "", "config"], [77, 2, 1, "", "contains_sub_container"], [77, 2, 1, "", "contains_sub_structure"], [77, 2, 1, "", "copy"], [77, 2, 1, "", "create_if_absent"], [77, 2, 1, "", "cutoff_at_depth"], [77, 2, 1, "", "cutoff_at_height"], [77, 2, 1, "", "deep_copy"], [77, 3, 1, "", "dev"], [77, 2, 1, "", "dev_clone"], [77, 2, 1, "", "dev_dist"], [77, 3, 1, "", "dev_str"], [77, 2, 1, "", "diff"], [77, 2, 1, "", "dtype"], [77, 2, 1, "", "einops_rearrange"], [77, 2, 1, "", "einops_reduce"], [77, 2, 1, "", "einops_repeat"], [77, 2, 1, "", "find_sub_container"], [77, 2, 1, "", "find_sub_structure"], [77, 2, 1, "", "flatten_key_chain"], [77, 2, 1, "", "flatten_key_chains"], [77, 2, 1, "", "format_key_chains"], [77, 2, 1, "", "from_disk_as_hdf5"], [77, 2, 1, "", "from_disk_as_json"], [77, 2, 1, "", "from_disk_as_pickled"], [77, 2, 1, "", "from_flat_list"], [77, 2, 1, "", "from_numpy"], [77, 2, 1, "", "gather"], [77, 2, 1, "", "gather_nd"], [77, 2, 1, "", "h5_file_size"], [77, 2, 1, "", "handle_inplace"], [77, 2, 1, "", "has_key"], [77, 2, 1, "", "has_key_chain"], [77, 2, 1, "", "has_nans"], [77, 2, 1, "", "identical"], [77, 2, 1, "", "identical_array_shapes"], [77, 2, 1, "", "identical_configs"], [77, 2, 1, "", "identical_structure"], [77, 2, 1, "", "if_exists"], [77, 2, 1, "", "inplace_update"], [77, 3, 1, "", "ivy"], [77, 2, 1, "", "key_chains_containing"], [77, 2, 1, "", "list_join"], [77, 2, 1, "", "list_stack"], [77, 2, 1, "", "map"], [77, 2, 1, "", "map_conts"], [77, 2, 1, "", "matrix_norm"], [77, 3, 1, "", "max_depth"], [77, 2, 1, "", "maximum"], [77, 2, 1, "", "minimum"], [77, 2, 1, "", "multi_map"], [77, 2, 1, "", "multi_map_in_static_method"], [77, 2, 1, "", "num_arrays"], [77, 2, 1, "", "overwrite_at_key_chain"], [77, 2, 1, "", "overwrite_at_key_chains"], [77, 2, 1, "", "prune_empty"], [77, 2, 1, "", "prune_key_chain"], [77, 2, 1, "", "prune_key_chains"], [77, 2, 1, "", "prune_key_from_key_chains"], [77, 2, 1, "", "prune_keys"], [77, 2, 1, "", "prune_keys_from_key_chains"], [77, 2, 1, "", "reduce"], [77, 2, 1, "", "remove_key_length_limit"], [77, 2, 1, "", "remove_print_limit"], [77, 2, 1, "", "reshape_like"], [77, 2, 1, "", "restructure"], [77, 2, 1, "", "restructure_key_chains"], [77, 2, 1, "", "set_at_key_chain"], [77, 2, 1, "", "set_at_key_chains"], [77, 2, 1, "", "set_at_keys"], [77, 2, 1, "", "set_framework"], [77, 2, 1, "", "set_ivy_backend"], [77, 3, 1, "", "shape"], [77, 3, 1, "", "shapes"], [77, 2, 1, "", "show"], [77, 2, 1, "", "show_sub_container"], [77, 2, 1, "", "shuffle"], [77, 2, 1, "", "shuffle_h5_file"], [77, 2, 1, "", "size_ordered_arrays"], [77, 2, 1, "", "slice_keys"], [77, 2, 1, "", "slice_via_key"], [77, 2, 1, "", "sort_by_key"], [77, 2, 1, "", "split"], [77, 2, 1, "", "stop_gradients"], [77, 2, 1, "", "structural_diff"], [77, 2, 1, "", "to_device"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_disk_as_hdf5"], [77, 2, 1, "", "to_disk_as_json"], [77, 2, 1, "", "to_disk_as_pickled"], [77, 2, 1, "", "to_flat_list"], [77, 2, 1, "", "to_iterator"], [77, 2, 1, "", "to_iterator_keys"], [77, 2, 1, "", "to_iterator_values"], [77, 2, 1, "", "to_ivy"], [77, 2, 1, "", "to_jsonable"], [77, 2, 1, "", "to_list"], [77, 2, 1, "", "to_native"], [77, 2, 1, "", "to_numpy"], [77, 2, 1, "", "to_raw"], [77, 2, 1, "", "trim_key"], [77, 2, 1, "", "try_kc"], [77, 2, 1, "", "unify"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "update_config"], [77, 2, 1, "", "vector_norm"], [77, 2, 1, "", "with_default_key_color"], [77, 2, 1, "", "with_entries_as_lists"], [77, 2, 1, "", "with_ivy_backend"], [77, 2, 1, "", "with_key_length_limit"], [77, 2, 1, "", "with_print_indent"], [77, 2, 1, "", "with_print_limit"], [77, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[79, 1, 1, "", "Container"]], "ivy.container.container.Container": [[79, 2, 1, "", "__add__"], [79, 2, 1, "", "__init__"], [79, 2, 1, "", "__radd__"], [79, 2, 1, "", "arange"], [79, 2, 1, "", "arg_info"], [79, 2, 1, "", "arg_names"], [79, 2, 1, "", "argmax"], [79, 2, 1, "", "argmin"], [79, 2, 1, "", "array"], [79, 2, 1, "", "array_equal"], [79, 2, 1, "", "arrays_equal"], [79, 2, 1, "", "as_ivy_dev"], [79, 2, 1, "", "as_ivy_dtype"], [79, 2, 1, "", "as_native_dev"], [79, 2, 1, "", "as_native_dtype"], [79, 2, 1, "", "asarray"], [79, 2, 1, "", "assert_supports_inplace"], [79, 2, 1, "", "cache_fn"], [79, 2, 1, "", "clear_mem_on_dev"], [79, 2, 1, "", "clip_matrix_norm"], [79, 2, 1, "", "closest_valid_dtype"], [79, 2, 1, "", "container_types"], [79, 2, 1, "", "conv1d"], [79, 2, 1, "", "conv1d_transpose"], [79, 2, 1, "", "conv2d"], [79, 2, 1, "", "conv2d_transpose"], [79, 2, 1, "", "conv3d"], [79, 2, 1, "", "conv3d_transpose"], [79, 2, 1, "", "copy_array"], [79, 2, 1, "", "cross"], [79, 2, 1, "", "cumprod"], [79, 2, 1, "", "cumsum"], [79, 2, 1, "", "current_backend"], [79, 2, 1, "", "current_backend_str"], [79, 2, 1, "", "default"], [79, 2, 1, "", "default_device"], [79, 2, 1, "", "default_dtype"], [79, 2, 1, "", "default_float_dtype"], [79, 2, 1, "", "default_int_dtype"], [79, 2, 1, "", "default_uint_dtype"], [79, 2, 1, "", "det"], [79, 2, 1, "", "dev_util"], [79, 2, 1, "", "diagonal"], [79, 2, 1, "", "dropout"], [79, 2, 1, "", "dtype_bits"], [79, 2, 1, "", "eigh"], [79, 2, 1, "", "eigvalsh"], [79, 2, 1, "", "empty"], [79, 2, 1, "", "execute_with_gradients"], [79, 2, 1, "", "exists"], [79, 2, 1, "", "eye"], [79, 2, 1, "", "floormod"], [79, 2, 1, "", "fourier_encode"], [79, 2, 1, "", "full"], [79, 2, 1, "", "function_supported_dtypes"], [79, 2, 1, "", "function_unsupported_dtypes"], [79, 2, 1, "", "get_all_arrays_in_memory"], [79, 2, 1, "", "get_all_ivy_arrays_on_dev"], [79, 2, 1, "", "get_array_mode"], [79, 2, 1, "", "get_min_base"], [79, 2, 1, "", "get_min_denominator"], [79, 2, 1, "", "get_nestable_mode"], [79, 2, 1, "", "get_num_dims"], [79, 2, 1, "", "get_referrers_recursive"], [79, 2, 1, "", "gpu_is_available"], [79, 2, 1, "", "handle_nestable"], [79, 2, 1, "", "handle_out_argument"], [79, 2, 1, "", "indices_where"], [79, 2, 1, "", "infer_device"], [79, 2, 1, "", "infer_dtype"], [79, 2, 1, "", "inplace_arrays_supported"], [79, 2, 1, "", "inplace_decrement"], [79, 2, 1, "", "inplace_increment"], [79, 2, 1, "", "inplace_variables_supported"], [79, 2, 1, "", "inputs_to_native_arrays"], [79, 2, 1, "", "inv"], [79, 2, 1, "", "invalid_dtype"], [79, 2, 1, "", "is_ivy_container"], [79, 2, 1, "", "linear"], [79, 2, 1, "", "linspace"], [79, 2, 1, "", "logspace"], [79, 2, 1, "", "lstm_update"], [79, 2, 1, "", "match_kwargs"], [79, 2, 1, "", "matrix_power"], [79, 2, 1, "", "matrix_rank"], [79, 2, 1, "", "matrix_transpose"], [79, 2, 1, "", "multi_head_attention"], [79, 2, 1, "", "multinomial"], [79, 2, 1, "", "multiprocessing"], [79, 2, 1, "", "nonzero"], [79, 2, 1, "", "num_arrays_in_memory"], [79, 2, 1, "", "num_cpu_cores"], [79, 2, 1, "", "num_gpus"], [79, 2, 1, "", "num_ivy_arrays_on_dev"], [79, 2, 1, "", "one_hot"], [79, 2, 1, "", "ones"], [79, 2, 1, "", "outer"], [79, 2, 1, "", "outputs_to_ivy_arrays"], [79, 2, 1, "", "percent_used_mem_on_dev"], [79, 2, 1, "", "pinv"], [79, 2, 1, "", "print_all_arrays_in_memory"], [79, 2, 1, "", "print_all_ivy_arrays_on_dev"], [79, 2, 1, "", "promote_types"], [79, 2, 1, "", "qr"], [79, 2, 1, "", "queue_timeout"], [79, 2, 1, "", "randint"], [79, 2, 1, "", "random_normal"], [79, 2, 1, "", "scaled_dot_product_attention"], [79, 2, 1, "", "scatter_flat"], [79, 2, 1, "", "scatter_nd"], [79, 2, 1, "", "seed"], [79, 2, 1, "", "set_array_mode"], [79, 2, 1, "", "set_default_device"], [79, 2, 1, "", "set_default_dtype"], [79, 2, 1, "", "set_default_float_dtype"], [79, 2, 1, "", "set_default_int_dtype"], [79, 2, 1, "", "set_default_uint_dtype"], [79, 2, 1, "", "set_min_base"], [79, 2, 1, "", "set_min_denominator"], [79, 2, 1, "", "set_nestable_mode"], [79, 2, 1, "", "set_queue_timeout"], [79, 2, 1, "", "set_shape_array_mode"], [79, 2, 1, "", "set_split_factor"], [79, 2, 1, "", "set_tmp_dir"], [79, 2, 1, "", "set_with_grads"], [79, 2, 1, "", "shape_array_mode"], [79, 2, 1, "", "slogdet"], [79, 2, 1, "", "solve"], [79, 2, 1, "", "split_factor"], [79, 2, 1, "", "split_func_call"], [79, 2, 1, "", "stable_divide"], [79, 2, 1, "", "stable_pow"], [79, 2, 1, "", "static_arg_info"], [79, 2, 1, "", "static_arg_names"], [79, 2, 1, "", "static_argmax"], [79, 2, 1, "", "static_argmin"], [79, 2, 1, "", "static_array"], [79, 2, 1, "", "static_array_equal"], [79, 2, 1, "", "static_arrays_equal"], [79, 2, 1, "", "static_as_ivy_dev"], [79, 2, 1, "", "static_as_ivy_dtype"], [79, 2, 1, "", "static_as_native_dev"], [79, 2, 1, "", "static_as_native_dtype"], [79, 2, 1, "", "static_assert_supports_inplace"], [79, 2, 1, "", "static_cache_fn"], [79, 2, 1, "", "static_clear_mem_on_dev"], [79, 2, 1, "", "static_clip_matrix_norm"], [79, 2, 1, "", "static_clip_vector_norm"], [79, 2, 1, "", "static_closest_valid_dtype"], [79, 2, 1, "", "static_concat"], [79, 2, 1, "", "static_constant_pad"], [79, 2, 1, "", "static_container_types"], [79, 2, 1, "", "static_conv1d"], [79, 2, 1, "", "static_conv1d_transpose"], [79, 2, 1, "", "static_conv2d"], [79, 2, 1, "", "static_conv2d_transpose"], [79, 2, 1, "", "static_conv3d"], [79, 2, 1, "", "static_conv3d_transpose"], [79, 2, 1, "", "static_copy_array"], [79, 2, 1, "", "static_cross"], [79, 2, 1, "", "static_cumprod"], [79, 2, 1, "", "static_cumsum"], [79, 2, 1, "", "static_current_backend"], [79, 2, 1, "", "static_current_backend_str"], [79, 2, 1, "", "static_default"], [79, 2, 1, "", "static_default_device"], [79, 2, 1, "", "static_default_dtype"], [79, 2, 1, "", "static_default_int_dtype"], [79, 2, 1, "", "static_default_uint_dtype"], [79, 2, 1, "", "static_det"], [79, 2, 1, "", "static_dev_util"], [79, 2, 1, "", "static_diagonal"], [79, 2, 1, "", "static_dropout"], [79, 2, 1, "", "static_dtype_bits"], [79, 2, 1, "", "static_eigh"], [79, 2, 1, "", "static_eigvalsh"], [79, 2, 1, "", "static_einops_rearrange"], [79, 2, 1, "", "static_einops_reduce"], [79, 2, 1, "", "static_einops_repeat"], [79, 2, 1, "", "static_einsum"], [79, 2, 1, "", "static_empty"], [79, 2, 1, "", "static_exists"], [79, 2, 1, "", "static_expand_dims"], [79, 2, 1, "", "static_flip"], [79, 2, 1, "", "static_floormod"], [79, 2, 1, "", "static_fourier_encode"], [79, 2, 1, "", "static_full"], [79, 2, 1, "", "static_gather"], [79, 2, 1, "", "static_get_all_arrays_in_memory"], [79, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [79, 2, 1, "", "static_get_array_mode"], [79, 2, 1, "", "static_get_min_base"], [79, 2, 1, "", "static_get_min_denominator"], [79, 2, 1, "", "static_get_nestable_mode"], [79, 2, 1, "", "static_get_num_dims"], [79, 2, 1, "", "static_get_referrers_recursive"], [79, 2, 1, "", "static_gpu_is_available"], [79, 2, 1, "", "static_handle_nestable"], [79, 2, 1, "", "static_handle_out_argument"], [79, 2, 1, "", "static_has_nans"], [79, 2, 1, "", "static_indices_where"], [79, 2, 1, "", "static_infer_device"], [79, 2, 1, "", "static_infer_dtype"], [79, 2, 1, "", "static_inplace_arrays_supported"], [79, 2, 1, "", "static_inplace_decrement"], [79, 2, 1, "", "static_inplace_increment"], [79, 2, 1, "", "static_inplace_update"], [79, 2, 1, "", "static_inplace_variables_supported"], [79, 2, 1, "", "static_inputs_to_native_arrays"], [79, 2, 1, "", "static_inv"], [79, 2, 1, "", "static_invalid_dtype"], [79, 2, 1, "", "static_is_array"], [79, 2, 1, "", "static_is_ivy_array"], [79, 2, 1, "", "static_is_ivy_container"], [79, 2, 1, "", "static_is_native_array"], [79, 2, 1, "", "static_linear"], [79, 2, 1, "", "static_lstm_update"], [79, 2, 1, "", "static_match_kwargs"], [79, 2, 1, "", "static_matmul"], [79, 2, 1, "", "static_matrix_norm"], [79, 2, 1, "", "static_matrix_power"], [79, 2, 1, "", "static_matrix_rank"], [79, 2, 1, "", "static_matrix_transpose"], [79, 2, 1, "", "static_max"], [79, 2, 1, "", "static_maximum"], [79, 2, 1, "", "static_mean"], [79, 2, 1, "", "static_min"], [79, 2, 1, "", "static_minimum"], [79, 2, 1, "", "static_multi_head_attention"], [79, 2, 1, "", "static_multinomial"], [79, 2, 1, "", "static_multiprocessing"], [79, 2, 1, "", "static_nonzero"], [79, 2, 1, "", "static_num_arrays_in_memory"], [79, 2, 1, "", "static_num_cpu_cores"], [79, 2, 1, "", "static_num_gpus"], [79, 2, 1, "", "static_num_ivy_arrays_on_dev"], [79, 2, 1, "", "static_one_hot"], [79, 2, 1, "", "static_outer"], [79, 2, 1, "", "static_outputs_to_ivy_arrays"], [79, 2, 1, "", "static_percent_used_mem_on_dev"], [79, 2, 1, "", "static_permute_dims"], [79, 2, 1, "", "static_pinv"], [79, 2, 1, "", "static_print_all_arrays_in_memory"], [79, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [79, 2, 1, "", "static_prod"], [79, 2, 1, "", "static_promote_types"], [79, 2, 1, "", "static_qr"], [79, 2, 1, "", "static_queue_timeout"], [79, 2, 1, "", "static_random_normal"], [79, 2, 1, "", "static_reshape"], [79, 2, 1, "", "static_scaled_dot_product_attention"], [79, 2, 1, "", "static_scatter_flat"], [79, 2, 1, "", "static_scatter_nd"], [79, 2, 1, "", "static_seed"], [79, 2, 1, "", "static_set_array_mode"], [79, 2, 1, "", "static_set_default_device"], [79, 2, 1, "", "static_set_default_dtype"], [79, 2, 1, "", "static_set_default_float_dtype"], [79, 2, 1, "", "static_set_default_int_dtype"], [79, 2, 1, "", "static_set_default_uint_dtype"], [79, 2, 1, "", "static_set_min_base"], [79, 2, 1, "", "static_set_min_denominator"], [79, 2, 1, "", "static_set_nestable_mode"], [79, 2, 1, "", "static_set_queue_timeout"], [79, 2, 1, "", "static_set_shape_array_mode"], [79, 2, 1, "", "static_set_split_factor"], [79, 2, 1, "", "static_set_tmp_dir"], [79, 2, 1, "", "static_set_with_grads"], [79, 2, 1, "", "static_shape"], [79, 2, 1, "", "static_shape_array_mode"], [79, 2, 1, "", "static_shuffle"], [79, 2, 1, "", "static_slogdet"], [79, 2, 1, "", "static_solve"], [79, 2, 1, "", "static_split"], [79, 2, 1, "", "static_split_factor"], [79, 2, 1, "", "static_split_func_call"], [79, 2, 1, "", "static_squeeze"], [79, 2, 1, "", "static_stable_divide"], [79, 2, 1, "", "static_stable_pow"], [79, 2, 1, "", "static_stack"], [79, 2, 1, "", "static_std"], [79, 2, 1, "", "static_stop_gradient"], [79, 2, 1, "", "static_sum"], [79, 2, 1, "", "static_supports_inplace"], [79, 2, 1, "", "static_svd"], [79, 2, 1, "", "static_svdvals"], [79, 2, 1, "", "static_swapaxes"], [79, 2, 1, "", "static_tensordot"], [79, 2, 1, "", "static_tile"], [79, 2, 1, "", "static_tmp_dir"], [79, 2, 1, "", "static_to_ivy_shape"], [79, 2, 1, "", "static_to_list"], [79, 2, 1, "", "static_to_native_arrays_and_back"], [79, 2, 1, "", "static_to_native_shape"], [79, 2, 1, "", "static_to_scalar"], [79, 2, 1, "", "static_total_mem_on_dev"], [79, 2, 1, "", "static_tpu_is_available"], [79, 2, 1, "", "static_trace"], [79, 2, 1, "", "static_try_else_none"], [79, 2, 1, "", "static_type_promote_arrays"], [79, 2, 1, "", "static_unset_array_mode"], [79, 2, 1, "", "static_unset_default_device"], [79, 2, 1, "", "static_unset_default_dtype"], [79, 2, 1, "", "static_unset_default_float_dtype"], [79, 2, 1, "", "static_unset_default_int_dtype"], [79, 2, 1, "", "static_unset_default_uint_dtype"], [79, 2, 1, "", "static_unset_nestable_mode"], [79, 2, 1, "", "static_unset_shape_array_mode"], [79, 2, 1, "", "static_unset_with_grads"], [79, 2, 1, "", "static_unstack"], [79, 2, 1, "", "static_used_mem_on_dev"], [79, 2, 1, "", "static_valid_dtype"], [79, 2, 1, "", "static_value_is_nan"], [79, 2, 1, "", "static_var"], [79, 2, 1, "", "static_variable"], [79, 2, 1, "", "static_variable_data"], [79, 2, 1, "", "static_vecdot"], [79, 2, 1, "", "static_vector_norm"], [79, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [79, 2, 1, "", "static_where"], [79, 2, 1, "", "static_with_grads"], [79, 2, 1, "", "static_zero_pad"], [79, 2, 1, "", "stop_gradient"], [79, 2, 1, "", "supports_inplace"], [79, 2, 1, "", "svd"], [79, 2, 1, "", "svdvals"], [79, 2, 1, "", "tensordot"], [79, 2, 1, "", "tmp_dir"], [79, 2, 1, "", "to_ivy_shape"], [79, 2, 1, "", "to_native_arrays_and_back"], [79, 2, 1, "", "to_native_shape"], [79, 2, 1, "", "to_scalar"], [79, 2, 1, "", "total_mem_on_dev"], [79, 2, 1, "", "tpu_is_available"], [79, 2, 1, "", "trace"], [79, 2, 1, "", "try_else_none"], [79, 2, 1, "", "type_promote_arrays"], [79, 2, 1, "", "unset_array_mode"], [79, 2, 1, "", "unset_default_device"], [79, 2, 1, "", "unset_default_dtype"], [79, 2, 1, "", "unset_default_float_dtype"], [79, 2, 1, "", "unset_default_int_dtype"], [79, 2, 1, "", "unset_default_uint_dtype"], [79, 2, 1, "", "unset_nestable_mode"], [79, 2, 1, "", "unset_shape_array_mode"], [79, 2, 1, "", "unset_with_grads"], [79, 2, 1, "", "used_mem_on_dev"], [79, 2, 1, "", "valid_dtype"], [79, 2, 1, "", "value_is_nan"], [79, 2, 1, "", "variable"], [79, 2, 1, "", "variable_data"], [79, 2, 1, "", "vecdot"], [79, 2, 1, "", "vector_to_skew_symmetric_matrix"], [79, 2, 1, "", "where"], [79, 2, 1, "", "with_grads"], [79, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[402, 4, 1, "", "abs"], [407, 4, 1, "", "acos"], [412, 4, 1, "", "acosh"], [775, 4, 1, "", "adam_step"], [779, 4, 1, "", "adam_update"], [417, 4, 1, "", "add"], [1091, 4, 1, "", "all"], [686, 4, 1, "", "all_equal"], [1096, 4, 1, "", "any"], [1047, 4, 1, "", "argsort"], [422, 4, 1, "", "asin"], [427, 4, 1, "", "asinh"], [282, 4, 1, "", "astype"], [432, 4, 1, "", "atan"], [437, 4, 1, "", "atan2"], [442, 4, 1, "", "atanh"], [904, 4, 1, "", "binary_cross_entropy"], [447, 4, 1, "", "bitwise_and"], [452, 4, 1, "", "bitwise_invert"], [457, 4, 1, "", "bitwise_left_shift"], [462, 4, 1, "", "bitwise_or"], [467, 4, 1, "", "bitwise_right_shift"], [472, 4, 1, "", "bitwise_xor"], [287, 4, 1, "", "broadcast_arrays"], [292, 4, 1, "", "broadcast_to"], [297, 4, 1, "", "can_cast"], [477, 4, 1, "", "ceil"], [832, 4, 1, "", "cholesky"], [920, 4, 1, "", "clip"], [697, 4, 1, "", "clip_vector_norm"], [925, 4, 1, "", "concat"], [929, 4, 1, "", "constant_pad"], [482, 4, 1, "", "cos"], [487, 4, 1, "", "cosh"], [909, 4, 1, "", "cross_entropy"], [821, 4, 1, "", "depthwise_conv2d"], [375, 4, 1, "", "dev"], [492, 4, 1, "", "divide"], [309, 4, 1, "", "dtype"], [1058, 4, 1, "", "einsum"], [214, 4, 1, "", "empty_like"], [497, 4, 1, "", "equal"], [502, 4, 1, "", "erf"], [507, 4, 1, "", "exp"], [933, 4, 1, "", "expand_dims"], [512, 4, 1, "", "expm1"], [315, 4, 1, "", "finfo"], [937, 4, 1, "", "flip"], [517, 4, 1, "", "floor"], [522, 4, 1, "", "floor_divide"], [222, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full_like"], [714, 4, 1, "", "gather_nd"], [167, 4, 1, "", "gelu"], [786, 4, 1, "", "gradient_descent_update"], [527, 4, 1, "", "greater"], [532, 4, 1, "", "greater_equal"], [326, 4, 1, "", "iinfo"], [332, 4, 1, "", "is_bool_dtype"], [337, 4, 1, "", "is_float_dtype"], [342, 4, 1, "", "is_int_dtype"], [347, 4, 1, "", "is_uint_dtype"], [791, 4, 1, "", "is_variable"], [537, 4, 1, "", "isfinite"], [542, 4, 1, "", "isinf"], [547, 4, 1, "", "isnan"], [795, 4, 1, "", "lamb_update"], [799, 4, 1, "", "lars_update"], [1003, 4, 1, "", "layer_norm"], [172, 4, 1, "", "leaky_relu"], [552, 4, 1, "", "less"], [557, 4, 1, "", "less_equal"], [562, 4, 1, "", "log"], [567, 4, 1, "", "log10"], [572, 4, 1, "", "log1p"], [577, 4, 1, "", "log2"], [582, 4, 1, "", "logaddexp"], [587, 4, 1, "", "logical_and"], [592, 4, 1, "", "logical_not"], [597, 4, 1, "", "logical_or"], [602, 4, 1, "", "logical_xor"], [855, 4, 1, "", "matmul"], [1062, 4, 1, "", "max"], [1066, 4, 1, "", "mean"], [239, 4, 1, "", "meshgrid"], [1070, 4, 1, "", "min"], [609, 4, 1, "", "multiply"], [244, 4, 1, "", "native_array"], [614, 4, 1, "", "negative"], [619, 4, 1, "", "not_equal"], [252, 4, 1, "", "ones_like"], [803, 4, 1, "", "optimizer_update"], [941, 4, 1, "", "permute_dims"], [624, 4, 1, "", "positive"], [629, 4, 1, "", "pow"], [1074, 4, 1, "", "prod"], [1013, 4, 1, "", "random_uniform"], [177, 4, 1, "", "relu"], [634, 4, 1, "", "remainder"], [945, 4, 1, "", "repeat"], [950, 4, 1, "", "reshape"], [353, 4, 1, "", "result_type"], [954, 4, 1, "", "roll"], [639, 4, 1, "", "round"], [182, 4, 1, "", "sigmoid"], [644, 4, 1, "", "sign"], [649, 4, 1, "", "sin"], [654, 4, 1, "", "sinh"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [1052, 4, 1, "", "sort"], [914, 4, 1, "", "sparse_cross_entropy"], [659, 4, 1, "", "sqrt"], [664, 4, 1, "", "square"], [960, 4, 1, "", "squeeze"], [964, 4, 1, "", "stack"], [404, 4, 1, "", "static_abs"], [409, 4, 1, "", "static_acos"], [414, 4, 1, "", "static_acosh"], [777, 4, 1, "", "static_adam_step"], [781, 4, 1, "", "static_adam_update"], [419, 4, 1, "", "static_add"], [1093, 4, 1, "", "static_all"], [688, 4, 1, "", "static_all_equal"], [1098, 4, 1, "", "static_any"], [206, 4, 1, "", "static_arange"], [1049, 4, 1, "", "static_argsort"], [210, 4, 1, "", "static_asarray"], [424, 4, 1, "", "static_asin"], [429, 4, 1, "", "static_asinh"], [284, 4, 1, "", "static_astype"], [434, 4, 1, "", "static_atan"], [439, 4, 1, "", "static_atan2"], [444, 4, 1, "", "static_atanh"], [906, 4, 1, "", "static_binary_cross_entropy"], [449, 4, 1, "", "static_bitwise_and"], [454, 4, 1, "", "static_bitwise_invert"], [459, 4, 1, "", "static_bitwise_left_shift"], [464, 4, 1, "", "static_bitwise_or"], [469, 4, 1, "", "static_bitwise_right_shift"], [474, 4, 1, "", "static_bitwise_xor"], [289, 4, 1, "", "static_broadcast_arrays"], [294, 4, 1, "", "static_broadcast_to"], [299, 4, 1, "", "static_can_cast"], [479, 4, 1, "", "static_ceil"], [834, 4, 1, "", "static_cholesky"], [922, 4, 1, "", "static_clip"], [484, 4, 1, "", "static_cos"], [489, 4, 1, "", "static_cosh"], [911, 4, 1, "", "static_cross_entropy"], [304, 4, 1, "", "static_default_float_dtype"], [823, 4, 1, "", "static_depthwise_conv2d"], [377, 4, 1, "", "static_dev"], [494, 4, 1, "", "static_divide"], [311, 4, 1, "", "static_dtype"], [216, 4, 1, "", "static_empty_like"], [499, 4, 1, "", "static_equal"], [504, 4, 1, "", "static_erf"], [784, 4, 1, "", "static_execute_with_gradients"], [509, 4, 1, "", "static_exp"], [514, 4, 1, "", "static_expm1"], [219, 4, 1, "", "static_eye"], [317, 4, 1, "", "static_finfo"], [519, 4, 1, "", "static_floor"], [524, 4, 1, "", "static_floor_divide"], [224, 4, 1, "", "static_from_dlpack"], [230, 4, 1, "", "static_full_like"], [320, 4, 1, "", "static_function_supported_dtypes"], [323, 4, 1, "", "static_function_unsupported_dtypes"], [716, 4, 1, "", "static_gather_nd"], [169, 4, 1, "", "static_gelu"], [788, 4, 1, "", "static_gradient_descent_update"], [529, 4, 1, "", "static_greater"], [534, 4, 1, "", "static_greater_equal"], [328, 4, 1, "", "static_iinfo"], [334, 4, 1, "", "static_is_bool_dtype"], [339, 4, 1, "", "static_is_float_dtype"], [344, 4, 1, "", "static_is_int_dtype"], [349, 4, 1, "", "static_is_uint_dtype"], [793, 4, 1, "", "static_is_variable"], [539, 4, 1, "", "static_isfinite"], [544, 4, 1, "", "static_isinf"], [549, 4, 1, "", "static_isnan"], [797, 4, 1, "", "static_lamb_update"], [801, 4, 1, "", "static_lars_update"], [1005, 4, 1, "", "static_layer_norm"], [174, 4, 1, "", "static_leaky_relu"], [554, 4, 1, "", "static_less"], [559, 4, 1, "", "static_less_equal"], [233, 4, 1, "", "static_linspace"], [564, 4, 1, "", "static_log"], [569, 4, 1, "", "static_log10"], [574, 4, 1, "", "static_log1p"], [579, 4, 1, "", "static_log2"], [584, 4, 1, "", "static_logaddexp"], [589, 4, 1, "", "static_logical_and"], [594, 4, 1, "", "static_logical_not"], [599, 4, 1, "", "static_logical_or"], [604, 4, 1, "", "static_logical_xor"], [236, 4, 1, "", "static_logspace"], [241, 4, 1, "", "static_meshgrid"], [611, 4, 1, "", "static_multiply"], [246, 4, 1, "", "static_native_array"], [616, 4, 1, "", "static_negative"], [621, 4, 1, "", "static_not_equal"], [249, 4, 1, "", "static_ones"], [254, 4, 1, "", "static_ones_like"], [805, 4, 1, "", "static_optimizer_update"], [626, 4, 1, "", "static_positive"], [631, 4, 1, "", "static_pow"], [1010, 4, 1, "", "static_randint"], [1015, 4, 1, "", "static_random_uniform"], [179, 4, 1, "", "static_relu"], [636, 4, 1, "", "static_remainder"], [947, 4, 1, "", "static_repeat"], [355, 4, 1, "", "static_result_type"], [956, 4, 1, "", "static_roll"], [641, 4, 1, "", "static_round"], [184, 4, 1, "", "static_sigmoid"], [646, 4, 1, "", "static_sign"], [651, 4, 1, "", "static_sin"], [656, 4, 1, "", "static_sinh"], [189, 4, 1, "", "static_softmax"], [194, 4, 1, "", "static_softplus"], [1054, 4, 1, "", "static_sort"], [916, 4, 1, "", "static_sparse_cross_entropy"], [661, 4, 1, "", "static_sqrt"], [666, 4, 1, "", "static_square"], [668, 4, 1, "", "static_subtract"], [673, 4, 1, "", "static_tan"], [196, 4, 1, "", "static_tanh"], [391, 4, 1, "", "static_to_device"], [760, 4, 1, "", "static_to_numpy"], [256, 4, 1, "", "static_tril"], [261, 4, 1, "", "static_triu"], [679, 4, 1, "", "static_trunc"], [1025, 4, 1, "", "static_unique_all"], [1030, 4, 1, "", "static_unique_counts"], [1035, 4, 1, "", "static_unique_inverse"], [1040, 4, 1, "", "static_unique_values"], [266, 4, 1, "", "static_zeros"], [269, 4, 1, "", "static_zeros_like"], [1078, 4, 1, "", "std"], [670, 4, 1, "", "subtract"], [1082, 4, 1, "", "sum"], [968, 4, 1, "", "swapaxes"], [675, 4, 1, "", "tan"], [198, 4, 1, "", "tanh"], [972, 4, 1, "", "tile"], [393, 4, 1, "", "to_device"], [762, 4, 1, "", "to_numpy"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [681, 4, 1, "", "trunc"], [1027, 4, 1, "", "unique_all"], [1032, 4, 1, "", "unique_counts"], [1037, 4, 1, "", "unique_inverse"], [1042, 4, 1, "", "unique_values"], [1086, 4, 1, "", "var"], [976, 4, 1, "", "zero_pad"], [271, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "is_uint_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_default_float_dtype"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_function_supported_dtypes"], [83, 2, 1, "", "static_function_unsupported_dtypes"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_is_uint_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[85, 2, 1, "", "dev"], [85, 2, 1, "", "static_dev"], [85, 2, 1, "", "static_to_device"], [85, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_execute_with_gradients"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 2, 1, "", "cholesky"], [97, 2, 1, "", "matmul"], [97, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[99, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 2, 1, "", "binary_cross_entropy"], [99, 2, 1, "", "cross_entropy"], [99, 2, 1, "", "sparse_cross_entropy"], [99, 2, 1, "", "static_binary_cross_entropy"], [99, 2, 1, "", "static_cross_entropy"], [99, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 2, 1, "", "clip"], [101, 2, 1, "", "concat"], [101, 2, 1, "", "constant_pad"], [101, 2, 1, "", "expand_dims"], [101, 2, 1, "", "flip"], [101, 2, 1, "", "permute_dims"], [101, 2, 1, "", "repeat"], [101, 2, 1, "", "reshape"], [101, 2, 1, "", "roll"], [101, 2, 1, "", "squeeze"], [101, 2, 1, "", "stack"], [101, 2, 1, "", "static_clip"], [101, 2, 1, "", "static_repeat"], [101, 2, 1, "", "static_roll"], [101, 2, 1, "", "swapaxes"], [101, 2, 1, "", "tile"], [101, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 2, 1, "", "layer_norm"], [103, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 2, 1, "", "random_uniform"], [105, 2, 1, "", "static_randint"], [105, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 2, 1, "", "static_unique_all"], [109, 2, 1, "", "static_unique_counts"], [109, 2, 1, "", "static_unique_inverse"], [109, 2, 1, "", "static_unique_values"], [109, 2, 1, "", "unique_all"], [109, 2, 1, "", "unique_counts"], [109, 2, 1, "", "unique_inverse"], [109, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 2, 1, "", "argsort"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "static_argsort"], [111, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 2, 1, "", "einsum"], [113, 2, 1, "", "max"], [113, 2, 1, "", "mean"], [113, 2, 1, "", "min"], [113, 2, 1, "", "prod"], [113, 2, 1, "", "std"], [113, 2, 1, "", "sum"], [113, 2, 1, "", "var"]], "ivy.container.utility": [[115, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 2, 1, "", "all"], [115, 2, 1, "", "any"], [115, 2, 1, "", "static_all"], [115, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[155, 4, 1, "", "handle_nestable"], [156, 4, 1, "", "handle_out_argument"], [157, 4, 1, "", "infer_device"], [158, 4, 1, "", "infer_dtype"], [159, 4, 1, "", "inputs_to_ivy_arrays"], [160, 4, 1, "", "inputs_to_native_arrays"], [161, 4, 1, "", "outputs_to_ivy_arrays"], [162, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[164, 0, 0, "-", "activations"], [200, 0, 0, "-", "compilation"], [202, 0, 0, "-", "constants"], [203, 0, 0, "-", "creation"], [273, 0, 0, "-", "data_type"], [366, 0, 0, "-", "device"], [399, 0, 0, "-", "elementwise"], [683, 0, 0, "-", "general"], [771, 0, 0, "-", "gradients"], [812, 0, 0, "-", "layers"], [829, 0, 0, "-", "linear_algebra"], [901, 0, 0, "-", "losses"], [917, 0, 0, "-", "manipulation"], [978, 0, 0, "-", "meta"], [982, 0, 0, "-", "nest"], [1000, 0, 0, "-", "norms"], [1006, 0, 0, "-", "random"], [1018, 0, 0, "-", "searching"], [1023, 0, 0, "-", "set"], [1044, 0, 0, "-", "sorting"], [1055, 0, 0, "-", "statistical"], [1088, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[168, 4, 1, "", "gelu"], [173, 4, 1, "", "leaky_relu"], [178, 4, 1, "", "relu"], [183, 4, 1, "", "sigmoid"], [188, 4, 1, "", "softmax"], [193, 4, 1, "", "softplus"], [199, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[201, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[202, 5, 1, "", "e"], [202, 5, 1, "", "inf"], [202, 5, 1, "", "nan"], [202, 5, 1, "", "newaxis"], [202, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[205, 4, 1, "", "arange"], [203, 4, 1, "", "array"], [209, 4, 1, "", "asarray"], [211, 4, 1, "", "empty"], [215, 4, 1, "", "empty_like"], [218, 4, 1, "", "eye"], [223, 4, 1, "", "from_dlpack"], [225, 4, 1, "", "full"], [229, 4, 1, "", "full_like"], [232, 4, 1, "", "linspace"], [235, 4, 1, "", "logspace"], [240, 4, 1, "", "meshgrid"], [245, 4, 1, "", "native_array"], [248, 4, 1, "", "ones"], [253, 4, 1, "", "ones_like"], [259, 4, 1, "", "tril"], [264, 4, 1, "", "triu"], [267, 4, 1, "", "zeros"], [272, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[273, 1, 1, "", "DefaultDtype"], [273, 1, 1, "", "DefaultFloatDtype"], [273, 1, 1, "", "DefaultIntDtype"], [273, 1, 1, "", "DefaultUintDtype"], [278, 4, 1, "", "as_ivy_dtype"], [279, 4, 1, "", "as_native_dtype"], [283, 4, 1, "", "astype"], [288, 4, 1, "", "broadcast_arrays"], [293, 4, 1, "", "broadcast_to"], [298, 4, 1, "", "can_cast"], [300, 4, 1, "", "closest_valid_dtype"], [301, 4, 1, "", "default_dtype"], [303, 4, 1, "", "default_float_dtype"], [305, 4, 1, "", "default_int_dtype"], [306, 4, 1, "", "default_uint_dtype"], [310, 4, 1, "", "dtype"], [312, 4, 1, "", "dtype_bits"], [316, 4, 1, "", "finfo"], [319, 4, 1, "", "function_supported_dtypes"], [322, 4, 1, "", "function_unsupported_dtypes"], [327, 4, 1, "", "iinfo"], [329, 4, 1, "", "invalid_dtype"], [333, 4, 1, "", "is_bool_dtype"], [338, 4, 1, "", "is_float_dtype"], [343, 4, 1, "", "is_int_dtype"], [348, 4, 1, "", "is_uint_dtype"], [350, 4, 1, "", "promote_types"], [354, 4, 1, "", "result_type"], [356, 4, 1, "", "set_default_dtype"], [357, 4, 1, "", "set_default_float_dtype"], [358, 4, 1, "", "set_default_int_dtype"], [359, 4, 1, "", "set_default_uint_dtype"], [360, 4, 1, "", "type_promote_arrays"], [361, 4, 1, "", "unset_default_dtype"], [362, 4, 1, "", "unset_default_float_dtype"], [363, 4, 1, "", "unset_default_int_dtype"], [364, 4, 1, "", "unset_default_uint_dtype"], [365, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[366, 1, 1, "", "DefaultDevice"], [368, 1, 1, "", "Profiler"], [369, 4, 1, "", "as_ivy_dev"], [370, 4, 1, "", "as_native_dev"], [371, 4, 1, "", "clear_mem_on_dev"], [372, 4, 1, "", "default_device"], [376, 4, 1, "", "dev"], [378, 4, 1, "", "dev_util"], [379, 4, 1, "", "get_all_ivy_arrays_on_dev"], [380, 4, 1, "", "gpu_is_available"], [381, 4, 1, "", "num_cpu_cores"], [382, 4, 1, "", "num_gpus"], [383, 4, 1, "", "num_ivy_arrays_on_dev"], [384, 4, 1, "", "percent_used_mem_on_dev"], [385, 4, 1, "", "print_all_ivy_arrays_on_dev"], [386, 4, 1, "", "set_default_device"], [387, 4, 1, "", "set_split_factor"], [388, 4, 1, "", "split_factor"], [389, 4, 1, "", "split_func_call"], [394, 4, 1, "", "to_device"], [395, 4, 1, "", "total_mem_on_dev"], [396, 4, 1, "", "tpu_is_available"], [397, 4, 1, "", "unset_default_device"], [398, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[366, 2, 1, "", "__enter__"], [366, 2, 1, "", "__exit__"], [366, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[368, 2, 1, "", "__init__"], [368, 2, 1, "", "start"], [368, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[403, 4, 1, "", "abs"], [408, 4, 1, "", "acos"], [413, 4, 1, "", "acosh"], [418, 4, 1, "", "add"], [423, 4, 1, "", "asin"], [428, 4, 1, "", "asinh"], [433, 4, 1, "", "atan"], [438, 4, 1, "", "atan2"], [443, 4, 1, "", "atanh"], [448, 4, 1, "", "bitwise_and"], [453, 4, 1, "", "bitwise_invert"], [458, 4, 1, "", "bitwise_left_shift"], [463, 4, 1, "", "bitwise_or"], [468, 4, 1, "", "bitwise_right_shift"], [473, 4, 1, "", "bitwise_xor"], [478, 4, 1, "", "ceil"], [483, 4, 1, "", "cos"], [488, 4, 1, "", "cosh"], [493, 4, 1, "", "divide"], [498, 4, 1, "", "equal"], [503, 4, 1, "", "erf"], [508, 4, 1, "", "exp"], [513, 4, 1, "", "expm1"], [518, 4, 1, "", "floor"], [523, 4, 1, "", "floor_divide"], [528, 4, 1, "", "greater"], [533, 4, 1, "", "greater_equal"], [538, 4, 1, "", "isfinite"], [543, 4, 1, "", "isinf"], [548, 4, 1, "", "isnan"], [553, 4, 1, "", "less"], [558, 4, 1, "", "less_equal"], [563, 4, 1, "", "log"], [568, 4, 1, "", "log10"], [573, 4, 1, "", "log1p"], [578, 4, 1, "", "log2"], [583, 4, 1, "", "logaddexp"], [588, 4, 1, "", "logical_and"], [593, 4, 1, "", "logical_not"], [598, 4, 1, "", "logical_or"], [603, 4, 1, "", "logical_xor"], [605, 4, 1, "", "maximum"], [606, 4, 1, "", "minimum"], [610, 4, 1, "", "multiply"], [615, 4, 1, "", "negative"], [620, 4, 1, "", "not_equal"], [625, 4, 1, "", "positive"], [630, 4, 1, "", "pow"], [635, 4, 1, "", "remainder"], [640, 4, 1, "", "round"], [645, 4, 1, "", "sign"], [650, 4, 1, "", "sin"], [655, 4, 1, "", "sinh"], [660, 4, 1, "", "sqrt"], [665, 4, 1, "", "square"], [671, 4, 1, "", "subtract"], [676, 4, 1, "", "tan"], [677, 4, 1, "", "tanh"], [682, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[687, 4, 1, "", "all_equal"], [689, 4, 1, "", "arg_info"], [690, 4, 1, "", "arg_names"], [691, 4, 1, "", "array_equal"], [692, 4, 1, "", "arrays_equal"], [693, 4, 1, "", "assert_supports_inplace"], [694, 4, 1, "", "cache_fn"], [695, 4, 1, "", "clip_matrix_norm"], [698, 4, 1, "", "clip_vector_norm"], [699, 4, 1, "", "container_types"], [700, 4, 1, "", "copy_array"], [701, 4, 1, "", "cumprod"], [702, 4, 1, "", "cumsum"], [703, 4, 1, "", "current_backend_str"], [704, 4, 1, "", "default"], [705, 4, 1, "", "einops_rearrange"], [706, 4, 1, "", "einops_reduce"], [707, 4, 1, "", "einops_repeat"], [708, 4, 1, "", "exists"], [709, 4, 1, "", "floormod"], [710, 4, 1, "", "fourier_encode"], [711, 4, 1, "", "gather"], [715, 4, 1, "", "gather_nd"], [717, 4, 1, "", "get_all_arrays_in_memory"], [718, 4, 1, "", "get_array_mode"], [719, 4, 1, "", "get_min_base"], [720, 4, 1, "", "get_min_denominator"], [721, 4, 1, "", "get_nestable_mode"], [722, 4, 1, "", "get_num_dims"], [723, 4, 1, "", "get_referrers_recursive"], [724, 4, 1, "", "has_nans"], [725, 4, 1, "", "indices_where"], [726, 4, 1, "", "inplace_arrays_supported"], [727, 4, 1, "", "inplace_decrement"], [728, 4, 1, "", "inplace_increment"], [729, 4, 1, "", "inplace_update"], [730, 4, 1, "", "inplace_variables_supported"], [731, 4, 1, "", "is_array"], [732, 4, 1, "", "is_ivy_array"], [733, 4, 1, "", "is_ivy_container"], [734, 4, 1, "", "is_native_array"], [735, 4, 1, "", "match_kwargs"], [736, 4, 1, "", "multiprocessing"], [737, 4, 1, "", "num_arrays_in_memory"], [738, 4, 1, "", "one_hot"], [739, 4, 1, "", "print_all_arrays_in_memory"], [740, 4, 1, "", "queue_timeout"], [741, 4, 1, "", "scatter_flat"], [742, 4, 1, "", "scatter_nd"], [743, 4, 1, "", "set_array_mode"], [744, 4, 1, "", "set_min_base"], [745, 4, 1, "", "set_min_denominator"], [746, 4, 1, "", "set_nestable_mode"], [747, 4, 1, "", "set_queue_timeout"], [748, 4, 1, "", "set_shape_array_mode"], [749, 4, 1, "", "set_tmp_dir"], [750, 4, 1, "", "shape"], [751, 4, 1, "", "shape_array_mode"], [752, 4, 1, "", "stable_divide"], [753, 4, 1, "", "stable_pow"], [754, 4, 1, "", "supports_inplace"], [755, 4, 1, "", "tmp_dir"], [756, 4, 1, "", "to_ivy_shape"], [757, 4, 1, "", "to_list"], [758, 4, 1, "", "to_native_shape"], [763, 4, 1, "", "to_numpy"], [764, 4, 1, "", "to_scalar"], [765, 4, 1, "", "try_else_none"], [766, 4, 1, "", "unset_array_mode"], [767, 4, 1, "", "unset_nestable_mode"], [768, 4, 1, "", "unset_shape_array_mode"], [769, 4, 1, "", "unstack"], [770, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[771, 1, 1, "", "GradientTracking"], [776, 4, 1, "", "adam_step"], [780, 4, 1, "", "adam_update"], [783, 4, 1, "", "execute_with_gradients"], [787, 4, 1, "", "gradient_descent_update"], [792, 4, 1, "", "is_variable"], [796, 4, 1, "", "lamb_update"], [800, 4, 1, "", "lars_update"], [804, 4, 1, "", "optimizer_update"], [806, 4, 1, "", "set_with_grads"], [807, 4, 1, "", "stop_gradient"], [808, 4, 1, "", "unset_with_grads"], [809, 4, 1, "", "variable"], [810, 4, 1, "", "variable_data"], [811, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[771, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[813, 4, 1, "", "conv1d"], [814, 4, 1, "", "conv1d_transpose"], [815, 4, 1, "", "conv2d"], [816, 4, 1, "", "conv2d_transpose"], [817, 4, 1, "", "conv3d"], [818, 4, 1, "", "conv3d_transpose"], [822, 4, 1, "", "depthwise_conv2d"], [824, 4, 1, "", "dropout"], [825, 4, 1, "", "linear"], [826, 4, 1, "", "lstm_update"], [827, 4, 1, "", "multi_head_attention"], [828, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[833, 4, 1, "", "cholesky"], [837, 4, 1, "", "cross"], [840, 4, 1, "", "det"], [843, 4, 1, "", "diagonal"], [846, 4, 1, "", "eigh"], [849, 4, 1, "", "eigvalsh"], [852, 4, 1, "", "inv"], [856, 4, 1, "", "matmul"], [859, 4, 1, "", "matrix_norm"], [860, 4, 1, "", "matrix_power"], [863, 4, 1, "", "matrix_rank"], [866, 4, 1, "", "matrix_transpose"], [869, 4, 1, "", "outer"], [872, 4, 1, "", "pinv"], [875, 4, 1, "", "qr"], [876, 4, 1, "", "slogdet"], [879, 4, 1, "", "solve"], [882, 4, 1, "", "svd"], [885, 4, 1, "", "svdvals"], [888, 4, 1, "", "tensordot"], [891, 4, 1, "", "trace"], [894, 4, 1, "", "vecdot"], [897, 4, 1, "", "vector_norm"], [900, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[905, 4, 1, "", "binary_cross_entropy"], [910, 4, 1, "", "cross_entropy"], [915, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[921, 4, 1, "", "clip"], [926, 4, 1, "", "concat"], [930, 4, 1, "", "constant_pad"], [934, 4, 1, "", "expand_dims"], [938, 4, 1, "", "flip"], [942, 4, 1, "", "permute_dims"], [946, 4, 1, "", "repeat"], [951, 4, 1, "", "reshape"], [955, 4, 1, "", "roll"], [957, 4, 1, "", "split"], [961, 4, 1, "", "squeeze"], [965, 4, 1, "", "stack"], [969, 4, 1, "", "swapaxes"], [973, 4, 1, "", "tile"], [977, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[979, 4, 1, "", "fomaml_step"], [980, 4, 1, "", "maml_step"], [981, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[983, 4, 1, "", "all_nested_indices"], [984, 4, 1, "", "copy_nest"], [985, 4, 1, "", "index_nest"], [986, 4, 1, "", "insert_into_nest_at_index"], [987, 4, 1, "", "insert_into_nest_at_indices"], [988, 4, 1, "", "map"], [989, 4, 1, "", "map_nest_at_index"], [990, 4, 1, "", "map_nest_at_indices"], [991, 4, 1, "", "multi_index_nest"], [992, 4, 1, "", "nested_any"], [993, 4, 1, "", "nested_indices_where"], [994, 4, 1, "", "nested_map"], [995, 4, 1, "", "nested_multi_map"], [996, 4, 1, "", "prune_nest_at_index"], [997, 4, 1, "", "prune_nest_at_indices"], [998, 4, 1, "", "set_nest_at_index"], [999, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1004, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1007, 4, 1, "", "multinomial"], [1009, 4, 1, "", "randint"], [1011, 4, 1, "", "random_normal"], [1014, 4, 1, "", "random_uniform"], [1016, 4, 1, "", "seed"], [1017, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1019, 4, 1, "", "argmax"], [1020, 4, 1, "", "argmin"], [1021, 4, 1, "", "nonzero"], [1022, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1028, 4, 1, "", "unique_all"], [1033, 4, 1, "", "unique_counts"], [1038, 4, 1, "", "unique_inverse"], [1043, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1048, 4, 1, "", "argsort"], [1053, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1059, 4, 1, "", "einsum"], [1063, 4, 1, "", "max"], [1067, 4, 1, "", "mean"], [1071, 4, 1, "", "min"], [1075, 4, 1, "", "prod"], [1079, 4, 1, "", "std"], [1083, 4, 1, "", "sum"], [1087, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1092, 4, 1, "", "all"], [1097, 4, 1, "", "any"]], "ivy.inspection": [[1103, 4, 1, "", "add_array_specs"], [1104, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1107, 0, 0, "-", "activations"], [1110, 0, 0, "-", "converters"], [1112, 0, 0, "-", "initializers"], [1121, 0, 0, "-", "layers"], [1133, 0, 0, "-", "module"], [1135, 0, 0, "-", "norms"], [1137, 0, 0, "-", "optimizers"], [1143, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1108, 1, 1, "", "GEGLU"], [1109, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1108, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1109, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1111, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1112, 1, 1, "", "Constant"], [1114, 1, 1, "", "FirstLayerSiren"], [1115, 1, 1, "", "GlorotUniform"], [1112, 1, 1, "", "KaimingNormal"], [1117, 1, 1, "", "Ones"], [1118, 1, 1, "", "Siren"], [1112, 1, 1, "", "Uniform"], [1120, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1112, 2, 1, "", "__init__"], [1112, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1114, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1115, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1112, 2, 1, "", "__init__"], [1112, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1117, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1118, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1112, 2, 1, "", "__init__"], [1112, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1120, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1122, 1, 1, "", "Conv1D"], [1123, 1, 1, "", "Conv1DTranspose"], [1124, 1, 1, "", "Conv2D"], [1125, 1, 1, "", "Conv2DTranspose"], [1126, 1, 1, "", "Conv3D"], [1127, 1, 1, "", "Conv3DTranspose"], [1128, 1, 1, "", "DepthwiseConv2D"], [1129, 1, 1, "", "Dropout"], [1130, 1, 1, "", "LSTM"], [1131, 1, 1, "", "Linear"], [1132, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1122, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1123, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1124, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1125, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1126, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1127, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1128, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1129, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1130, 2, 1, "", "__init__"], [1130, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1131, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1132, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1134, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1134, 2, 1, "", "__init__"], [1134, 2, 1, "", "build"], [1134, 3, 1, "", "build_mode"], [1134, 3, 1, "", "built"], [1134, 2, 1, "", "check_submod_rets"], [1134, 2, 1, "", "get_mod_key"], [1134, 2, 1, "", "mod_depth"], [1134, 2, 1, "", "mod_height"], [1134, 2, 1, "", "mod_with_top_mod_key_chain"], [1134, 2, 1, "", "save_weights"], [1134, 2, 1, "", "show_mod_in_top_mod"], [1134, 2, 1, "", "show_structure"], [1134, 2, 1, "", "show_v_in_top_v"], [1134, 2, 1, "", "sub_mods"], [1134, 2, 1, "", "track_submod_call_order"], [1134, 2, 1, "", "track_submod_rets"], [1134, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1136, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1136, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1138, 1, 1, "", "Adam"], [1139, 1, 1, "", "LAMB"], [1140, 1, 1, "", "LARS"], [1141, 1, 1, "", "Optimizer"], [1142, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1138, 2, 1, "", "__init__"], [1138, 2, 1, "", "set_state"], [1138, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1139, 2, 1, "", "__init__"], [1139, 2, 1, "", "set_state"], [1139, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1140, 2, 1, "", "__init__"], [1140, 2, 1, "", "set_state"], [1140, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1141, 2, 1, "", "__init__"], [1141, 2, 1, "", "set_state"], [1141, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1142, 2, 1, "", "__init__"], [1142, 2, 1, "", "set_state"], [1142, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1144, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1144, 2, 1, "", "__init__"]], "ivy.verbosity": [[1147, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 119, 127, 136, 153], "handler": [0, 136], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1099], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 153], "competit": 15, "do": [15, 124], "work": [15, 21], "The": [15, 19, 138, 153], "arrai": [15, 23, 26, 120, 123, 129, 138, 166, 171, 176, 181, 186, 191, 197, 208, 213, 221, 227, 238, 243, 251, 257, 262, 270, 281, 286, 291, 296, 308, 314, 325, 331, 336, 341, 346, 352, 374, 392, 401, 406, 411, 416, 421, 426, 431, 436, 441, 446, 451, 456, 461, 466, 471, 476, 481, 486, 491, 496, 501, 506, 511, 516, 521, 526, 531, 536, 541, 546, 551, 556, 561, 566, 571, 576, 581, 586, 591, 596, 601, 608, 613, 618, 623, 628, 633, 638, 643, 648, 653, 658, 663, 669, 674, 680, 685, 713, 761, 774, 790, 820, 831, 836, 839, 842, 845, 848, 851, 854, 858, 862, 865, 868, 871, 874, 878, 881, 884, 887, 890, 893, 896, 899, 903, 908, 913, 919, 924, 928, 932, 936, 940, 944, 949, 953, 959, 963, 967, 971, 975, 1002, 1026, 1031, 1036, 1041, 1046, 1051, 1057, 1061, 1065, 1069, 1073, 1077, 1081, 1085, 1090, 1095], "api": [15, 20, 119, 123, 130, 136, 138, 140, 141], "why": [16, 124], "unifi": [16, 138], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1099], "set": [18, 63, 108, 127, 1023], "up": 18, "clone": 18, "ivi": [18, 19, 119, 122, 124, 125, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 208, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 303, 304, 308, 309, 310, 311, 314, 315, 316, 317, 319, 320, 322, 323, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 374, 375, 376, 377, 391, 392, 393, 394, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 682, 685, 686, 687, 688, 697, 698, 713, 714, 715, 716, 760, 761, 762, 763, 774, 775, 776, 777, 779, 780, 781, 783, 784, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 799, 800, 801, 803, 804, 805, 820, 821, 822, 823, 831, 832, 833, 834, 836, 837, 839, 840, 842, 843, 845, 846, 848, 849, 851, 852, 854, 855, 856, 858, 859, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 878, 879, 881, 882, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 919, 920, 921, 922, 924, 925, 926, 928, 929, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 953, 954, 955, 956, 959, 960, 961, 963, 964, 965, 967, 968, 969, 971, 972, 973, 975, 976, 977, 1002, 1003, 1004, 1005, 1009, 1010, 1013, 1014, 1015, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 139], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 134], "commit": [18, 19, 134], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 73, 78, 130, 139, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 196, 198, 206, 210, 214, 216, 219, 222, 224, 228, 230, 233, 236, 239, 241, 244, 246, 249, 252, 254, 256, 258, 261, 263, 266, 269, 271, 282, 284, 287, 289, 292, 294, 297, 299, 304, 309, 311, 315, 317, 320, 323, 326, 328, 332, 334, 337, 339, 342, 344, 347, 349, 353, 355, 375, 377, 391, 393, 402, 404, 407, 409, 412, 414, 417, 419, 422, 424, 427, 429, 432, 434, 437, 439, 442, 444, 447, 449, 452, 454, 457, 459, 462, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 497, 499, 502, 504, 507, 509, 512, 514, 517, 519, 522, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 557, 559, 562, 564, 567, 569, 572, 574, 577, 579, 582, 584, 587, 589, 592, 594, 597, 599, 602, 604, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 668, 670, 673, 675, 679, 681, 686, 688, 697, 714, 716, 760, 762, 775, 777, 779, 781, 784, 786, 788, 791, 793, 795, 797, 799, 801, 803, 805, 821, 823, 832, 834, 855, 904, 906, 909, 911, 914, 916, 920, 922, 925, 929, 933, 937, 941, 945, 947, 950, 954, 956, 960, 964, 968, 972, 976, 1003, 1005, 1010, 1013, 1015, 1025, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1047, 1049, 1052, 1054, 1058, 1062, 1066, 1070, 1074, 1078, 1082, 1086, 1091, 1093, 1096, 1098], "run": 19, "test": [19, 123, 124], "local": 19, "open": 20, "task": 20, "function": [20, 120, 124, 126, 128, 130, 131, 132, 136, 141, 153], "format": [20, 134], "frontend": [20, 125, 141], "build": [21, 136], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 153], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 37, 82, 124, 131, 139, 153, 273, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "class": [22, 138, 1106], "activ": [24, 74, 164, 1107], "arraywithactiv": 25, "convers": 29, "args_to_contain": 30, "args_to_ivi": 31, "args_to_n": 32, "to_ivi": 33, "to_n": 34, "creation": [35, 80, 203], "arraywithcr": 36, "type": [37, 82, 126, 131, 153, 273], "arraywithdatatyp": 38, "devic": [39, 84, 120, 132, 366], "arraywithdevic": 40, "elementwis": [41, 86, 399], "arraywithelementwis": 42, "gener": [43, 88, 124, 683], "arraywithgener": 44, "gradient": [45, 90, 771], "arraywithgradi": 46, "imag": [47, 92], "arraywithimag": 48, "layer": [49, 94, 812, 1121], "arraywithlay": 50, "linear": [51, 96, 825, 829, 1131], "algebra": [51, 96, 829], "arraywithlinearalgebra": 52, "loss": [53, 98, 901], "arraywithloss": 54, "manipul": [55, 100, 917], "arraywithmanipul": 56, "norm": [57, 102, 1000, 1135], "arraywithnorm": 58, "random": [59, 104, 1006], "arraywithrandom": 60, "search": [61, 106, 1018], "arraywithsearch": 62, "arraywithset": 64, "sort": [65, 110, 1044, 1050, 1051, 1052, 1053], "arraywithsort": 66, "statist": [67, 112, 1055], "arraywithstatist": 68, "util": [69, 114, 1088], "arraywithutil": 70, "wrap": [71, 116, 128], "add_ivy_array_instance_method": 72, "containerwithactiv": 75, "base": 76, "containerbas": 77, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": 119, "design": [119, 135, 1099], "argument": [120, 131, 132, 133], "exampl": [120, 122, 125, 134], "out": [120, 133], "dtype": [120, 307, 308, 309, 310], "number": 120, "oper": [120, 138, 153], "integ": 120, "sequenc": 120, "nestabl": [120, 126, 130], "docstr": [121, 122], "tan": [122, 672, 674, 675, 676], "roll": [122, 952, 953, 954, 955], "add": [122, 415, 416, 417, 418], "hypothesi": 124, "import": 124, "strategi": 124, "integr": 124, "we": 124, "need": 124, "helper": 124, "how": 124, "write": 124, "effect": 124, "bonu": 124, "extend": 124, "featur": 124, "self": 124, "consist": 124, "explicit": 124, "test_array_funct": 124, "introduct": 125, "primari": 126, "composit": 126, "mix": 126, "standalon": 126, "conveni": 126, "nativ": 129, "handl": 129, "instanc": [130, 138], "method": [130, 138, 139], "static": 130, "special": 130, "modul": [131, 132, 140, 1133, 1134], "other": [131, 132], "unsupport": 131, "inplac": 133, "updat": 133, "copi": 133, "lint": 134, "check": [134, 153], "hook": 134, "automat": 134, "reformat": 134, "befor": 134, "block": 136, "framework": [136, 137, 1106], "graph": [136, 141], "compil": [136, 141, 200, 201], "monkei": 138, "patch": 138, "construct": 139, "represent": 139, "recurs": 139, "built": 139, "ins": 139, "access": 139, "save": 139, "load": 139, "comparison": 139, "custom": [139, 153], "case": 139, "compartment": 139, "configur": 139, "network": [139, 141], "weight": 139, "state": [140, 153], "initi": [140, 1112], "optim": [140, 1137, 1141], "transpil": 141, "role": 141, "convert": [141, 1110], "model": [141, 148, 153], "builder": 143, "ecosystem": 144, "gym": [145, 152], "mech": 146, "memori": [147, 152], "robot": [149, 152], "vision": [150, 152], "extens": [151, 1099], "appli": 152, "librari": 152, "mechan": 152, "faq": 153, "maintain": 153, "version": 153, "dynam": 153, "size": 153, "shape": [153, 750, 1023, 1024, 1028, 1029, 1033, 1039, 1043], "control": 153, "flow": 153, "auto": 153, "differenti": 153, "replica": 153, "parallel": 153, "support": 153, "altern": 153, "structur": 153, "func": 154, "wrapper": 154, "handle_nest": 155, "handle_out_argu": 156, "infer_devic": 157, "infer_dtyp": 158, "inputs_to_ivy_arrai": 159, "inputs_to_native_arrai": 160, "outputs_to_ivy_arrai": 161, "to_native_arrays_and_back": 162, "gelu": [165, 166, 167, 168, 1109], "static_gelu": 169, "leaky_relu": [170, 171, 172, 173], "static_leaky_relu": 174, "relu": [175, 176, 177, 178], "static_relu": 179, "sigmoid": [180, 181, 182, 183], "static_sigmoid": 184, "softmax": [185, 186, 187, 188], "static_softmax": 189, "softplu": [190, 191, 192, 193], "static_softplu": 194, "tanh": [195, 197, 198, 199, 677], "static_tanh": 196, "constant": 202, "note": [203, 220, 223], "arang": [204, 205], "static_arang": 206, "asarrai": [207, 208, 209], "static_asarrai": 210, "empti": 211, "empty_lik": [212, 213, 214, 215], "static_empty_lik": 216, "ey": [217, 218], "static_ey": 219, "from_dlpack": [220, 221, 222, 223], "static_from_dlpack": 224, "full": 225, "full_lik": [226, 227, 228, 229], "static_full_lik": 230, "linspac": [231, 232], "static_linspac": 233, "logspac": [234, 235], "static_logspac": 236, "meshgrid": [237, 238, 239, 240], "static_meshgrid": 241, "native_arrai": [242, 243, 244, 245], "static_native_arrai": 246, "ones": [247, 248], "static_on": 249, "ones_lik": [250, 251, 252, 253], "static_ones_lik": 254, "tril": [255, 257, 258, 259], "static_tril": 256, "triu": [260, 262, 263, 264], "static_triu": 261, "zero": [265, 267, 1120], "static_zero": 266, "zeros_lik": [268, 270, 271, 272], "static_zeros_lik": 269, "as_ivy_dtyp": 278, "as_native_dtyp": 279, "astyp": [280, 281, 282, 283], "static_astyp": 284, "broadcast_arrai": [285, 286, 287, 288], "static_broadcast_arrai": 289, "broadcast_to": [290, 291, 292, 293], "static_broadcast_to": 294, "can_cast": [295, 296, 297, 298], "static_can_cast": 299, "closest_valid_dtyp": 300, "default_dtyp": 301, "default_float_dtyp": [302, 303], "static_default_float_dtyp": 304, "default_int_dtyp": 305, "default_uint_dtyp": 306, "static_dtyp": 311, "dtype_bit": 312, "finfo": [313, 314, 315, 316], "static_finfo": 317, "function_supported_dtyp": [318, 319], "static_function_supported_dtyp": 320, "function_unsupported_dtyp": [321, 322], "static_function_unsupported_dtyp": 323, "iinfo": [324, 325, 326, 327], "static_iinfo": 328, "invalid_dtyp": 329, "is_bool_dtyp": [330, 331, 332, 333], "static_is_bool_dtyp": 334, "is_float_dtyp": [335, 336, 337, 338], "static_is_float_dtyp": 339, "is_int_dtyp": [340, 341, 342, 343], "static_is_int_dtyp": 344, "is_uint_dtyp": [345, 346, 347, 348], "static_is_uint_dtyp": 349, "promote_typ": 350, "result_typ": [351, 352, 353, 354], "static_result_typ": 355, "set_default_dtyp": 356, "set_default_float_dtyp": 357, "set_default_int_dtyp": 358, "set_default_uint_dtyp": 359, "type_promote_arrai": 360, "unset_default_dtyp": 361, "unset_default_float_dtyp": 362, "unset_default_int_dtyp": 363, "unset_default_uint_dtyp": 364, "valid_dtyp": 365, "profil": 368, "as_ivy_dev": 369, "as_native_dev": 370, "clear_mem_on_dev": 371, "default_devic": 372, "dev": [373, 374, 375, 376], "static_dev": 377, "dev_util": 378, "get_all_ivy_arrays_on_dev": 379, "gpu_is_avail": 380, "num_cpu_cor": 381, "num_gpu": 382, "num_ivy_arrays_on_dev": 383, "percent_used_mem_on_dev": 384, "print_all_ivy_arrays_on_dev": 385, "set_default_devic": 386, "set_split_factor": 387, "split_factor": 388, "split_func_cal": 389, "to_devic": [390, 392, 393, 394], "static_to_devic": 391, "total_mem_on_dev": 395, "tpu_is_avail": 396, "unset_default_devic": 397, "used_mem_on_dev": 398, "ab": [400, 401, 402, 403], "static_ab": 404, "aco": [405, 406, 407, 408], "static_aco": 409, "acosh": [410, 411, 412, 413], "static_acosh": 414, "static_add": 419, "asin": [420, 421, 422, 423], "static_asin": 424, "asinh": [425, 426, 427, 428], "static_asinh": 429, "atan": [430, 431, 432, 433], "static_atan": 434, "atan2": [435, 436, 437, 438], "static_atan2": 439, "atanh": [440, 441, 442, 443], "static_atanh": 444, "bitwise_and": [445, 446, 447, 448], "static_bitwise_and": 449, "bitwise_invert": [450, 451, 452, 453], "static_bitwise_invert": 454, "bitwise_left_shift": [455, 456, 457, 458], "static_bitwise_left_shift": 459, "bitwise_or": [460, 461, 462, 463], "static_bitwise_or": 464, "bitwise_right_shift": [465, 466, 467, 468], "static_bitwise_right_shift": 469, "bitwise_xor": [470, 471, 472, 473], "static_bitwise_xor": 474, "ceil": [475, 476, 477, 478], "static_ceil": 479, "co": [480, 481, 482, 483], "static_co": 484, "cosh": [485, 486, 487, 488], "static_cosh": 489, "divid": [490, 491, 492, 493], "static_divid": 494, "equal": [495, 496, 497, 498], "static_equ": 499, "erf": [500, 501, 502, 503], "static_erf": 504, "exp": [505, 506, 507, 508], "static_exp": 509, "expm1": [510, 511, 512, 513], "static_expm1": 514, "floor": [515, 516, 517, 518], "static_floor": 519, "floor_divid": [520, 521, 522, 523], "static_floor_divid": 524, "greater": [525, 526, 527, 528], "static_great": 529, "greater_equ": [530, 531, 532, 533], "static_greater_equ": 534, "isfinit": [535, 536, 537, 538], "static_isfinit": 539, "isinf": [540, 541, 542, 543], "static_isinf": 544, "isnan": [545, 546, 547, 548], "static_isnan": 549, "less": [550, 551, 552, 553], "static_less": 554, "less_equ": [555, 556, 557, 558], "static_less_equ": 559, "log": [560, 561, 562, 563], "static_log": 564, "log10": [565, 566, 567, 568], "static_log10": 569, "log1p": [570, 571, 572, 573], "static_log1p": 574, "log2": [575, 576, 577, 578], "static_log2": 579, "logaddexp": [580, 581, 582, 583], "static_logaddexp": 584, "logical_and": [585, 586, 587, 588], "static_logical_and": 589, "logical_not": [590, 591, 592, 593], "static_logical_not": 594, "logical_or": [595, 596, 597, 598], "static_logical_or": 599, "logical_xor": [600, 601, 602, 603], "static_logical_xor": 604, "maximum": 605, "minimum": 606, "multipli": [607, 608, 609, 610], "static_multipli": 611, "neg": [612, 613, 614, 615], "static_neg": 616, "not_equ": [617, 618, 619, 620], "static_not_equ": 621, "posit": [622, 623, 624, 625], "static_posit": 626, "pow": [627, 628, 629, 630], "static_pow": 631, "remaind": [632, 633, 634, 635], "static_remaind": 636, "round": [637, 638, 639, 640], "static_round": 641, "sign": [642, 643, 644, 645], "static_sign": 646, "sin": [647, 648, 649, 650], "static_sin": 651, "sinh": [652, 653, 654, 655], "static_sinh": 656, "sqrt": [657, 658, 659, 660], "static_sqrt": 661, "squar": [662, 663, 664, 665], "static_squar": 666, "subtract": [667, 669, 670, 671], "static_subtract": 668, "static_tan": 673, "trunc": [678, 680, 681, 682], "static_trunc": 679, "all_equ": [684, 685, 686, 687], "static_all_equ": 688, "arg_info": 689, "arg_nam": 690, "array_equ": 691, "arrays_equ": 692, "assert_supports_inplac": 693, "cache_fn": 694, "clip_matrix_norm": 695, "clip_vector_norm": [696, 697, 698], "container_typ": 699, "copy_arrai": 700, "cumprod": 701, "cumsum": 702, "current_backend_str": 703, "default": 704, "einops_rearrang": 705, "einops_reduc": 706, "einops_repeat": 707, "exist": 708, "floormod": 709, "fourier_encod": 710, "gather": 711, "gather_nd": [712, 713, 714, 715], "static_gather_nd": 716, "get_all_arrays_in_memori": 717, "get_array_mod": 718, "get_min_bas": 719, "get_min_denomin": 720, "get_nestable_mod": 721, "get_num_dim": 722, "get_referrers_recurs": 723, "has_nan": 724, "indices_wher": 725, "inplace_arrays_support": 726, "inplace_decr": 727, "inplace_incr": 728, "inplace_upd": 729, "inplace_variables_support": 730, "is_arrai": 731, "is_ivy_arrai": 732, "is_ivy_contain": 733, "is_native_arrai": 734, "match_kwarg": 735, "multiprocess": 736, "num_arrays_in_memori": 737, "one_hot": 738, "print_all_arrays_in_memori": 739, "queue_timeout": 740, "scatter_flat": 741, "scatter_nd": 742, "set_array_mod": 743, "set_min_bas": 744, "set_min_denomin": 745, "set_nestable_mod": 746, "set_queue_timeout": 747, "set_shape_array_mod": 748, "set_tmp_dir": 749, "shape_array_mod": 751, "stable_divid": 752, "stable_pow": 753, "supports_inplac": 754, "tmp_dir": 755, "to_ivy_shap": 756, "to_list": 757, "to_native_shap": 758, "to_numpi": [759, 761, 762, 763], "static_to_numpi": 760, "to_scalar": 764, "try_else_non": 765, "unset_array_mod": 766, "unset_nestable_mod": 767, "unset_shape_array_mod": 768, "unstack": 769, "value_is_nan": 770, "adam_step": [773, 774, 775, 776], "static_adam_step": 777, "adam_upd": [778, 779, 780], "static_adam_upd": 781, "execute_with_gradi": [782, 783], "static_execute_with_gradi": 784, "gradient_descent_upd": [785, 786, 787], "static_gradient_descent_upd": 788, "is_vari": [789, 790, 791, 792], "static_is_vari": 793, "lamb_upd": [794, 795, 796], "static_lamb_upd": 797, "lars_upd": [798, 799, 800], "static_lars_upd": 801, "optimizer_upd": [802, 803, 804], "static_optimizer_upd": 805, "set_with_grad": 806, "stop_gradi": 807, "unset_with_grad": 808, "variabl": 809, "variable_data": 810, "with_grad": 811, "conv1d": [813, 1122], "conv1d_transpos": 814, "conv2d": [815, 1124], "conv2d_transpos": 816, "conv3d": [817, 1126], "conv3d_transpos": 818, "depthwise_conv2d": [819, 820, 821, 822], "static_depthwise_conv2d": 823, "dropout": [824, 1129], "lstm_updat": 826, "multi_head_attent": 827, "scaled_dot_product_attent": 828, "choleski": [830, 831, 832, 833], "static_choleski": 834, "cross": [835, 836, 837], "det": [838, 839, 840], "diagon": [841, 842, 843], "eigh": [844, 845, 846], "eigvalsh": [847, 848, 849], "inv": [850, 851, 852], "matmul": [853, 854, 855, 856], "matrix_norm": [857, 858, 859], "matrix_pow": 860, "matrix_rank": [861, 862, 863], "matrix_transpos": [864, 865, 866], "outer": [867, 868, 869], "pinv": [870, 871, 872], "qr": [873, 874, 875], "slogdet": 876, "solv": [877, 878, 879], "svd": [880, 881, 882], "svdval": [883, 884, 885], "tensordot": [886, 887, 888], "trace": [889, 890, 891], "vecdot": [892, 893, 894], "vector_norm": [895, 896, 897], "vector_to_skew_symmetric_matrix": [898, 899, 900], "binary_cross_entropi": [902, 903, 904, 905], "static_binary_cross_entropi": 906, "cross_entropi": [907, 908, 909, 910], "static_cross_entropi": 911, "sparse_cross_entropi": [912, 913, 914, 915], "static_sparse_cross_entropi": 916, "clip": [918, 919, 920, 921], "static_clip": 922, "concat": [923, 924, 925, 926], "constant_pad": [927, 928, 929, 930], "expand_dim": [931, 932, 933, 934], "flip": [935, 936, 937, 938], "permute_dim": [939, 940, 941, 942], "repeat": [943, 944, 945, 946], "static_repeat": 947, "reshap": [948, 949, 950, 951], "static_rol": 956, "split": 957, "squeez": [958, 959, 960, 961], "stack": [962, 963, 964, 965], "swapax": [966, 967, 968, 969], "tile": [970, 971, 972, 973], "zero_pad": [974, 975, 976, 977], "meta": 978, "fomaml_step": 979, "maml_step": 980, "reptile_step": 981, "nest": 982, "all_nested_indic": 983, "copy_nest": 984, "index_nest": 985, "insert_into_nest_at_index": 986, "insert_into_nest_at_indic": 987, "map": 988, "map_nest_at_index": 989, "map_nest_at_indic": 990, "multi_index_nest": 991, "nested_ani": 992, "nested_indices_wher": 993, "nested_map": 994, "nested_multi_map": 995, "prune_nest_at_index": 996, "prune_nest_at_indic": 997, "set_nest_at_index": 998, "set_nest_at_indic": 999, "layer_norm": [1001, 1002, 1003, 1004], "static_layer_norm": 1005, "multinomi": 1007, "randint": [1008, 1009], "static_randint": 1010, "random_norm": 1011, "random_uniform": [1012, 1013, 1014], "static_random_uniform": 1015, "seed": 1016, "shuffl": 1017, "argmax": 1019, "argmin": 1020, "nonzero": 1021, "where": 1022, "depend": [1023, 1024, 1028, 1029, 1033, 1039, 1043], "output": [1023, 1024, 1028, 1029, 1033, 1039, 1043], "unique_al": [1024, 1026, 1027, 1028], "static_unique_al": 1025, "unique_count": [1029, 1031, 1032, 1033], "static_unique_count": 1030, "unique_invers": [1034, 1036, 1037, 1038], "static_unique_invers": 1035, "unique_valu": [1039, 1041, 1042, 1043], "static_unique_valu": 1040, "argsort": [1045, 1046, 1047, 1048], "static_argsort": 1049, "static_sort": 1054, "einsum": [1056, 1057, 1058, 1059], "max": [1060, 1061, 1062, 1063], "mean": [1064, 1065, 1066, 1067], "min": [1068, 1069, 1070, 1071], "prod": [1072, 1073, 1074, 1075], "std": [1076, 1077, 1078, 1079], "sum": [1080, 1081, 1082, 1083], "var": [1084, 1085, 1086, 1087], "all": [1089, 1090, 1091, 1092], "static_al": 1093, "ani": [1094, 1095, 1096, 1097], "static_ani": 1098, "content": 1099, "overview": 1099, "quick": 1099, "start": 1099, "roadmap": [1099, 1105], "citat": 1099, "inspect": 1102, "add_array_spec": 1103, "fn_array_spec": 1104, "geglu": 1108, "to_ivy_modul": 1111, "firstlayersiren": 1114, "glorotuniform": 1115, "Ones": 1117, "siren": 1118, "conv1dtranspos": 1123, "conv2dtranspos": 1125, "conv3dtranspos": 1127, "depthwiseconv2d": 1128, "lstm": 1130, "multiheadattent": 1132, "layernorm": 1136, "adam": 1138, "lamb": 1139, "lar": 1140, "sgd": 1142, "sequenti": [1143, 1144], "verbos": 1146, "cprint": 1147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})